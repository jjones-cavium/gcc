# Copyright 2007 Cavium Networks, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

load_lib scangcda.exp
set tp $subdir/merge-gcda.exp:

# Only run this for octeon-elf at this point as we assume the coreid
# to be attached to the filename.  Also we can't run for serial since
# that is more complicated, see serial-profopt.exp.
if {![string match "octeon-elf-sim*" [target_info name]]} {
    unsupported "$tp simulator-only test"
    return
}
# Appear as PASS->UNSUPPORTED transition if we no longer run this test.
pass "$tp simulator-only test"

# remote_file functionality is very basic for a real remote host.
if [is_remote host] {
    unsupported "$tp host is local"
    return
}
pass "$tp host is local"

set merge_gcda [lookfor_file $tool_root_dir gcc/merge-gcda]
if { $merge_gcda == "" } {
    set merge_gcda [transform merge-gcda ]
}

if { [gcc_target_compile $srcdir/$subdir/merge-gcda-1.c merge-gcda-1.o object \
	 "additional_flags=-fprofile-generate additional_flags=-O2"] != "" } {
    fail "$tp Compiling merge-gcda-1.c"
    return
}
pass "$tp Compiling merge-gcda-1.c"

if { [gcc_target_compile $srcdir/$subdir/merge-gcda-2.c merge-gcda-2.o object \
	 "additional_flags=-fprofile-generate additional_flags=-O2"] != "" } {
    fail "$tp Compiling merge-gcda-2.c"
    return
}
pass "$tp Compiling merge-gcda-2.c"

if { [gcc_target_compile { merge-gcda-1.o merge-gcda-2.o } prog executable \
	  "additional_flags=-fprofile-generate additional_flags=-O2"] != "" } {
    fail "$tp Linking prog"
    return
}
pass "$tp Linking prog"

# Avoid implicit merging if some random files are already there.
set gcda [glob -nocomplain *.gcda*]
if { $gcda != "" } {
    eval file delete $gcda
}

set OCTEON_NUMCORES 4
set result [gcc_load prog]
unset OCTEON_NUMCORES

file mkdir output/dir1 output/dir2

set result [remote_exec host $merge_gcda {-no_such_option}]
if { [lindex $result 0] != 0
     || [regexp -inline {invalid option.*Usage:} [lindex $result 1]]} {
    pass "$tp invalid option"
} else {
    fail "$tp invalid option"
}

# Implicit merge.

set result [remote_exec host $merge_gcda {-o output/dir1}]
if { [lindex $result 0] == 0 } {
    pass "$tp implicit merge, exit status"
} else {
    fail "$tp implicit merge, exit status"
}

check_gcda "$tp implicit merge, merge-gcda-1.c" output/dir1/merge-gcda-1.gcda \
    { { arcs 170|230 } \
	  { PROGRAM [4-9] 4 .* 100 400 } }

# (4 80) + (4 20) + (3 0) + (3 40) -> (4 60)
check_gcda "$tp implicit merge, merge-gcda-2.c" output/dir1/merge-gcda-2.gcda \
    { { arcs 400 } \
	  { single 4 60 400 } \
	  { PROGRAM [4-9] 4 .* 100 400 } }

# Explicit file merge.

set result \
    [remote_exec host $merge_gcda {merge-gcda-1.gcda0 merge-gcda-1.gcda3}]
if { [lindex $result 0] == 0 } {
    pass "$tp explicit file merge, exit status"
} else {
    fail "$tp explicit file merge, exit status"
}

check_gcda "$tp explicit file merge" merge-gcda-1.gcda \
    { { arcs 80|120 } \
	  { PROGRAM [2-9] 2 .* 100 200 } }

# Explicit weighted file merge.

set result \
    [remote_exec host $merge_gcda { merge-gcda-2.gcda0 merge-gcda-2.gcda1 \
					merge-gcda-2.gcda2 merge-gcda-2.gcda3 \
					-o factored --factors=1:1:1:3 }]
if { [lindex $result 0] == 0 } {
    pass "$tp weighted file merge, exit status"
} else {
    fail "$tp weighted file merge, exit status"
}

check_gcda "$tp weighted file merge" factored \
    { { arcs 600 } \
	  { single 3 20 600 } \
	  { PROGRAM [2-9] 6 .* 300 600 } }

# Explicit directory merge

file rename -force merge-gcda-1.gcda output/dir2
file rename -force merge-gcda-2.gcda0 output/dir2/merge-gcda-2.gcda

set result [remote_exec host $merge_gcda {output/dir1 output/dir2}]
if { [lindex $result 0] == 0 } {
    pass "$tp directory merge, exit status"
} else {
    fail "$tp directory merge, exit status"
}

check_gcda "$tp directory merge, merge-gcda-1" merge-gcda-1.gcda \
    { { arcs 250|350 } \
	  { PROGRAM [2-9] 6 .* 100 600 } }

check_gcda "$tp directory merge, merge-gcda-2" merge-gcda-2.gcda \
    { { arcs 500 } \
	  { single 4 140 500 } \
	  { PROGRAM [2-9] 5 .* 100 500 } }

eval file delete factored [glob -nocomplain merge-gcda-\[12\].gcda*]
file delete -force output
