2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (sync_compare_and_swap<mode>): Delete
	(sync_add<mode>): Delete.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (UNSPEC_MEMORY_BARRIER_R): New unspec.
	(memory_barrier_r): New expand.
	(*memory_barrier_r): New pattern.
	(atomic_load<mode>): For octeon emit memory_barrier_r so
	the load will be done at the correct location.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (UNSPEC_ATOMIC_OP): New unspec.
	(atomic_add<mode>): New expand.
	(atomic_add<mode>_llsc): New pattern.
	(atomic_add<mode>_saa): New pattern.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (INT1): New mode iterator.
	* config/mips/sync.md (UNSPEC_MEMORY_BARRIER_W): New unspec.
	(memory_barrier_w): New expand.
	(memory_barrier_w_internal): New pattern.
	(atomic_store<mode>): New expand.
	(atomic_load<mode>): New expand.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (atomic_add_fetch<mode>): New pattern.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_process_sync_loop): Always emit
	syncw for Octeon instead of sync.
	* config/mips/mips.opt (msyncw): Remove option.
	* config/mips/sync.md (atomic_compare_and_swap<mode>): Add a few
	comments about the operands.
	(atomic_exchange<mode>_law): Don't emit syncw after the law/lac/las.
	(atomic_fetch_add<mode>_laa): Don't emit syncw after the laa/lad/lai.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.opt (msyncw): New option.
	* config/mips/mips.c (mips_process_sync_loop): Emit
	a sync only if model is MEMMODEL_SEQ_CST and not when
	msyncw is enabled.
	Only emit one syncw for Octeon2.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/predicates.md (law_lac_las_operand): New predicate.
	* config/mips/sync.md (atomic_exchange<mode>_law): Add support
	for emitting las and lac.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (ISA_HAS_LAW): New define.
	* config/mips/sync.md (atomic_exchange<mode>): Add support
	for emitting law.
	(gen_atomic_exchange<mode>_llsc): Disable it for ISA_HAS_LAW.
	(atomic_exchange<mode>_law): New pattern.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/constraints.md (YD): New constraint.
	(YI): Likewise.
	* config/mips/predicates.md (lai_operand): New predicate.
	(lad_operand): Likewise.
	(laa_lai_lad_operand): Likewise.
	* config/mips/sync.md (atomic_fetch_add<mode>_laa):
	Add support for emitting lai and lad.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (ISA_HAS_LAA): New define.
	(ISA_HAS_SAA): Likewise.
	* config/mips/sync.md (atomic_fetch_add<mode>): Add support
	for emitting laa.
	(atomic_fetch_add<mode>_llsc): Disable it for
	ISA_HAS_LAA.
	(atomic_fetch_add<mode>_laa): New pattern.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* passes.c (init_optimization_passes): Add pass_tree_ifcombine
	and pass_merge_phi before pass_late_phiopt.

	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-6.c: Look at ifcombine1 instead
	of ifcombine.
	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-7.c: Look at optimized instead
	of ifcombine.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md: Add to the comment about
	"Bit field extract patterns".

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (<su>mulsi3_highpart): Disable if we have dmul3.
	(<su>mulsi3_highpart_internal): Likewise.

	* testsuite/gcc.target/mips/octeon-dmul-4.c: New testcase.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/i386/i386.md (*jcc_bt<mode>_mask): Use SWI48 for the modes
	of the and.  Remove simplify_gen_subreg since it is already in the correct
	mode.
	* fwprop.c (propagate_rtx): Take a mask argument.
	If propagate_rtx_1 fails, try using the mask to remove
	an extend from a pseudo-register.
	(forward_propagate_asm): Update call to propagate_rtx.
	(forward_propagate_and_simplify): If the lhs of the set
	is a zero_extract, then pass a mask of the bits which we need.
	* simplify-rtx.c  (simplify_unary_operation_1 <case TRUNCATE>):
        Handle a truncation of an and if the mask is the same as the
        mode mask.
 	(simplify_unary_operation_1 <case ZERO_EXTEND>): Transform
	(zero_extend:SI (subreg:HI foo:DI)) to (subreg:SI foo:DI)
	if we know the zero_extend is not needed.
	(simplify_binary_operation_1): Transform "(and (subreg X) C)"
	into (subreg (and X C)) for lowpart subregs.
	(simplify_ternary_operation <case ZERO_EXTRACT>):
	If op2 is in the same mode as op0 and was a subreg, then create
	a subreg which is the same mode as op0.

	* testsuite/gcc.dg/extend-1.c: New testcase.
	* testsuite/gcc.dg/extend-2.c: New testcase.
	* testsuite/gcc.target/mips/ins-10.c: New testcase.

	Revert:
	* testsuite/gcc.target/mips/extend-1.c: Check for
	two sll and only three dsll/dsra and one seb and
	one seh.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/tree-ssa/ssa-fre-4.c: Don't compile on mips.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	Bug #3596
	* combine.c (simplify_shift_const_1 <case TRUNCATE>): Handle ASHIFTRT
	like LSHIFTRT but use ASHIFTRT as the final result.

	* testsuite/gcc.target/mips/shift-1.c: New testcase.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (LOGICAL_OP_NON_SHORT_CIRCUIT): Delete define.
	* tree-ssa-ifcombine.c (LOGICAL_OP_NON_SHORT_CIRCUIT): Define if not
	already defined.
	(ifcombine_ifandif): Use LOGICAL_OP_NON_SHORT_CIRCUIT instead of
	checking BRANCH_COST.
	(ifcombine_iforif): Likewise.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	Bug #3266
	* fold-const.c (build_range_check): Use either
	unsigned_type_node or integer_type_node for the
	type if the precision of the original type is smaller
	than the precision of integer_type_node.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

        Bug #2837
        * config/mips/mips.c (TARGET_PROMOTE_PROTOTYPES): Remove definition.
	* config/mips/mips.md (*baddu_di_eb): New pattern to handle subreg from qi
	to di mode.
	(*baddu_di_el): Likewise.

	* testsuite/gcc.target/mips/ext-2.c: There should be no truncate here.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	continue bug #4296
	* config/mips/octeon.md (octeon_condmove): Split into ...
	(octeon_condmove_o1): This and ...
	(octeon_condmove_o2): This.  Also change the latency to 3.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

        start of bug #4296
        * config/mips/octeon.md (octeon_arith): Don't match slt for the type.
        (octeon_set): New reservation.
        Add bypass between octeon_set and octeon_brj_o2.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	start of Bug #4290
	* config/mips/mips.c (mips_block_move_straight): Use 32bits loads
	if the length is equal to 4 bytes and either of the alignments
	is greater than or equal to 32bits.  Also use 32bits when either
	of the alignment is equal to 32bits not just when both are equal.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_rtx_costs <case TRUNCATE>): The truncate
	inside a sign_extend or a zero_extend is free.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	* combine.c (simplify_logical): Add in_cond argument.
        Simplify when the both operands are subregs.
        (combine_simplify_rtx): Update call to simplify_logical.
	* simplify-rtx.c (simplify_unary_operation_1 <case SIGN_EXTEND>):
	(sign_extend:M (and:M X (const_int I)) can be converted over to
	using zero_extend if I does not have the sign bit set.

	* testsuite/gcc.target/mips/ext-15.c: New testcase.
	* testsuite/gcc.target/mips/ext-5.c: Also allow dext instead of just ext.

2012-07-31  Adam Nemet  <anemet@caviumnetworks.com>

	* mips.md (split for equality comparison with non-zero constant): New.

	* testsuite/gcc.target/mips/ext-14.c: New testcase.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	Bug #2970
	* simplify-rtx.c (simplify_subreg): Simplify
	a paradoxical subreg of a truncate.

	* testsuite/gcc.target/mips/extend-1.c: Check for
	two sll and only three dsll/dsra and one seb and
	one seh.
	* testsuite/gcc.target/mips/truncate-13.c: New testcase.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_immediate_operand_p): Remove.
	(mips_rtx_costs): Cost of CONST and SYMBOL_REF are zero.
	Remove the code that says constants are (close to) free.
	* config/mips/predicates.md (move_operand): Remove old comment that does
	not apply. Return true for CONST_INT.
	* config/mips/mips.md: New splitter for splitting of constant integers.

	* testsuite/gcc.target/mips/const-anchor-1.c: Support subtracting 2.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #2923
	* combine.c (find_split_point): Handle PLUS/MINUS specially
	when there is no split point for either operands.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #4367
	* expr.c (expand_cond_expr_using_xors): New function.
	(expand_expr_real_2 <case COND_EXPR>): Call expand_cond_expr_using_mask
	before expand_cond_expr_using_cmove.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        Bug #4274
        * expr.c (expand_cond_expr_using_mask): New function.
        (expand_expr_real_2 <case COND_EXPR>): Call expand_cond_expr_using_mask
        before trying any other case.

	* testsuite/testsuite/gcc.target/mips/movcc-6.c: New testcase.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* cse.c (se_insn): Optimize zero_extract even if the cost of the constant
        is greater than the const of the register.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_zero_extend_cost): Fix
	cost of zero extending to DImode from SImode for
	ISA_HAS_EXT_INS.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_rtx_costs): Provide the correct cost of an
	expanded ins/dins.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #3210
	* combine.c (simplify_comparison): Use gen_lowpart_or_truncate when
	truncating for the comparision.

	* testsuite/gcc.c-torture/execute/20110418-1.c: New testcase.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        * passes.c (init_optimization_passes): Move pass_initialize_regs before
        the first RTL CSE.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        * tree-pass.h (pass_late_phiopt): New variable.
        * passes.c (init_optimization_passes): Use pass_late_phiopt for the
        last pass_phiopt.
        * tree-ssa-phiopt.c
	(tree_ssa_phiopt_worker): Add late argument.
	Call simple_cond_move_replacement if nothing changed the phi and
	this is the late phiopt.
	(tree_ssa_phiopt): Update call to tree_ssa_phiopt_worker.
	(tree_ssa_cs_elim): Likewise.
	(tree_ssa_late_phiopt): New function.
	(hard_float_target): New function.
        (block_with_single_simple_statement): New function.
	(simple_cond_move_replacement): New function.
	(pass_late_phiopt): New variable.

	* testsuite/gcc.target/mips/octeon-seq-5.c: New testcase.
	* testsuite/gcc.target/mips/movcc-5.c: New testcase.

2012-07-29  Andrew Pinski  <apinski@cavium.com>

	* loop-unroll.c (decide_unroll_constant_iterations): Add more
	debugging output for when the loop does not roll.
	(decide_unroll_runtime_iterations): Use expected_loop_iterations
	when it might be trying to peel instead of unroll.

2012-07-27  Adam Nemet  <anemet@caviumnetworks.com>

        * cfgloopanal.c (init_set_costs): Exclude call-used registers
        from available registers.

2012-07-27  Adam Nemet  <anemet@caviumnetworks.com>

        * config/mips/mips.c (TARGET_SCHED_ADJUST_PRIORITY): New macro.
        (mips_adjust_priority): New function.

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* expr.c (get_condition_from_operand): New function.
	(get_def_noter_for_expr_with_code): New function.
	(expand_cond_expr_using_addcc): New function.
	(expand_cond_expr_using_cmove): Use get_condition_from_operand
	instead of doing it inline.
	(expand_expr_real_2 <case COND_EXPR>): Try expanding using
	addcc before using cmove.
	* optabs.c (emit_conditional_add): Correct comment about the arguments.
	Remove code which might swap op2 and op3 since they cannot be swapped.

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* optabs.c (emit_conditional_move): Allow libcalls too for the
	comparison (allows conditional moves for soft-float).

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c (ifcombine_ifandif): Handle cases
	where maybe_fold_and_comparisons fails, combining the branches
	anyways.
	(ifcombine_iforif):  Handle cases where maybe_fold_or_comparisons
	fails, combining the branches anyways.
	(tree_ssa_ifcombine): Inverse the order of
	the basic block walk, increases the number of combinings.

	* testsuite/gcc.dg/tree-ssa/phi-opt-2.c: Expect zero ifs as the compiler
	produces a & b now.
	* testsuite/gcc.dg/tree-ssa/phi-opt-9.c: Use a function call
	to prevent conditional move to be used.
	* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c: Remove check for
	"one or more intermediate".

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* regcprop.c (TARGET_CAN_COPY_MODES): New define.
	(maybe_mode_change): Use TARGET_CAN_COPY_MODES to check if
	we can do the copy.
	* config/mips/mips.h (TARGET_CAN_COPY_MODES): Define.

2012-07-26  Andrew Pinski  <apinski@cavium.com>

	Bug #3261
	* config/mips/mips.md (*mov<GPR:mode>_on_<MOVECC:mode>):
	Remove mode check from comparisons.
	(*mov<SCALARF:mode>_on_<MOVECC:mode>): Likewise.
	(*mov<GPR:mode>_on_<GPR2:mode>_ne): New pattern to match
	when (ne A 0) can be just A.

	* testsuite/gcc.target/mips/movcc-4.c: New testcase.

2012-07-26  Andrew Pinski  <apinski@cavium.com>

	Bug #2854
	Bug #2965
	* config/mips/mips.md (*<optab><mode>3_trunc): New pattern.
	(*ashl_truncsi3): Likewise.
	(*ashl_truncsi3_trunc): Likewise.
	(*ashl_truncsi3_extend): Likewise.

	* testsuite/gcc.target/mips/truncate-10.c: New testcase.
	* testsuite/gcc.target/mips/truncate-11.c: New testcase.
	* testsuite/gcc.target/mips/truncate-12.c: New testcase.

2012-07-26  Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips.md (ior<mode>3): Use uns_arith_or_bitmask_operand.
	Expand early bitmask_operand cases.
	* config/mips/predicates.md (uns_arith_or_bitmask_operand): New predicate.

	* testsuite/gcc.target/mips/ins-8.c: New testcase.
	* testsuite/gcc.target/mips/ins-9.c: New testcase.

2012-07-26  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.target/mips/ext-12.c: New test.
	* testsuite/gcc.target/mips/ext-13.c: New test.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips.md (and<mode>3): Add support for
	bitmask_operand, expanding them early.
	* config/mips/predicates.md (and_reg_operand): Rename to ...
	(and_reg_without_bitmask_operand): This.
	(and_reg_operand): New operand.
	(and_operand): Use and_reg_without_bitmask_operand.
	* testsuite/gcc.target/mips/ext-11.c: New test.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/constraints.md (Yy): New constraint.
        * config/mips/mips.md (*and<mode>3): Add Yy constraint support.
	(split for and of an ins reg,$0,): Split the and if the destination
	not the same as the first operand of the and.
	* config/mips/predicates.md (and_reg_operand): Add inverse_bitmask_operand.

	* testsuite/gcc.target/mips/ins-6.c: New testcase.
	* testsuite/gcc.target/mips/ins-7.c: New testcase.
	* testsuite/gcc.target/mips/ins-5.c: New testcase.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	Bug #4249
	* expr.c (expand_assignment): Set the correct alignment on the mem
	when doing a movemisalign.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (movmisalign<mode>): New expand
	for expanding unaligned load/stores.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips-protos.h (mips_bitmask, mips_bitmask_p,
        mips_bottom_bitmask_p): Declare them.
	* config/mips/mips.c (mips_bitmask, mips_bitmask_p,
        mips_bottom_bitmask_p): New functions.
	* config/mips/mips.md (*insv<mode>_internal1): New pattern to
	match a bottom insert.
	(*insv<mode>_internal2): Likewise.
	(*insv<mode>_internal3): New pattern to
	match an insert.
	(*insv<mode>_internal4): Likewise.
        * config/mips/predicates.md (bitmask_operand
        bottom_bitmask_operand, inverse_bitmask_operand):
        New predicates.

	* testsuite/gcc.target/mips/ins-4.c: New testcase.

2012-07-25  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

        * config/mips/mips.opt (mmad): New option.
        * config/mips/mips.h (ISA_HAS_MADD_MSUB): Use it.
	* testsuite/gcc.target/mips/mips.exp: Add madd to mips_option_groups.
	* testsuite/gcc.target/mips/madd-10.c: New testcase.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/ext-10.c: Add isa_rev>=2.
	* testsuite/gcc.target/mips/ext-9.c: Likewise.
	* testsuite/gcc.target/mips/ins-3.c: Likewise.
	* testsuite/gcc.target/mips/truncate-9.c: Likewise.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

        * config/mips/mips.md (extv<mode>): Use sll for
        extraction of the lower 32bits.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * regcprop.c (maybe_mode_change): Return the reg in the
        new mode if the copy was done in the same mode size.
        * config/mips/mips.md (extendsidi2): Add expanding in
        a different register; split the move in DImode.

        * testsuite/gcc.target/mips/extra-move-1.c: new testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/ext-10.c: Remove check for octeon
	target and use -mgp64 for the options.
	* testsuite/gcc.target/mips/ext-9.c: Likewise.
	* testsuite/gcc.target/mips/ins-3.c: Likewise.
	* testsuite/gcc.target/mips/truncate-7.c: Likewise.
	* testsuite/gcc.target/mips/truncate-8.c: Likewise.
	* testsuite/gcc.target/mips/truncate-9.c: Likewise.
	* testsuite/gcc.target/mips/unaligned-3.c: Likewise.
	* testsuite/gcc.target/mips/unaligned-4.c: Likewise.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	Bug #3201
	* combine.c (simplify_set): After force_to_mode is called, simplify
	the rtl.

	* testsuite/gcc.target/mips/ext-10.c: New testcase.
	* testsuite/gcc.target/mips/ext-9.c: New testcase.
	* testsuite/gcc.target/mips/ins-3.c: New testcase.
	* testsuite/gcc.target/mips/truncate-9.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* combine.c (combine_validate_cost): Print out the costs even if
        successive.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        Bug #2849
        * simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):
        A truncate of a memory is just loading the low part of the memory.

	* testsuite/gcc.target/mips/truncate-7.c: New testcase.
	* testsuite/gcc.target/mips/truncate-8.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        Start of Bug #4220
        * tree-ssa-sccvn.c (simplify_binary_expression): Add looked_up argument.
        Get the first operand full expression for PLUS, IOR, and AND expressions also.
        Try to simplify (type)a + CST if there is a + CST exists already when type is
        just a different signedness of the type of a.
        (simplify_unary_expression): Add looked_up argument.
        Try to simplify (type)(a+CST) if there exists a (type)a where the type is
        just a difference signedness of the type of a.
        (try_to_simplify): Add looked_up argument.  Update calls to
        simplify_binary_expression and simplify_unary_expression.
        (visit_use): Update call to try_to_simplify.
        Set was_simplified to true if try_to_simplify's looked_up is true.
        * tree-ssa-sccvn.h (struct vn_ssa_aux): New field was_simplified.
        * tree-ssa-pre.c (eliminate): Do an insert when the VN said we should.

2012-07-24  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

        * tree-ssa-loop-ivopts.c (rewrite_use_address): Create an aligned type
        of the use type of the correct alignment.

	* testsuite/gcc.target/mips/unaligned-4.c: New testcase.
	* testsuite/gcc.target/mips/unaligned-3.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * tree-cfg.c (print_loop): Allow for NULL latch.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/lib/scangcda.exp: New file.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

        * testsuite/gcc.dg/octeon/badd-1.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-2.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-3.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-4.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-5.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-6.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-7.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-8.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-9.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-10.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-12.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-13.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-2.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-3.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-4.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-5.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-6.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-7.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-8.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-9.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-2.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-3.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-4.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-5.c: New testcase.
        * testsuite/gcc.dg/octeon/bug1546-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug1554-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug401.c: New testcase.
        * testsuite/gcc.dg/octeon/bug985-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug985-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-3.c: New testcase.
        * testsuite/gcc.dg/octeon/clz-1.c: New testcase.
        * testsuite/gcc.dg/octeon/clz-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cmov-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cmov-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cond_expr-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cond_expr-2.c: New testcase.
        * testsuite/gcc.dg/octeon/dpopcount.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-10.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-11.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-12.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-13.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-14.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-15.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-16.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-17.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-18.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-19.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-2.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-20.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-21.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-22.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-23.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-24.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-25.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-26.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-27.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-28.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-29.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-30.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-31.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-32.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-33.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-34.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-35.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-36.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-37.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-38.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-39.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-4.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-40.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-41.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-42.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-43.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-44.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-45.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-5.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-6.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-7.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-8.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-9.c: New testcase.
        * testsuite/gcc.dg/octeon/fdo-1.c: New testcase.
        * testsuite/gcc.dg/octeon/fini-1.cc: New testcase.
        * testsuite/gcc.dg/octeon/ins-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-10.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-11.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-12.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-13.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-14.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-15.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-16.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-17.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-19.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-2.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-20.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-21.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-22.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-23.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-24.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-25.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-26.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-27.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-28.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-3.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-30.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-31.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-32.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-33.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-34.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-35.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-4.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-5.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-6.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-7.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-8.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-9.c: New testcase.
        * testsuite/gcc.dg/octeon/inttypes-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ivopts-1.c: New testcase.
        * testsuite/gcc.dg/octeon/lx-1.c: New testcase.
        * testsuite/gcc.dg/octeon/lx-2.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-1.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-2.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-3.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-4.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-5.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-1.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10b.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10c.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-11.cc: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-12.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-1a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-2.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-3.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-4.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-5.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-6.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-7.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-7a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-8.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-9.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda-1.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda-2.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda.exp: New testcase.
        * testsuite/gcc.dg/octeon/misc/profopt.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-a.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-b.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-m.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-u.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next.exp: New testcase.
        * testsuite/gcc.dg/octeon/misc/serial-profopt.exp: New testcase.
        * testsuite/gcc.dg/octeon/mul-1.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-2.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-3.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-4.c: New testcase.
        * testsuite/gcc.dg/octeon/open-1.c: New testcase.
        * testsuite/gcc.dg/octeon/range-1.c: New testcase.
        * testsuite/gcc.dg/octeon/return-1.c: New testcase.
        * testsuite/gcc.dg/octeon/sra-1.c: New testcase.
        * testsuite/gcc.dg/octeon/test-gprof-1.c: New testcase.
        * testsuite/gcc.dg/octeon/tramp-1.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-1.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-10.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-11.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-12.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-13.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-14.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-15.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-16.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-17.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-18.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-19.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-2.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-20.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-21.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-22.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-23.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-24.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-25.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-26.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-27.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-28.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-29.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-3.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-30.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-31.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-4.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-5.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-6.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-7.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-8.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-9.c: New testcase.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew pinski  <apinski@cavium.com>

        * Makefile.in (LANGUAGES): Include merge-gcda.
        (MERGE_GCDA_INSTALL_NAME): New variable.
        (install-common): Install merge-gcda.
        (merge-gcda.o): New rule.
        (MERGE_GCDA_OBJS): New variable.
        (merge-gcda$(exeext)): New rule.

        * merge-gcda.c: New file.  Define IN_GOV_MERGE.
        * gcov-io.h (GCOV_FACTORED_MERGE_FUNCTIONS): New macro.
        (gcov_var): Include it if IN_GOV_MERGE.
        * gcov-io.c (gcov_write_counter, gcov_write_tag_length,
        gcov_write_summary): Likewise.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>

	* Makefile.in (GCOV_DUMP_INSTALL_NAME): New variable.
	(install-common): Install gcov-dump also.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/profopt.exp: Delete also the .gcda on the build machine.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.dg/vect/dump-tree-dceloop-pr26359.c: Update to look at
        dceloop4 after the patch adding one more.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* cfgloop.c (skip_to_exit): New function.
	(find_subloop_latch_edge_by_ivs): Rewrite to better detect subloop
	latches by IVs.  Also look at the cfg for those IVs to check for a
	better choice.
	* passes.c (init_optimization_passes): Add pass_dce_loop
        after the second pass_copy_prop.  Add pass_merge_phi
	before pass_ch and pass_tree_loop.

        * testsuite/gcc.dg/tree-ssa/loop-25.c: Remove xfails and remove "Found
        latch edge"/"Merged latch edges" tests.
        * gcc.dg/tree-ssa/loop-38.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.dg/tree-ssa/ssa-fre-9.c: Update the number of
        eliminatations that happen.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-sccvn.c (visit_use): Look up the simplified
	expression before visting the original one.

2012-07-23  Andrew Pinski  <apinski@cavium.com>

        FSF PR 52005
        * tree-ssa-ifcombine.c (recognize_if_then_else): Handle the case
        where the the then and else are spawed.
        (tree_ssa_ifcombine_bb): Handle the case were we have an empty basic block
        for either then or else.

        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-8.c: New testcase.
        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-9.c: New testcase.

2012-07-23  Andrew Pinski  <apinski@cavium.com>

        * tree-pretty-print.c (dump_generic_node): Handle MEM_REF
        with first argument whos type is NULL.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #2022
        * sched-deps.c (create_mem_store_deps): New function.
        (sched_analyze_1): Use create_mem_store_deps.
        (sched_analyze_2): For prefetches, cause a write memory barrior.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

        * tree-ssa-loop-unswitch.c (tree_ssa_unswitch_loops): Look at all loop
        not just the inner most ones.
        (tree_unswitch_loop): Remove the assert about the loop being the inner
        most loop.
	* testsuite/gcc.dg/alias-10.c: Update testcase for the number of unswitching.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

	* testsuite/gcc.dg/invalid-call-1.c: Fix testcase.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

	* testsuite/gcc.dg/tree-ssa/phi-opt-pass-order.c: New testcase.

2012-07-23  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@caviumnetworks.com>

        * c-typeck.c (build_function_call): Issue an error rather than
        a warning when function is called through a non-compatible
        type and the program would abort at run-time.
	* testsuite/gcc.c-torture/execute/call-trap-1.c: Remove testcase.
	* testsuite/gcc.dg/call-diag-2.c: Update the testcase for the error
	instead of warning.
	* testsuite/gcc.dg/cast-function-1.c: Likewise.
	* testsuite/gcc.dg/invalid-call-1.c: Likewise.

2012-07-20  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/test-backtrace.h: New header.

2012-07-20  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #2942
        * config/mips/mips.md (*popcountdi2_trunc): New pattern
        to handle popcount pf a truncation.
	* testsuite/gcc.target/mips/octeon-pop-2.c: New testcase.

2012-07-20  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #380
        * config/mips/mips.c (mips_expand_ext_as_unaligned_load): Handle
        unaligned loads of 16bits too.
	* testsuite/gcc.target/mips/unaligned-2.c: New testcase.

2012-07-20  Andrew Pinski  <apinski@cavium.com>

	Bug #2056
	* config/mips/mips-protos.h (mips_expand_ext_as_unaligned_load):
	Add a bool argument.
	* config/mips/mips.c (mips_block_move_straight): Update call to
	mips_expand_ext_as_unaligned_load.
	(mips_expand_ext_as_unaligned_load): Add unsigned_p argument.
	Accept DImode dest when the width is that of SImode.
	* testsuite/gcc.target/mips/unaligned-1.c: New testcase.
	* testsuite/gcc.target/mips/mips.exp (mips_option_groups):
	Add octeon-useun.

2012-07-19  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/README: New file about this directory.

2012-07-19  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/cvmx/octeon-cvmx.exp: New file.
	* testsuite/gcc.dg/octeon/cvmx/bt-1.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-2.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-3.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-4.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-5.c: New test.

2012-07-19  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.target/mips/mips.exp (mips_option_tests): New test.
	(mips-dg-options): Treat all
	cases of -mhard-float as not being able to compile.

2012-07-19  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

	* config.gcc (mips64*-*-linux* | mipsisa64*-*-linux*): Handle
	mips64*-octeon-linux* as defaulting to n64.
	Also handle mips64*-octeon-linux* like mips64octeon*-*-linux*.
	(mipsisa64-octeon-elf*): New target.
	* config/mips/mips-protos.h (mips_cvmx_shared_decl_p): New prototype.
	(octeon_output_shared_variable): New prototype.
	(mips_output_aligned_bss): New prototype.
	* config/mips/mips.c (accept_var_decls_only): New function.
	(mips_attribute_table): Add cvmx_shared and cvmx_noshared.
	(mips_merge_decl_attributes): Warn about when cvmx_shared are
	different between the two decls.
	(mips_expand_ext_as_unaligned_load): Handle the ISA_HAS_UL_US case.
	(mips_expand_ins_as_unaligned_store): Likewise.
	(mips_cvmx_shared_decl_p): New function.
	(mips_in_small_data_p): Check for cvmx_shared.
	(mips_option_override): Error out if the target is octeon* and
	hardfloat was enabled.
	Enable k0 optimization for TLS for Octeon1.
	(octeon_select_section): New function.
	(octeon_unique_section): New function.
	(octeon_output_shared_variable): New function.
	* config/mips/mips.h (ISA_HAS_UL_US): New macro.
	* config/mips/mips.md (UNSPEC_UNALIGNED_LOAD,
	UNSPEC_UNALIGNED_STORE): New unspecs.
	(mov_<load>l, mov_<load>r, mov_<store>l, mov_<store>r): Disable if
	ISA_HAS_UL_US.
	(mov_u<load>, mov_u<store>): New patterns.
	(tls_get_tp_<mode>): Emit "move $v1,$k0"
	instead of "rdhwr $v1,$29" when TARGET_TLS_ACCEL is true.
	Set can_delay to yes when TARGET_TLS_ACCEL is true.
	* config/mips/mips.opt (mtls-accel): New option.
	(mocteon-useun): New option.
	(mshared-variables): New option.
	* defaults.h (GCOV_TARGET_SUFFIX_LENGTH): Define if not already defined.
	* config/mips/octeon-elf.h: New file.
	* config/mips/octeon-linux.h: New file.
	* config/mips/octeon.h: New file.
	* config/mips/t-octeon-elf: New file.
	* config/mips/t-octeon-linux: New file.
	* testsuite/gcc.dg/octeon/pipeline-1.c: New file.
	* testsuite/gcc.dg/octeon/pipeline-2.c: New file.
	* testsuite/gcc.dg/octeon/pop-1.c: New file.
	* testsuite/gcc.dg/octeon/pop-2.c: New file.
	* testsuite/gcc.dg/octeon/saa-1.c: New file.
	* testsuite/gcc.dg/octeon/saa-2.c: New file.
	* testsuite/gcc.dg/octeon/saa-3.c: New file.
	* testsuite/gcc.dg/octeon/saa-4.c: New file.
	* testsuite/gcc.dg/octeon/seq-1.c: New file.
	* testsuite/gcc.dg/octeon/seq-10.c: New file.
	* testsuite/gcc.dg/octeon/seq-11.c: New file.
	* testsuite/gcc.dg/octeon/seq-12.c: New file.
	* testsuite/gcc.dg/octeon/seq-13.c: New file.
	* testsuite/gcc.dg/octeon/seq-2.c: New file.
	* testsuite/gcc.dg/octeon/seq-3.c: New file.
	* testsuite/gcc.dg/octeon/seq-4.c: New file.
	* testsuite/gcc.dg/octeon/seq-5.c: New file.
	* testsuite/gcc.dg/octeon/seq-6.c: New file.
	* testsuite/gcc.dg/octeon/seq-7.c: New file.
	* testsuite/gcc.dg/octeon/seq-8.c: New file.
	* testsuite/gcc.dg/octeon/seq-9.c: New file.
	* testsuite/gcc.dg/octeon/siginfo-1.c: New file.
	* testsuite/gcc.dg/octeon/tls-1.c: New file.
	* testsuite/gcc.dg/octeon/tls-2.c: New file.
	* testsuite/gcc.dg/octeon/tls-3.c: New file.
	* testsuite/gcc.dg/octeon/tls-4.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-1.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-2.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-3.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-4.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-5.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-6.c: New file.
	* testsuite/gcc.dg/octeon/vrp-1.c: New file.
	* testsuite/gcc.dg/octeon/vrp-2.c: New file.
	* testsuite/gcc.dg/octeon/vrp-3.c: New file.
	* testsuite/gcc.dg/octeon/vrp-4.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-10.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-11.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-2.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-3.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-4.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-5.cc: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-6.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-7.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-8.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-9.c: New file.


2012-07-18  Andrew Pinski  <apinski@cavium.com>

	* cfgloop.h (exact_loop_iterations_unbounded): Add Prototype.
	* cfgloopanal.c (exact_loop_iterations_unbounded): New function.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        * tree-pass.h (pass_profile_loop_bounds): New variable.
        * timevar.def (TV_PROFILE_LOOP_BOUNDS): New time var.
        * tree-ssa-loop.c (tree_profile_loop_bounds): New function.
        (gate_profile_loop_bounds): New function.
        (pass_profile_loop_bounds): New pass.
        * passes.c (init_optimization_passes): Add pass_profile_loop_bounds before
        pass_complete_unrolli.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        * opts.c (default_options_table): Turn on
        register pressure sensitive instruction
        scheduling at -O3 and above.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* opts.c (default_options_table): Enable fmerge-const-bfstores at -O2.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* opts.c (default_options_table): Enable fpostreload-load at -O2.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

        * basic-block.h (struct basic_block_def): Add new field probability.
        * builtins.def (BUILT_IN_BLOCK_PROB): New builtin.
        * predict.def (PRED_BUILTIN_BLOCK_PROB): New predictor.
        * common.opt (flag_propagate_block_prob): New option.
        * predict.c (compute_block_prob): New function.  Set basic block
        probablity from builtin_block_prob
        (propagate_block_prob): New functions.  Propagate branch
        probabilities backward in the CFG.
        (tree_estimate_probability): Invoke them.
        (tree_predict_by_opcode): Copy BB probablity to edge.
        * builtins.c (expand_builtin): Handle BUILT_IN_BLOCK_PROB.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

	* expmed.c (store_fixed_bit_field): Special case the storing
        of the whole field.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* postreload-load.c: New file.
	* Makefile.in (OBJS-common): Add postreload-load.o.
	(postreload-load.o): New rule.
	* common.opt (fpostreload-load): New option.
	* timevar.def: Add TV_LOAD_AFTER_RELOAD timevar.
	* tree-pass.h (pass_postreload_load): Declare.
	* passes.c (init_optimization_passes): Add
	pass_postreload_load.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* tree-merge-const-bfstores.c: New file.
	* Makefile.in (OBJS-common): Add tree-merge-const-bfstores.o.
	(tree-merge-const-bfstores.o): New rule.
	* timevar.def: Add TV_MERGE_CONST_BFSTORES timevar.
	* tree-pass.h (pass_merge_const_bfstores): Declare.
	* passes.c (init_optimization_passes): Add
	pass_merge_const_bfstores.
	* common.opt (fmerge-const-bfstores): New option.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

	Bug #2845
	* target.h (gcc_target): Add mode_for_extraction_insv.
	* expmed.c (store_bit_field_1): Use mode_for_extraction_insv
	and split out into ...
	(store_bit_field_2): Here.
	* target-def.h (TARGET_MODE_FOR_EXTRACTION_INSV): Define.
	(TARGET_INITIALIZER): Add TARGET_MODE_FOR_EXTRACTION_INSV.
	* config/mips/mips.c (mips_mode_for_extraction_insv): New function.
	(TARGET_MODE_FOR_EXTRACTION_INSV): Define.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        start of bug #4296
        * config/mips/mips.c (mips_rtx_cost_data): Add movz cost.
	(mips_cpu_info_table): Set movz for Octeon to 2 and Octeon2 to 3.
	(mips_rtx_costs <case IF_THEN_ELSE>): Return mips_cost->movz.

2012-07-15  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #3154
        * config/mips/mips.md (bswapdi2): New instruction pattern.
        (bswapsi2): Likewise.
        * config/mips/mips.h (ISA_HAS_SBWH): New ISA define.
        * testsuite/gcc.target/mips/bswap-1.c: New test.

2012-07-15  Andrew Pinski  <apinski@cavium.com>

        Bug #4290
        * tree-vrp.c (vrp_stmt_computes_nonzero): Return true for some
        builtins (memcpy and memmove).
        (infer_value_range): Infer the nonzero for some arguments to
        some builtins (memcpy, memmove, strcmp and memcmp).
        * testsuite/gcc.dg/tree-ssa/vrp-builtins1.c: New testcase.

2012-07-15  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.c-torture/unsorted/dump-noaddr.x (dump_compare): Use
        an absolute dump base instead of a relative one.

2012-07-13  Andrew Pinski  <apinski@cavium.com>
 
	* opts.c (default_options_table): Enable unroll-loops at -O3 and above.

	* testsuite/gcc.target/i386/l_fma_float_5.c: Add -fno-unroll-loops.
	* testsuite/gcc.target/i386/l_fma_double_4.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_2.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_6.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_1.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_5.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_3.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_2.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_6.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_4.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_3.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_1.c: Likewise.
	* testsuite/gcc.target/i386/fma4-builtin-2.c: Likewise.
	* testsuite/gcc.target/i386/fma3-builtin-2.c: Likewise.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4258
	* config/mips/mips.c (mips_delegitimize_address): New function.
	(TARGET_DELEGITIMIZE_ADDRESS): Define.

2012-07-13  Andrew Pinski  <apinski@cavium.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

	* config/mips/mips.opt (mfix-cn63xxp1): New option.
	* config/mips/mips.h (ASM_SPEC): Add mfix-cn63xxp1.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4325
	* tree-pass.h (pass_merge_common_code): New declaration.
	* tree-ssa-merge-common-code.c: New file.
	* Makefile.in (OBJS): Add tree-ssa-merge-common-code.o.
	(tree-ssa-merge-common-code.o): New target.
	* passes.c (init_optimization_passes): Add pass_merge_common_code
	after the two fres and after the pre.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-phiopt.c (tree_ssa_phiopt_worker): Prop
	the phi result if value_remplacement returns 1.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

        * configure.ac: Set PLUGIN_LD to just "ld" if it was "ld-new".
        * configure: Regenerate.

