2013-08-14  Manjunath Matti  <mmatti@caviumnetworks.com>

	* tsan.c (tsan_make_ssa_name): New function for 4.7 compatibility.
	(make_ssa_name): Define to tsan_make_ssa_name.

2013-08-06  Manjunath Matti  <mmatti@caviumnetworks.com>
	
	Initial libsanitizer support for ARM.
	* config/arm/arm.c (arm_asan_shadow_offset): New function.
	(TARGET_ASAN_SHADOW_OFFSET): Define.
	* config/arm/linux-eabi.h (ASAN_CC1_SPEC): Define and enable
	-funwind-tables for -fsanitize=address.

2013-08-02  Andrew Pinski  <apinski@cavium.com>

	* config.gcc (arm*-*-linux*): Match montavista and use arm/t-montavista-linux-eabi
	for that.
	* config/arm/t-montavista-linux-eabi: New file.
	Revert:
	* config/arm/linux-eabi.h (TARGET_DEFAULT_FLOAT_ABI): Define
	to ARM_FLOAT_ABI_HARD.
	(GLIBC_DYNAMIC_LINKER_DEFAULT): Change to the hard float one.
	(MULTILIB_DEFAULT_ENDIAN): New define.
	(MULTILIB_DEFAULTS): New define.
	* config/arm/t-linux-eabi (MULTILIB_OPTIONS): Redefine to include
	hard and soft float ABIs.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_OSDIRNAMES): Likewise.
	(MULTILIB_MATCHES): Match -msoft-float as -mfloat-abi=soft.

2013-08-01  Manjunath Matti  <mmatti@caviumnetworks.com>

	Initial libsanitizer support for MIPS.
	* config/mips/mips.c (mips_asan_shadow_offset): New function.
	(TARGET_ASAN_SHADOW_OFFSET): Define.

2013-07-09  Andrew Pinski  <apinski@cavium.com>

	Revert:
	* config/arm/t-linux-eabi: Disable all of the multilibs as
	they don't work nicely with yocto.

2013-07-01  Manjunath Matti  <mmatti@caviumnetworks.com>

	Backported from mailine.
	2013-02-11  Alexander Potapenko <glider@google.com>
		    Jack Howarth  <howarth@bromo.med.uc.edu>
		    Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55617
	
	gcc/
	* config/darwin.c (cdtor_record): Rename ctor_record.
	(sort_cdtor_records): Rename sort_ctor_records.
	(finalize_dtors): New routine to sort destructors by
	priority before use in assemble_integer.
	(machopic_asm_out_destructor): Use finalize_dtors if needed.

	gcc/testsuite/
	* g++.dg/asan/pr55617.C: Run on all targets.

2013-07-01  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-02-09  Uros Bizjak  <ubizjak@gmail.com>

	* g++.dg/asan/asan_test.C: Compile with -D__NO_INLINE__
	for *-*-linux-gnu targets.
	* g++.dg/asan/interception-test-1.c: Ditto.
	* g++.dg/asan/interception-failure-test-1.C: Ditto.
	* g++.dg/asan/interception-malloc-test-1.C: Ditto.

2013-07-01  Manjunath Matti  <mmatti@caviumnetworks.com>
	
	2013-02-05  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55374
	* config/gnu-user.h (LIBTSAN_EARLY_SPEC): Define.
	(STATIC_LIBTSAN_LIBS): Likewise.
	* gcc.c (ADD_STATIC_LIBTSAN_LIBS, LIBTSAN_EARLY_SPEC): Define.
	(LIBTSAN_SPEC): Add ADD_STATIC_LIBTSAN_LIBS, if LIBTSAN_EARLY_SPEC
	is defined, don't add anything else beyond that.
	(SANITIZER_EARLY_SPEC, SANITIZER_SPEC): Define.
	(LINK_COMMAND_SPEC): Use them.

2013-06-29  Andrew Pinski  <apinski@cavium.com>

	* gimple.h (gsi_stmt): Allow for NULL
	i.ptr for compatibility with 4.8.

2013-06-28  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-02-04  Alexander Potapenko <glider@google.com>
		    Jack Howarth  <howarth@bromo.med.uc.edu>
		    Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55617
	* g++.dg/asan/pr55617.C: New test.

2013-06-28  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-02-04  Alexander Potapenko <glider@google.com>
	Jack Howarth  <howarth@bromo.med.uc.edu>
	Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55617
	* config/darwin.c (sort_ctor_records): Stabilized qsort
	on constructor priority by using original position.
	(finalize_ctors): New routine to sort constructors by
	priority before use in assemble_integer.
	(machopic_asm_out_constructor): Use finalize_ctors if needed.

2013-06-28  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-01-30  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55374
	* gcc.c (LIBASAN_SPEC): Define just to ADD_STATIC_LIBASAN_LIBS if
	LIBASAN_EARLY_SPEC is defined.
	(LIBASAN_EARLY_SPEC): Define to empty string if not already defined.
	(LINK_COMMAND_SPEC): Add LIBASAN_EARLY_SPEC for -fsanitize=address,
	before %o.
	* config/gnu-user.h (LIBASAN_EARLY_SPEC): Define.

	* g++.dg/asan/large-func-test-1.C: Allow both _Zna[jm] in addition
	to _Znw[jm] in the backtrace.  Allow _Zna[jm] to be the first frame
	printed in backtrace.
	* g++.dg/asan/deep-stack-uaf-1.C: Use malloc instead of operator new
	to avoid errors about mismatched allocation vs. deallocation.

2013-06-28  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-01-28  Jakub Jelinek  <jakub@redhat.com>

	PR testsuite/56053
	* c-c++-common/asan/heap-overflow-1.c: Don't include stdlib.h and
	string.h.  Provide memset, malloc and free prototypes, adjust line
	numbers in dg-output.
	* c-c++-common/asan/stack-overflow-1.c: Don't include string.h.
	Provide memset prototype and adjust line numbers in dg-output.
	* c-c++-common/asan/global-overflow-1.c: Likewise.

2013-06-27  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-01-17  Jack Howarth <howarth@bromo.med.uc.edu>

	PR sanitizer/55679
	* g++.dg/asan/interception-test-1.C: Skip on darwin.
	* lib/target-supports.exp (check_effective_target_swapcontext): Use
	check_no_compiler_messages to test support in ucontext.h.
	(check_effective_target_setrlimit): Return 0 for Darwin's non-posix
	compliant RLIMIT_AS.

2013-06-27  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-01-08  Jakub Jelinek  <jakub@redhat.com>
	PR fortran/55341
	* asan.c (asan_clear_shadow): New function.
	(asan_emit_stack_protection): Use it.

2013-06-27  Manjunath Matti  <mmatti@caviumnetworks.com>

	2013-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55844
	* c-c++-common/asan/null-deref-1.c: Add -fno-shrink-wrap to
	dg-options.

2013-06-26  Andrew Pinski  <apinski@cavium.com>

	* testsuite/g++.dg/asan/asan.exp: Call dg-init and asan_init
	before calling check_effective_target_faddress_sanitizer.
	Run gcc-dg-runtest only ifcheck_effective_target_faddress_sanitizer
	returns true. 
	* testsuite/gcc.dg/asan/asan.exp: Likewise.

2013-06-26  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

gcc/testsuite
	* gcc.target/arm/builtin-bswap-1.c: Skip for soft-float Thumb.
	* gcc.target/arm/builtin-bswap16-1.c: Likewise.
	* gcc.target/arm/pr40887.c: Likewise.
	* gcc.target/arm/scd42-1.c: Likewise.
	* gcc.target/arm/scd42-3.c: Likewise.
	* gcc.target/arm/unsigned-extend-1.c: Likewise.
	* gcc.target/arm/xor-and.c: Likewise.

2013-06-25  Andrew Pinski  <apinski@cavium.com>

	* testsuite/g++.dg/asan/asan.exp: Run the tests without
	testing the results of asan_init.
	* testsuite/gcc.dg/asan/asan.exp: Likewise.
	* testsuite/lib/asan-dg.exp (check_effective_target_faddress_sanitizer):
	Change to a linking program.

2013-06-25  Manjunath Matti  <mmatti@caviumnetworks.com>
	
	Backported from mainline.
	
	2013-01-06  Jakub Jelinek  <jakub@redhat.com>

	* varasm.c (output_constant_def_contents): For asan_protect_global
	protected strings, adjust DECL_ALIGN if needed, before testing for
	anchored symbols.
	(place_block_symbol): Adjust size for asan protected STRING_CSTs if
	TREE_CONSTANT_POOL_ADDRESS_P.  Increase alignment for asan protected
	normal decls.
	(output_object_block): For asan protected decls, emit asan padding
	after their contents.
	* asan.c (asan_protect_global): Don't check TREE_ASM_WRITTEN here.
	(asan_finish_file): Test it here instead.

2013-06-25  Manjunath Matti  <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-12  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55508
	* builtin-attrs.def (ATTR_TMPURE_NOTHROW_LEAF_LIST,
	ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST): New.
	* asan.c (ATTR_TMPURE_NOTHROW_LEAF_LIST,
	ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST): Define.
	* sanitizer.def: Make __asan_report_* and __asan_handle_no_return
	builtins tm pure.

2013-06-25  Manjunath Matti  <mmatti@caviumnetworks.com>

	Backported from mailine.

	2012-12-12  Jakub Jelinek  <jakub@redhat.com>

	* lib/gcc-dg.exp (${tool}_load): Handle non-existing
	set_target_env_var the same as if it is empty list.
	(dg-set-target-env-var): Fix up error message.
	(set-target-env-var): Record both preexisting env var values
	as well as info that env wasn't set.
	(restore-target-env-var): Iterate on reversed list, if second
	sublist element is 1, setenv the env var to the third sublist
	element, otherwise unsetenv it.
	(gcc-dg-runtest): Don't initialize set_target_env_var.
	(dg-test): Unset set_target_env_var if it was set.

	* g++.dg/asan/deep-tail-call-1.C: Whitespace fixes.  Don't rely
	on argc being one.
	* g++.dg/asan/interception-malloc-test-1.C: Only run on linux.
	Whitespace fixes.  Avoid unnecessary * sizeof(char).
	* g++.dg/asan/deep-thread-stack-1.C: Add -lasan -lpthread to
	dg-options.  Whitespace fixes.
	* g++.dg/asan/deep-stack-uaf-1.C: Skip for -flto.  Whitespace fixes.
	* g++.dg/asan/interception-test-1.C: Whitespace fixes.
	* g++.dg/asan/interception-failure-test-1.C: Whitespace fixes.
	Avoid unnecessary * sizeof(char).  Remove // CHECK: comment.
	* g++.dg/asan/default-options-1.C: Whitespace fixes.
	* g++.dg/asan/symbolize-callback-1.C: Whitespace fixes.  Make
	first __asan_symbolize argument unnamed.  Avoid unnecessary
	* sizeof(char).
	* g++.dg/asan/large-func-test-1.C: Whitespace fixes.  Don't rely
	on argc being one.  Allow both _Znwj and _Znwm as operator new.
	Ignore everything in the backtrace above operator new.  Fix up
	dg-output regexps.
	* c-c++-common/asan/null-deref-1.c: Add -fno-omit-frame-pointer
	and for x86 -mno-omit-leaf-frame-pointer.  Fix up dg-output regexps.
	* c-c++-common/asan/clone-test-1.c: Whitespace fixes.  Return non-zero
	on failures.  Avoid pointless PASS dg-output check. Remove bogus
	dg-shouldfail.
	* c-c++-common/asan/sanity-check-pure-c-1.c: Fix up dg-output regexps.
	Avoid unnecessary * sizeof(char).
	* c-c++-common/asan/heap-overflow-1.c: Fix up dg-output regexps.
	Don't rely on argc being one.
	* c-c++-common/asan/sleep-before-dying-1.c: Whitespace fixes.
	Avoid unnecessary * sizeof(char).
	* c-c++-common/asan/rlimit-mmap-test-1.c: Whitespace fixes.
	* c-c++-common/asan/stack-overflow-1.c: Fix up dg-output regexps.
	* c-c++-common/asan/global-overflow-1.c: Add -fno-builtin-memset.
	Fix up dg-output regexps.
	* c-c++-common/asan/strncpy-overflow-1.c: Fix up dg-output regexps.
	* c-c++-common/asan/memcmp-1.c:	Don't rely on argc being one.
	* c-c++-common/asan/use-after-free-1.c: Fix up dg-output regexps.
	* c-c++-common/asan/swapcontext-test-1.c: Don't rely on argc being
	one.
	* c-c++-common/asan/force-inline-opt0-1.c: Remove dg-skip-if.
	* c-c++-common/asan/strip-path-prefix-1.c: Whitespace fixes.
	Avoid unnecessary * sizeof(char).

	2012-12-12  Wei Mi  <wmi@google.com>

	* lib/target-supports.exp (check_effective_target_dlopen,
	check_effective_target_clone, check_effective_target_setrlimit,
	check_effective_target_swapcontext): New procedures.
	* lib/gcc-dg.exp (${tool}_load): Handle dg-set-target-env-var.
	(dg-set-target-env-var, set-target-env-var,
	restore-target-env-var): New procedures.
	(gcc-dg-runtest): Set set_target_env_var.
	* g++.dg/asan/symbolize-callback-1.C: New test.
	* g++.dg/asan/shared-lib-test-1-so.cc: New file.
	* g++.dg/asan/deep-tail-call-1.C: New test.
	* g++.dg/asan/default-options-1.C: New test.
	* g++.dg/asan/interception-test-1.C: New test.
	* g++.dg/asan/dlclose-test-1-so.cc: New file.
	* g++.dg/asan/deep-thread-stack-1.C: New test.
	* g++.dg/asan/interception-malloc-test-1.C: New test.
	* g++.dg/asan/deep-stack-uaf-1.C: New test.
	* g++.dg/asan/large-func-test-1.C: New test.
	* g++.dg/asan/interception-failure-test-1.C: New test.
	* c-c++-common/asan/strip-path-prefix-1.c: New test.
	* c-c++-common/asan/force-inline-opt0-1.c: New test.
	* c-c++-common/asan/swapcontext-test-1.c: New test.
	* c-c++-common/asan/null-deref-1.c: New test.
	* c-c++-common/asan/global-overflow-1.c: New test.
	* c-c++-common/asan/strncpy-overflow-1.c: New test.
	* c-c++-common/asan/rlimit-mmap-test-1.c: New test.
	* c-c++-common/asan/stack-overflow-1.c: New test.
	* c-c++-common/asan/use-after-free-1.c: New test.
	* c-c++-common/asan/sanity-check-pure-c-1.c: New test.
	* c-c++-common/asan/clone-test-1.c: New test.
	* c-c++-common/asan/heap-overflow-1.c: New test.
	* c-c++-common/asan/sleep-before-dying-1.c: New test.

2013-06-24  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.
	
	2012-12-11  Jakub Jelinek  <jakub@redhat.com>

	* g++.dg/asan/asan_test.C: Link -lasan before -lpthread.

2013-06-24  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-11  Jakub Jelinek  <jakub@redhat.com>

	* varasm.c (get_variable_section): Don't return lcomm_section
	for asan_protect_global decls.
	* asan.c (asan_protect_global): Only avoid public common variables.
	Don't call get_variable_section here.

2013-06-24  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-11  Jakub Jelinek  <jakub@redhat.com>

	* sanitizer.def (BUILT_IN_ASAN_HANDLE_NO_RETURN): New builtin.
	* asan.c (instrument_builtin_call): Change is_gimple_builtin_call
	gcc_assert to gcc_checking_assert.
	(maybe_instrument_call): Imit __builtin___asan_handle_no_return ()
	before noreturn calls other than __builtin_trap () and
	__builtin_unreachable ().

2013-06-24  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-06-04  Richard Guenther  <rguenther@suse.de>
	Eric Botcazou  <ebotcazou@adacore.com>

	Backport from mainline
	2012-04-03  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (get_bit_range): Add OFFSET parameter and adjust BITPOS.
	Change type of BITOFFSET to signed.  Make sure the lower bound of
	the computed range is non-negative by adjusting OFFSET and BITPOS.
	(expand_assignment): Adjust call to get_bit_range.

	2012-03-27  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (get_bit_range): Return the null range if the enclosing record
	is part of a larger bit field.

	2012-03-20  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (finish_bitfield_representative): Fallback
	to conservative maximum size if the padding up to the next
	field cannot be computed as a constant.
	(finish_bitfield_layout): If we cannot compute the distance
	between the start of the bitfield representative and the
	bitfield member start a new representative.
	* expr.c (get_bit_range): The distance between the start of
	the bitfield representative and the bitfield member is zero
	if the field offsets are not constants.

	2012-03-16  Richard Guenther  <rguenther@suse.de>

	* stor-layout.c (finish_bitfield_representative): Fall back
	to the conservative maximum size if we cannot compute the
	size of the tail padding.

	2012-03-14  Richard Guenther  <rguenther@suse.de>

	* tree.h (DECL_BIT_FIELD_REPRESENTATIVE): New define.
	* stor-layout.c (start_bitfield_representative): New function.
	(finish_bitfield_representative): Likewise.
	(finish_bitfield_layout): Likewise.
	(finish_record_layout): Call finish_bitfield_layout.
	* tree.c (free_lang_data_in_decl): Only free DECL_QUALIFIER
	for QUAL_UNION_TYPE fields.
	* tree-streamer-in.c (lto_input_ts_field_decl_tree_pointers):
	Stream DECL_BIT_FIELD_REPRESENTATIVE.
	* tree-streamer-out.c (write_ts_field_decl_tree_pointers): Likewise.

	PR middle-end/52080
	PR middle-end/52097
	PR middle-end/48124
	* expr.c (get_bit_range): Unconditionally extract bitrange
	from DECL_BIT_FIELD_REPRESENTATIVE.
	(expand_assignment): Adjust call to get_bit_range.

	gcc/testsuite/
	PR middle-end/52080
	PR middle-end/52097
	PR middle-end/48124
	* gcc.dg/torture/pr48124-1.c: New testcase.
	* gcc.dg/torture/pr48124-2.c: Likewise.
	* gcc.dg/torture/pr48124-3.c: Likewise.
	* gcc.dg/torture/pr48124-4.c: Likewise.
	* gnat.dg/pack16.adb: Likewise.
	* gnat.dg/pack16_pkg.ads: Likewise.
	* gnat.dg/pack17.adb: Likewise.
	* gnat.dg/specs/pack7.ads: Likewise.
	* gnat.dg/specs/pack8.ads: Likewise.
	* gnat.dg/specs/pack8_pkg.ads: Likewise.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-10  Jakub Jelinek  <jakub@redhat.com>

	* g++.dg/asan/asan_test.cc: Sync from upstream.
	* g++.dg/asan/asan_test_utils.h: Likewise.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-10  Jakub Jelinek  <jakub@redhat.com>

	* asan.c (asan_init_shadow_ptr_types): Move earlier in the file.
	Call initialize_sanitizer_builtins at the end.
	(asan_pp_string): Use TREE_TYPE (shadow_ptr_types[0])
	as character type instead of char_type_node.
	(asan_emit_stack_protection): Call asan_init_shadow_ptr_types
	if shadow_ptr_types isn't initialized.
	(asan_protect_global): Return true for STRING_CSTs except those
	created by asan_pp_string.
	(count_string_csts, add_string_csts): New functions.
	(struct asan_add_string_csts_data): New type.
	(asan_finish_file): Clear flag_asan at the beginning, restore at the
	end.  Traverse constant_pool_htab () to look for protected
	STRING_CSTs.  Don't call initialize_sanitizer_builtins,
	instead call asan_init_shadow_ptr_types if shadow_ptr_types isn't
	initialized yet.
	(asan_instrument): Don't call initialize_sanitizer_builtins.
	* varasm.c (output_constant_def_contents): If STRING_CST should be
	asan protected, align it sufficiently and emit padding after it.
	(categorize_decl_for_section): If flag_asan, don't put STRING_CSTs
	that should be asan protected into mergeable sections.  For
	-fmerge-all-constants, ignore it for -fmudflap or if decl is
	asan protected.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-10  Jakub Jelinek  <jakub@redhat.com>

	* asan.c (instrument_derefs): Handle bitfield COMPONENT_REFs
	accesses as reads/writes to their DECL_BIT_FIELD_REPRESENTATIVE.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-06  Peter Bergner  <bergner@vnet.ibm.com>

	* config/rs6000/sysv4.h (TARGET_ASAN_SHADOW_OFFSET): Define.
	* config/rs6000/rs6000.c (rs6000_asan_shadow_offset): New function.
	* config/rs6000/rs6000.h (FRAME_GROWS_DOWNWARD): Disable if using ASAN.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-06  Jack Howarth <howarth@bromo.med.uc.edu>

	PR 55599/sanitizer
	* config/darwin.h (LINK_COMMAND_SPEC_A): Remove static libasan support.

2013-06-21  Manjunath Matti <mmatti@caviumnetworks.com>

	* gcc/tsanc.c (instrument_builtin_call) Call 
	gimple_build_assign_with_ops_stat instead of 
	gimple_build_assign_with_ops based on the number of parameters.

2013-06-21  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* gcc.target/arm/ftest-armv4t-thumb.c: Skip for soft-float Thumb.
	* gcc.target/arm/ftest-armv5t-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv5te-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6k-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6z-thumb.c: Likewise.

2013-06-20  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-04  Jakub Jelinek  <jakub@redhat.com>

	PR testsuite/55587
	* lib/asan-dg.exp (asan_init): Return 1 if libasan has been found,
	0 if not.
	* g++.dg/asan/asan.exp: Don't run gcc-dg-runtest if [asan_init]
	returned 0.
	* gcc.dg/asan/asan.exp: Likewise.

2013-06-20  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-03  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/55439
	* Makefile.in (tsan.o): Depend on tree-ssa-propagate.h.
	* sanitizer.def: Add __tsan_atomic* builtins.
	* asan.c (initialize_sanitizer_builtins): Adjust to also
	initialize __tsan_atomic* builtins.
	* tsan.c: Include tree-ssa-propagate.h.
	(enum tsan_atomic_action): New enum.
	(tsan_atomic_table): New table.
	(instrument_builtin_call): New function.
	(instrument_gimple): Take pointer to gimple_stmt_iterator
	instead of gimple_stmt_iterator.  Call instrument_builtin_call
	on builtin call stmts.
	(instrument_memory_accesses): Adjust instrument_gimple caller.
	* builtin-types.def (BT_FN_BOOL_VPTR_PTR_I1_INT_INT,
	BT_FN_BOOL_VPTR_PTR_I2_INT_INT, BT_FN_BOOL_VPTR_PTR_I4_INT_INT,
	BT_FN_BOOL_VPTR_PTR_I8_INT_INT, BT_FN_BOOL_VPTR_PTR_I16_INT_INT): New.

2013-06-20  Manjunath Matti <mmatti@caviumnetworks.com>

	* gimple.c (get_base_address): Do not return NULL_TREE apart 
	from for WITH_SIZE_EXPR.

2013-06-19  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-11-14  Jan Hubicka  <jh@suse.cz>

	* tree.c (set_call_expr_flags): New function.
	(local_define_builtin): Use it.
	* tree.h (set_call_expr_flags): Declare.

2013-06-19  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-03  Jakub Jelinek  <jakub@redhat.com>

	* sanitizer.def: Add Address Sanitizer builtins.
	Rename BUILT_IN_TSAN_READ_* to BUILT_IN_TSAN_READ* and
	BUILT_IN_TSAN_WRITE_* to BUILT_IN_TSAN_WRITE*.
	* Makefile.in (asan.o): Depend on langhooks.h.
	(tsan.o): Depend on asan.h.
	* asan.h (initialize_sanitizer_builtins): New prototype.
	* asan.c: Include langhooks.h.
	(report_error_func): Use builtin_decl_implicit of corresponding
	BUILT_IN_ASAN_REPORT_{LOAD,STORE}*.
	(asan_init_func): Removed.
	(initialize_sanitizer_builtins): New function.
	(asan_finish_file): Call it.  Use builtin_decl_implicit
	on BUILT_IN_ASAN_{INIT,{,UN}REGISTER_GLOBALS}.
	(asan_instrument): Call initialize_sanitizer_builtins.
	* builtins.def (DEF_SANITIZER_BUILTIN): Change condition to
	(flag_asan || flag_tsan).
	* tsan.c: Include asan.h and tsan.h.
	(get_memory_access_decl): Rename BUILT_IN_TSAN_{READ,WRITE}_*
	to BUILT_IN_TSAN_{READ,WRITE}*.
	(tsan_pass): Call initialize_sanitizer_builtins.
	(tsan_gate, tsan_gate_O0): Don't check if
	builtin_decl_implicit_p (BUILT_IN_TSAN_INIT) is true.
	(tsan_finish_file): Call initialize_sanitizer_builtins.
	* builtin-types.def (BT_FN_VOID_PTR_PTRMODE): New fn type.

2013-06-19  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-03  Jakub Jelinek  <jakub@redhat.com>

	* asan.c (instrument_assignment): Instrument lhs only
	for gimple_store_p and rhs1 only for gimple_assign_load_p.

2013-06-19  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-12-03  Jakub Jelinek  <jakub@redhat.com>

	* lib/asan-dg.exp (asan_get_gtest_test_list,
	asan_get_gtest_expect_death_list, asan-gtest): New procedures.
	(proc ${tool}_load): Remember [asan_get_gtest_test_list "$output"]
	and [asan_get_gtest_expect_death_list "$output"] in global vars.
	(asan_symbolize): Sanitize [] characters from key.
	* g++.dg/asan/asan_test_config.h: New file.
	* g++.dg/asan/asan_globals_test.cc: New file.
	* g++.dg/asan/asan_test_utils.h: New file.
	* g++.dg/asan/dejagnu-gtest.h: New file.
	* g++.dg/asan/asan_test.cc: New file.
	* g++.dg/asan/asan_test.C: New test.

2013-06-19  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-11-30  Jakub Jelinek  <jakub@redhat.com>

	* tsan.c (is_load_of_const_p): Removed.
	(instrument_expr): Use result of get_inner_reference
	instead of get_base_address, avoid some unnecessary tests,
	use !pt_solution_includes and !may_be_aliased tests to
	check whether base might escape current function.

2013-06-17  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-11-24  Jack Howarth <howarth@bromo.med.uc.edu>

	* config/darwin.h (LINK_COMMAND_SPEC_A): Deal with -fsanitize=address.
	
2013-06-17  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-11-23  Tobias Burnus  <burnus@net-b.de>

	* doc/invoke.texi (-fsanitize=address): Remove obsolete
	remark.

2013-06-17  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline.

	2012-11-23  Jakub Jelinek  <jakub@redhat.com>

	* lib/asan-dg.exp (asan_symbolize): Remove all "BFD: " prefixed lines 
	from the output.

2013-06-17  Manjunath Matti <mmatti@caviumnetworks.com>
	
	2012-11-23  Jakub Jelinek  <jakub@redhat.com>
	
	PR sanitizer/55435
	gcc/c-family/
	* c-common.c (handle_no_address_safety_analysis_attribute): New 
	function.
	(c_common_attribute_table): Add no_address_safety_analysis.
	
	gcc/
	* asan.c (gate_asan): Don't instrument functions with 
	no_address_safety_analysis attribute.
	(gate_asan_O0): Use !optimize && gate_asan ().
	* doc/extend.texi (no_address_safety_analysis): Document new 
	function attribute.
	
	gcc/testsuite/
	* c-c++-common/asan/attrib-1.c: New test.

2013-06-14  Manjunath Matti <mmatti@caviumnetworks.com>

	* tsan.c (pass_tsan): Remove optinfo flag for 4.7 compatibility.
	(pass_tsan_O0): Ditto.
	* gimple.h (gimple_store_p): New predicate.
	(gimple_assign_load_p): Likewise.

2013-06-14  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backported from mainline
	2012-11-22  Dmitry Vyukov  <dvyukov@google.com>
		Wei Mi  <wmi@google.com>

	* builtins.def (DEF_SANITIZER_BUILTIN): Define tsan builtins.
	* sanitizer.def: Ditto.
	* Makefile.in (tsan.o): Add tsan.o target.
	(BUILTINS_DEF): Add sanitizer.def.
	* passes.c (init_optimization_passes): Add tsan passes.
	* tree-pass.h (register_pass_info): Ditto.
	* toplev.c (compile_file): Ditto.
	* doc/invoke.texi: Document tsan related options.
	* gcc.c (LINK_COMMAND_SPEC): Add LIBTSAN_SPEC in link command if
	-fsanitize=thread.
	* tsan.c: New file about tsan.
	* tsan.h: Ditto.
	* common.opt: Add -fsanitize=thread.

2013-06-14  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline

	2012-11-22  H.J. Lu  <hongjiu.lu@intel.com>

	* gcc.c (ADD_STATIC_LIBASAN_LIBS): New macro.  Defined
	with STATIC_LIBASAN_LIBS.
	(LIBASAN_SPEC): Add STATIC_LIBASAN_LIBS.
	* config/gnu-user.h (STATIC_LIBASAN_LIBS): New macro.

2013-06-14  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from mainline 
	2012-11-21  Wei Mi  <wmi@google.com>

	* common.opt: Change faddress-sanitizer to fsanitize=address.
	* toplev.c (process_options): Likewise.
	* gcc.c (LINK_COMMAND_SPEC): Likewise.
	* testsuite/lib/asan-dg.exp
	(check_effective_target_faddress_sanitizer): Likewise.
	(asan_init): Likewise.
	* doc/invoke.texi (-fsanitize=address): Document.

2013-06-13  Andrew Pinski  <apinski@cavium.com>

	* asan.c (asan_make_ssa_name): New function for 4.7 compatibility.
	(make_ssa_name): Define to asan_make_ssa_name.

2013-06-11  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/asan-dg.exp (asan_finish): Fix TCL code and if/else's.

2013-06-11  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/target-supports.exp (check_effective_target_arm_fp16_ok_nocache):
	Check both -mfloat-abi=softfp and -mfloat-abi=hard instead of just -mfloat-abi=softfp.
	Add including of assert.h also.

2013-06-10  Andrew Pinski  <apinski@cavium.com>

	Bug #7096
	* config/mips/mips.c (mips_classify_symbol): Consider local
	symbols as global when -mxgot is used.

2013-06-10  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/asan-dg.exp (asan_init): Save off ALWAYS_CXXFLAGS.
	(asan_finish): Restore ALWAYS_CXXFLAGS if needed.

2013-06-05  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported from upstream

	2012-11-17  H.J. Lu  <hongjiu.lu@intel.com>

	* common.opt (static-libasan): New option.
	* gcc.c (LIBASAN_SPEC): New macro.
	(LINK_COMMAND_SPEC): Replace -lasan with LIBASAN_SPEC.
	* doc/invoke.texi: Document -static-libasan.

2013-06-05  Manjunath Matti <mmatti@caviumnetworks.com>

	2012-11-17  Jakub Jelinek  <jakub@redhat.com>

	gcc/testsuite/
	* lib/asan-dg.exp (asan_symbolize): Prune BFD: prefixed error messages
	from addr2line_output.  Increment idx if asking for more than one address
	in one object.

2013-06-05  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported
	
	2012-11-15  Jakub Jelinek  <jakub@redhat.com>

	* asan.c (report_error_func): Set DECL_IGNORED_P, don't touch
	DECL_ASSEMBLER_NAME.
	(asan_init_func): Likewise.
	(asan_finish_file): Use void * instead of __asan_global * as
	type of __asan_{,un}register_globals.  Set DECL_IGNORED_P on
	the decls.

2013-06-05  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported libsanitizer testcases.

	2012-11-14  Jakub Jelinek  <jakub@redhat.com>

	gcc/testsuite/
	* lib/asan-dg.exp: New file.
	* gcc.dg/asan/asan.exp: New file.
	* g++.dg/dg.exp: Prune also asan tests.
	* g++.dg/asan/asan.exp: New file.
	* c-c++-common/asan/memcmp-1.c: New test.

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	2012-11-13  Jakub Jelinek  <jakub@redhat.com>

	* Makefile.in (asan.o): Depend on $(TM_P_H).

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	2012-11-12  Jakub Jelinek  <jakub@redhat.com>

	* asan.c (instrument_builtin_call) <case BUILT_IN_BCOPY>: Fix up
	dest assignment.

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	2012-11-12  David Edelsohn  <dje.gcc@gmail.com>

	* asan.c: Include tm_p.h

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	2012-11-12  Jakub Jelinek  <jakub@redhat.com>
	
	* asan.c: Formatting cleanups.

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported

	2012-11-12  Jakub Jelinek  <jakub@redhat.com>
		Wei Mi <wmi@google.com>

	* varasm.c: Include asan.h.
	(assemble_noswitch_variable): Grow size by asan_red_zone_size
	if decl is asan protected.
	(place_block_symbol): Likewise.
	(assemble_variable): If decl is asan protected, increase
	DECL_ALIGN if needed, and for decls emitted using
	assemble_variable_contents append padding zeros after it.
	* Makefile.in (varasm.o): Depend on asan.h.
	* asan.c: Include output.h.
	(asan_pp, asan_pp_initialized, asan_ctor_statements): New variables.
	(asan_pp_initialize, asan_pp_string): New functions.
	(asan_emit_stack_protection): Use asan_pp{,_initialized}
	instead of local pp{,_initialized} vars, use asan_pp_initialize
	and asan_pp_string helpers.
	(asan_needs_local_alias, asan_protect_global,
	asan_global_struct, asan_add_global): New functions.
	(asan_finish_file): Protect global vars that can be protected. Use
	asan_ctor_statements instead of ctor_statements
	* asan.h (asan_protect_global): New prototype.
	(asan_red_zone_size): New inline function.

2013-06-04  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported

	2012-11-12  Jakub Jelinek  <jakub@redhat.com>

	* Makefile.in (asan.o): Depend on $(EXPR_H) $(OPTABS_H).
	(cfgexpand.o): Depend on asan.h.
	* asan.c: Include expr.h and optabs.h.
	(asan_shadow_set): New variable.
	(asan_shadow_cst, asan_emit_stack_protection): New functions.
	(asan_init_shadow_ptr_types): Initialize also asan_shadow_set.
	* cfgexpand.c: Include asan.h.  Define HOST_WIDE_INT heap vector.
	(partition_stack_vars): If i is large alignment and j small
	alignment or vice versa, break out of the loop instead of continue,
	and put the test earlier.  If flag_asan, break out of the loop
	if for small alignment size is different.
	(struct stack_vars_data): New type.
	(expand_stack_vars): Add DATA argument.  Change PRED type to
	function taking size_t argument instead of tree.  Adjust pred
	calls.  Fill DATA in and add needed padding in between variables
	if -faddress-sanitizer.
	(defer_stack_allocation): Defer everything for flag_asan.
	(stack_protect_decl_phase_1, stack_protect_decl_phase_2): Take
	size_t index into stack_vars array instead of the decl directly.
	(asan_decl_phase_3): New function.
	(expand_used_vars): Return var destruction sequence.  Adjust
	expand_stack_vars calls, add another one for flag_asan.  Call
	asan_emit_stack_protection if expand_stack_vars added anything
	to the vectors.
	(expand_gimple_basic_block): Add disable_tail_calls argument.
	(gimple_expand_cfg): Pass true to it if expand_used_vars returned
	non-NULL.  Emit the sequence returned by expand_used_vars after
	return_label.
	* asan.h (asan_emit_stack_protection): New prototype.
	(asan_shadow_set): New decl.
	(ASAN_RED_ZONE_SIZE, ASAN_STACK_MAGIC_LEFT, ASAN_STACK_MAGIC_MIDDLE,
	ASAN_STACK_MAGIC_RIGHT, ASAN_STACK_FRAME_MAGIC): Define.
	(asan_protect_stack_decl): New inline.
	* toplev.c (process_options): Also disable -faddress-sanitizer on
	!FRAME_GROWS_DOWNWARDS targets.

2013-06-03  Manjunath Matti <mmatti@caviumnetworks.com>
	
	* asan.c (pass_asan_O0) Removed invalid field 
	optinfo_flags.

2013-06-03  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backported libsanitizer support.

	2012-11-12  Jakub Jelinek  <jakub@redhat.com>

	* toplev.c (process_options): Warn and turn off
	-faddress-sanitizer if not supported by target.
	* asan.c: Include target.h.
	(asan_scale, asan_offset_log_32, asan_offset_log_64,
	asan_offset_log): Removed.
	(build_check_stmt): Use ASAN_SHADOW_SHIFT and
	targetm.asan_shadow_offset ().
	(asan_instrument): Don't initialize asan_offset_log.
	* asan.h (ASAN_SHADOW_SHIFT): Define.
	* target.def (TARGET_ASAN_SHADOW_OFFSET): New hook.
	* doc/tm.texi.in (TARGET_ASAN_SHADOW_OFFSET): Add it.
	* doc/tm.texi: Regenerated.
	* Makefile.in (asan.o): Depend on $(TARGET_H).
	* config/i386/i386.c (ix86_asan_shadow_offset): New function.
	(TARGET_ASAN_SHADOW_OFFSET): Define.

2013-06-03  Manjunath Matti <mmatti@caviumnetworks.com>

	Backported initial libsanitizer support.

	2012-11-12  Wei Mi <wmi@google.com>
		Diego Novillo <dnovillo@google.com>
		Dodji Seketeli <dodji@redhat.com>

	* Makefile.in: Add asan.c and its dependencies.
	* common.opt: Add -faddress-sanitizer option.
	* invoke.texi: Document the new flag.
	* passes.c: Add the asan pass.
	* toplev.c (compile_file): Call asan_finish_file.
	* asan.c: New file.
	* asan.h: New file.
	* tree-pass.h: Declare pass_asan.

2013-06-03  Andrew Pinski  <apinski@cavium.com>

	* config/arm/t-linux-eabi: Disable all of the multilibs as
	they don't work nicely with yocto.

2013-05-27  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Bug #2504
	Ported

	2012-12-26  Rong Xu  <xur@google.com>
	* libgcc/libgcov.c (__gcov_one_value_profiler_body_atomic): New
	function. Atomic update profile counters.
	(__gcov_one_value_profiler_atomic): Ditto.
	(__gcov_indirect_call_profiler_atomic):	Ditto.
	* gcc/gcov-io.h: Macros for atomic update.
	* gcc/common.opt: New option.
	* gcc/tree-profile.c (gimple_init_edge_profiler): Atomic
	update profile counters.
	(gimple_gen_edge_profiler): Ditto.

2013-05-24  Andrew Pinski  <apinski@cavium.com>

	Bug #4781
	* testsuite/lib/target-supports.exp (check_vect_support_and_set_flags):
	Set dg-do-what-default to compile for octeon targets.

2013-05-23  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backport from mainline:

	2012-05-01  Richard Henderson  <rth@redhat.com>

	* common.opt (fsync-libcalls): New.
	* doc/invoke.texi: Document it.
	* optabs.c (init_sync_libfuncs): Honor it.

2013-05-20  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_expand_ext_as_unaligned_load):
	Allow BLKmode mem for 16 bit extraction.
	Fix the case where the dest is SImode for 16bit extraction.
	Fix the case where the dest is HImode for 16bit extraction.

2013-04-30  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Bug #6799
	Backport from mainline:
	2013-03-18  Richard Earnshaw  <rearnsha@arm.com>

	PR target/56470
	* arm.c (shift_op): Validate RTL pattern on the fly.
	(arm_print_operand, case 'S'): Don't use shift_operator 
	to validate the RTL.

2013-04-27  Andrew Pinski  <apinski@cavium.com>

	Bug #6798
	* expmed.c (store_bit_field_2): Correct the case where
	insv does not exist and this is a memory RTL.

2013-04-27  Andrew Pinski  <apinski@cavium.com>

	* expmed.c (store_bit_field_2): Fix the case where insv does
	not exist.

2013-04-27  Andrew Pinski  <apinski@cavium.com>

	Backport from the aarch64-4.7 branch (FSF trunk has a different patch)
	2012-10-02  Tejas Belagod  <tejas.belagod@arm.com>
	    Ulrich Weigand <Ulrich.Weigand@de.ibm.com> 

	* reload.c (find_reloads_subreg_address): Remove FORCE_REPLACE
	parameter.  Always replace normal subreg with memory reference
	whenever possible.  Return NULL otherwise.
	(find_reloads_toplev): Always call find_reloads_subreg_address
	for subregs of registers equivalent to a memory location.
	Only recurse further if find_reloads_subreg_address fails.
	(find_reloads_address_1): Only call find_reloads_subreg_address
	for subregs of registers equivalent to a memory location.
	Properly handle failure of find_reloads_subreg_address.

2013-04-26  Andrew Pinski  <apinski@cavium.com>

	* reload1.c (spill_failure): Use inform instead of error
	to force the notion that the error message is really an internal
	compiler error message.
	(_fatal_insn): Likewise.

2013-04-24  Andrew Pinski  <apinski@cavium.com>

	* acinclude.m4: Sync ld/as version with the trunk version.
	* configure.ac: Likewise.
	* configure: Regenerate.

2013-03-29  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_rtx_cost_data): Fix Octeon3's movz.

2013-03-29  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-math-opts.c (execute_optimize_bswap):
	Fix typo.

2013-03-29  Andrew Pinski  <apinski@cavium.com>

	Bug #6524
	* gimple-pretty-print.c (dump_unary_rhs): Handle BYTESWAP_EXPR, print
	out the precision of the type too.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	* tree-ssa-math-opts.c (execute_optimize_bswap):
	Fix the generating of the correct byteswap.  Use the precision
	which is being byteswaped.

2012-08-31  Andrew Pinski  <apinski@cavium.com>

	* config/mips/octeon.md (octeon_fpu): Add to the automaton.
	(octeon_fpu): New cpu unit.
	(octeon_condmove_o2): Check for non floating point modes.
	(octeon_load_o2): Add prefetchx.
	(octeon_cop_o2): Don't check for octeon3.
	(octeon3_faddsubcvt): New reservation.
	(octeon3_fmul): Likewise.
	(octeon3_fmadd): Likewise.
	(octeon3_div_sf): Likewise.
	(octeon3_div_df): Likewise.
	(octeon3_sqrt_sf): Likewise.
	(octeon3_sqrt_df): Likewise.
	(octeon3_rsqrt_sf): Likewise.
	(octeon3_rsqrt_df): Likewise.
	(octeon3_fabsnegmov): Likewise.
	(octeon_fcond): Likewise.
	(octeon_fcondmov): Likewise.
	(octeon_fpmtc1): Likewise.
	(octeon_fpmfc1): Likewise.
	(octeon_fpload): Likewise.
	(octeon_fpstore): Likewise.

2012-08-29  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips-cpus.def (octeon3): New cpu.
	* config/mips/mips-protos.h (mips_expand_cstore_fp): New prototype.
	* config/mips/mips.c (mips_rtx_cost_data): Add octeon3.
	(mips_expand_cstore_fp): New function.
	(mips_print_operand <case 'T', case 't'>): Fix a bug as the mode
	of the comparison no longer matches mode of the operands.
	(mips_issue_rate): Handle PROCESSOR_OCTEON3.
	(mips_option_override): If soft-float was not explicit and
	this is Octeon3, then change to hard float.
	Also don't error out for -mhard-float for Octeon3.
	* config/mips/mips.h (TARGET_OCTEON):  Add Octeon3.
	(TARGET_OCTEON2): Likewise.
	(TARGET_OCTEON3): New define.
	(TUNE_OCTEON): Add Octeon3.
	* config/mips/mips.md (processor): Add octeon3.
	(cstore<mode>): New expand for SCALARF.
	* config/mips/octeon-linux.h (GNU_USER_DYNAMIC_LINKERN32): Define
	(GNU_USER_DYNAMIC_LINKER64): Likewise.
	* config/mips/octeon.h (MULTILIB_ISA_DEFAULT): Define.
	* config/mips/octeon.md (octeon_arith): Add octeon3.
	(octeon_set): Likewise.
	(octeon_condmove_o2): Likewise.
	(octeon_load_o2): Likewise.
	(octeon_cop_o2): Likewise.
	(octeon_store): Likewise.
	(octeon_brj_o2): Likewise.
	(octeon_imul3_o2): Likewise.
	(octeon_imul_o2): Likewise.
	(octeon_mfhilo_o2): Likewise.
	(octeon_imadd_o2): Likewise.
	(octeon_idiv_o2_si): Likewise.
	(octeon_idiv_o2_di): Likewise.
	* config/mips/predicates.md (mips_cstorefp_operator): New predicate.
	* config/mips/t-octeon-elf (MULTILIB_OPTIONS): Add march=octeon3.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_EXCEPTIONS): Don't build the prefetch fixup multilib for Octeon3.
	* config/mips/t-octeon-linux (MULTILIB_OPTIONS): Add march=octeon3.
	(MULTILIB_OSDIRNAMES): Rewrite so it is clear what the multilib
	OS dir names are.

2013-02-07  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backport from mainline:
	2012-06-14  Richard Earnshaw  <rearnsha@arm.com>

	* arm.md (divsf3, divdf3): Remove FPA support.
	(negsf2, negdf2): Likewise.
	(sqrtsf2, sqrtdf2): Likewise.
	(movdfcc): Likewise.
	(modsf3, moddf3, movxf): Delete.
	(push_fp_multi): Delete.
	(fpa.md): Don't include it.
	* fpa.md: Delete file.
	* t-arm (MD_INCLUDES): Remove fpa.md.

2013-02-06  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backport from mainline:
	2012-06-25  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>
	            James Greenhalgh  <james.greenhalgh@arm.com>

	gcc/
	* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Add new built-ins.
	(TARGET_FMA): New macro.
	(TARGET_ARM_QBIT, TARGET_ARM_SAT): Likewise.
	(TARGET_ARM_ARCH): Likewise.
	(TARGET_ARM_ARCH_ISA_THUMB): Likewise.
	(TARGET_V6M, TARGET_V7M): Likewise.
	(TARGET_ARM_ARCH_PROFILE): Likewise.
	(TARGET_ARM_FEATURE_LDREX): Likewise.
	(TARGET_ARM_FP, TARGET_NEON_FP): Likewise.
	(ARM_MIN_ENUM_SIZE): Likewise.
	* config/arm/arm.c (arm_file_start): Refactor appropriately.
	(base_architecture): New enumeration.
	(arm_base_arch): New global variable.
	(processors): Add field base_arch.
	(ARM_ARCH, ARM_CORE): Adjust accordingly.
	(arm_option_override): Add initialization of arm_base_arch.
	* doc/cpp.texi (system-specific predefined macros.): Change.

	gcc/testsuite
	* gcc.target/arm/ftest-support-arm.h New testcase.
	* gcc.target/arm/ftest-support-thumb.h Likewise.
	* gcc.target/arm/ftest-support.h Likewise.
	* gcc.target/arm/ftest-armv4-arm.c: Likewise.
	* gcc.target/arm/ftest-armv4t-arm.c: Likewise.
	* gcc.target/arm/ftest-armv4t-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv5t-arm.c Likewise.
	* gcc.target/arm/ftest-armv5t-thumb.c Likewise.
	* gcc.target/arm/ftest-armv5te-arm.c: Likewise.
	* gcc.target/arm/ftest-armv5te-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6-arm.c Likewise.
	* gcc.target/arm/ftest-armv6-thumb.c Likewise.
	* gcc.target/arm/ftest-armv6k-arm.c Likewise.
	* gcc.target/arm/ftest-armv6k-thumb.c Likewise.
	* gcc.target/arm/ftest-armv6m-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6t2-arm.c: Likewise.
	* gcc.target/arm/ftest-armv6t2-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv6z-arm.c: Likewise.
	* gcc.target/arm/ftest-armv6z-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv7a-arm.c Likewise.
	* gcc.target/arm/ftest-armv7a-thumb.c Likewise.
	* gcc.target/arm/ftest-armv7m-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv7em-thumb.c: Likewise.
	* gcc.target/arm/ftest-armv7r-arm.c Likewise.
	* gcc.target/arm/ftest-armv7r-thumb.c Likewise.
	* gcc/testsuite/lib/target-supports.exp
	(check_effective_target_arm_arch_FUNC): Add support for more
	architectures.
	(add_options_for_arm_arch_FUNC): Likewise.
	(check_effective_target_arm_arch_FUNC_multilib): New functions.

2013-02-06  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Backport from mainline:
	2012-06-13  Xinyu Qi <xyqi@marvell.com>

	* config/arm/arm.c (FL_IWMMXT2): New define.
	(arm_arch_iwmmxt2): New variable.
	(arm_option_override): Enable use of iWMMXt with VFP.
	Disable use of iWMMXt with NEON. Disable use of iWMMXt under
	Thumb mode. Set arm_arch_iwmmxt2.
	(arm_expand_binop_builtin): Accept VOIDmode op.
	(enum arm_builtins): Revise built-in fcode.
	(IWMMXT2_BUILTIN): New define.
	(IWMMXT2_BUILTIN2): Likewise.
	(iwmmx2_mbuiltin): Likewise.
	(builtin_description bdesc_2arg): Revise built in declaration.
	(builtin_description bdesc_1arg): Likewise.
	(arm_init_iwmmxt_builtins): Revise built in initialization.
	(arm_expand_builtin): Revise built in expansion.
	(arm_output_iwmmxt_shift_immediate): New function.
	(arm_output_iwmmxt_tinsr): Likewise.
	* config/arm/arm-protos.h (arm_output_iwmmxt_shift_immediate): Declare.
	(arm_output_iwmmxt_tinsr): Likewise.
	* config/arm/iwmmxt.md (WCGR0, WCGR1, WCGR2, WCGR3): New constant.
	(iwmmxt_psadbw, iwmmxt_walign, iwmmxt_tmrc, iwmmxt_tmcr): Delete.
	(rorv4hi3, rorv2si3, rordi3): Likewise.
	(rorv4hi3_di, rorv2si3_di, rordi3_di): Likewise.
	(ashrv4hi3_di, ashrv2si3_di, ashrdi3_di): Likewise.
	(lshrv4hi3_di, lshrv2si3_di, lshrdi3_di): Likewise.
	(ashlv4hi3_di, ashlv2si3_di, ashldi3_di): Likewise.
	(iwmmxt_tbcstqi, iwmmxt_tbcsthi, iwmmxt_tbcstsi): Likewise
	(*iwmmxt_clrv8qi, *iwmmxt_clrv4hi, *iwmmxt_clrv2si): Likewise.
	(tbcstv8qi, tbcstv4hi, tbsctv2si): New pattern.
	(iwmmxt_clrv8qi, iwmmxt_clrv4hi, iwmmxt_clrv2si): Likewise.
	(*and<mode>3_iwmmxt, *ior<mode>3_iwmmxt, *xor<mode>3_iwmmxt): Likewise.
	(ror<mode>3, ror<mode>3_di): Likewise.
	(ashr<mode>3_di, lshr<mode>3_di, ashl<mode>3_di): Likewise.
	(ashli<mode>3_iwmmxt, iwmmxt_waligni, iwmmxt_walignr): Likewise.
	(iwmmxt_walignr0, iwmmxt_walignr1): Likewise.
	(iwmmxt_walignr2, iwmmxt_walignr3): Likewise.
	(iwmmxt_setwcgr0, iwmmxt_setwcgr1): Likewise.
	(iwmmxt_setwcgr2, iwmmxt_setwcgr3): Likewise.
	(iwmmxt_getwcgr0, iwmmxt_getwcgr1): Likewise.
	(iwmmxt_getwcgr2, iwmmxt_getwcgr3): Likewise.
	(All instruction patterns): Add wtype attribute.
	(*iwmmxt_arm_movdi, *iwmmxt_movsi_insn): iWMMXt coexist with vfp.
	(iwmmxt_uavgrndv8qi3, iwmmxt_uavgrndv4hi3): Revise the pattern.
	(iwmmxt_uavgv8qi3, iwmmxt_uavgv4hi3): Likewise.
	(ashr<mode>3_iwmmxt, ashl<mode>3_iwmmxt, lshr<mode>3_iwmmxt): Likewise.
	(iwmmxt_tinsrb, iwmmxt_tinsrh, iwmmxt_tinsrw):Likewise.
	(eqv8qi3, eqv4hi3, eqv2si3, gtuv8qi3): Likewise.
	(gtuv4hi3, gtuv2si3, gtv8qi3, gtv4hi3, gtv2si3): Likewise.
	(iwmmxt_wunpckihh, iwmmxt_wunpckihw, iwmmxt_wunpckilh): Likewise.
	(iwmmxt_wunpckilw, iwmmxt_wunpckehub, iwmmxt_wunpckehuh): Likewise.
	(iwmmxt_wunpckehuw, iwmmxt_wunpckehsb, iwmmxt_wunpckehsh): Likewise.
	(iwmmxt_wunpckehsw, iwmmxt_wunpckelub, iwmmxt_wunpckeluh): Likewise.
	(iwmmxt_wunpckeluw, iwmmxt_wunpckelsb, iwmmxt_wunpckelsh): Likewise.
	(iwmmxt_wunpckelsw, iwmmxt_wmadds, iwmmxt_wmaddu): Likewise.
	(iwmmxt_wsadb, iwmmxt_wsadh, iwmmxt_wsadbz, iwmmxt_wsadhz): Likewise.
	(iwmmxt2.md): Include.
	* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __IWMMXT2__.
	(TARGET_IWMMXT2): New define.
	(TARGET_REALLY_IWMMXT2): Likewise.
	(arm_arch_iwmmxt2): Declare.
	* config/arm/mmintrin.h: Use __IWMMXT__ to enable iWMMXt intrinsics.
	Use __IWMMXT2__ to enable iWMMXt2 intrinsics.
	Use C name-mangling for intrinsics.
	(__v8qi): Redefine.
	(_mm_cvtsi32_si64, _mm_andnot_si64, _mm_sad_pu8): Revise.
	(_mm_sad_pu16, _mm_align_si64, _mm_setwcx, _mm_getwcx): Likewise.
	(_m_from_int): Likewise.
	(_mm_sada_pu8, _mm_sada_pu16): New intrinsic.
	(_mm_alignr0_si64, _mm_alignr1_si64, _mm_alignr2_si64): Likewise.
	(_mm_alignr3_si64, _mm_tandcb, _mm_tandch, _mm_tandcw): Likewise.
	(_mm_textrcb, _mm_textrch, _mm_textrcw, _mm_torcb): Likewise.
	(_mm_torch, _mm_torcw, _mm_tbcst_pi8, _mm_tbcst_pi16): Likewise.
	(_mm_tbcst_pi32): Likewise.
	(_mm_abs_pi8, _mm_abs_pi16, _mm_abs_pi32): New iWMMXt2 intrinsic.
	(_mm_addsubhx_pi16, _mm_absdiff_pu8, _mm_absdiff_pu16): Likewise.
	(_mm_absdiff_pu32, _mm_addc_pu16, _mm_addc_pu32): Likewise.
	(_mm_avg4_pu8, _mm_avg4r_pu8, _mm_maddx_pi16, _mm_maddx_pu16): Likewise.
	(_mm_msub_pi16, _mm_msub_pu16, _mm_mulhi_pi32): Likewise.
	(_mm_mulhi_pu32, _mm_mulhir_pi16, _mm_mulhir_pi32): Likewise.
	(_mm_mulhir_pu16, _mm_mulhir_pu32, _mm_mullo_pi32): Likewise.
	(_mm_qmulm_pi16, _mm_qmulm_pi32, _mm_qmulmr_pi16): Likewise.
	(_mm_qmulmr_pi32, _mm_subaddhx_pi16, _mm_addbhusl_pu8): Likewise.
	(_mm_addbhusm_pu8, _mm_qmiabb_pi32, _mm_qmiabbn_pi32): Likewise.
	(_mm_qmiabt_pi32, _mm_qmiabtn_pi32, _mm_qmiatb_pi32): Likewise.
	(_mm_qmiatbn_pi32, _mm_qmiatt_pi32, _mm_qmiattn_pi32): Likewise.
	(_mm_wmiabb_si64, _mm_wmiabbn_si64, _mm_wmiabt_si64): Likewise.
	(_mm_wmiabtn_si64, _mm_wmiatb_si64, _mm_wmiatbn_si64): Likewise.
	(_mm_wmiatt_si64, _mm_wmiattn_si64, _mm_wmiawbb_si64): Likewise.
	(_mm_wmiawbbn_si64, _mm_wmiawbt_si64, _mm_wmiawbtn_si64): Likewise.
	(_mm_wmiawtb_si64, _mm_wmiawtbn_si64, _mm_wmiawtt_si64): Likewise.
	(_mm_wmiawttn_si64, _mm_merge_si64): Likewise.
	(_mm_torvscb, _mm_torvsch, _mm_torvscw): Likewise.
	(_m_to_int): New define.
	* config/arm/arm-cores.def (iwmmxt2): Add FL_IWMMXT2.
	* config/arm/arm-arches.def (iwmmxt2): Likewise.
	* config/arm/t-arm (MD_INCLUDES): Add marvell-f-iwmmxt.md and
	iwmmxt2.md.
	* config/arm/arm.md (marvell-f-iwmmxt.md): Include.
	(arch): Add "iwmmxt2".
	(arch_enabled): Handle "iwmmxt2".
	(wtype): New attribute.
	(UNSPEC_WMADDS, UNSPEC_WMADDU): Delete.
	(UNSPEC_WALIGNI): New unspec.
	* config/arm/predicates.md (imm_or_reg_operand): New predicate.
	* config/arm/iterators.md (VMMX2): New mode_iterator.
	* config/arm/marvell-f-iwmmxt.md: New file.
	* config/arm/iwmmxt2.md: New file.

2013-01-31  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Bug #6037
	* gcc/testsuite/gcc.dg/builtin-unreachable-5.c: Testcase 
	fixed.

2013-01-30  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/pipeline-1.c: Add -march=octeon
	to force octeon tuning.

2013-01-29  Manjunath Matti <mmatti@caviumnetworks.com>

	Backport from mainline:
	2012-10-18  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>
		    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
		    Sameera Deshpande  <sameera.deshpande@arm.com>

	* config/arm/cortex-a15-neon.md: New file.
	* config/arm/cortex-a15.md (cortex_a15_call): Adjust reservation.
	(cortex_a15_load1): Likewise.
	(cortex_a15_load3): Likewise.
	(cortex_a15_store1): Likewise.
	(cortex_a15_store3): Likewise.
	(cortex-a15-neon.md): Include.

2013-01-28  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (bswaphi2): New pattern.
	* testsuite/gcc.target/mips/bswap-2.c: New testcase.

2013-01-25  Manjunath Matti <mmatti@caviumnetworks.com>

	Backport from mainline:
	2012-11-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>

	gcc/
	* config/arm/arm.md (*arm_abssi2): Define predicable attribute.
	(*arm_neg_abssi2): Likewise.
	* config/arm/thumb2.md (*thumb2_abssi2): Likewise.
	(*thumb2_neg_abssi2): Likewise.

2013-01-23  Manjunath Matti <mmatti@caviumnetworks.com>

	Backport from mainline:
	2012-12-17  Andrew Stubbs  <ams@codesourcery.com>
		    Ulrich Weigand  <ulrich.weigand@linaro.org>

	gcc/
	* config/arm/arm.md (zero_extend<mode>di2): Add extra alternatives 
	for NEON registers.
	Add alternative for one-instruction extend-in-place.
	(extend<mode>di2): Likewise.
	Add constraints for Thumb-mode memory loads.
	Prevent extend splitters doing NEON alternatives.
	* config/arm/iterators.md (qhs_extenddi_cstr, qhs_zextenddi_cstr):
	Adjust constraints to add new alternatives.
	* config/arm/neon.md: Add splitters for zero- and sign-extend.
	
	gcc/testsuite/
	* gcc.target/arm/neon-extend-1.c: New file.
	* gcc.target/arm/neon-extend-2.c: New file.

2013-01-23  Manjunath Matti <mmatti@caviumnetworks.com>
	
	Bug #5982

	gcc/testsuite/
	* gcc.dg/builtin-object-size-10.c: Adjust the 
	testcase for gcc 4.7.
	* gcc.dg/builtin-unreachable-5.c: Ditto.
	* gcc.dg/tree-ssa/builtin-fprintf-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-fprintf-chk-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-printf-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-printf-chk-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-vfprintf-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-vfprintf-chk-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-vprintf-1.c: Ditto.
	* gcc.dg/tree-ssa/builtin-vprintf-chk-1.c: Ditto.
	* gcc.dg/tree-ssa/ssa-ccp-10.c: Ditto.
	* gcc.dg/vect/vec-scal-opt.c: Ditto.
	* gcc.dg/vect/vec-scal-opt1.c: Ditto.
	* gcc.dg/vect/vec-scal-opt2.c: Ditto.

2013-01-22  Andrew Pinski  <apinski@cavium.com>

	* cfgexpand.c (expand_debug_expr <case BYTESWAP_EXPR>): Handle
	BYTESWAP_EXPR.

2013-01-15  Manjunath Matti <mmatti@caviumnetworks.com>

	Backport from mainline:
	2012-09-24  Richard Guenther  <rguenther@suse.de>

	gcc/
	PR tree-optimization/54684
	* tree-ssa-ccp.c (optimize_unreachable): Properly update stmts.

	gcc/testsuite
	PR tree-optimization/54684
	* g++.dg/torture/pr54684.C: New testcase.

2013-01-08  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-11-13  Andrew Stubbs  <ams@codesourcery.com>
		    Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	gcc/
	* config/arm/arm.c (arm_emit_coreregs_64bit_shift): Fix comment.
	* config/arm/arm.md (opt, opt_enabled): New attributes.
	(enabled): Use opt_enabled.
	(ashldi3, ashrdi3, lshrdi3): Add TARGET_NEON case.
	(ashldi3): Allow general operands for TARGET_NEON case.
	* config/arm/iterators.md (rshifts): New code iterator.
	(shift, shifttype): New code attributes.
	* config/arm/neon.md (UNSPEC_LOAD_COUNT): New unspec type.
	(neon_load_count, ashldi3_neon_noclobber, ashldi3_neon, 
	signed_shift_di3_neon, unsigned_shift_di3_neon, 
	ashrdi3_neon_imm_noclobber, lshrdi3_neon_imm_noclobber, 
	<shift>di3_neon): New patterns.

2013-01-07  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-09-17  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org> 
		    Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	gcc/
	* config/arm/arm.c (output_move_neon): Update comment.
	Use vld1.64/vst1.64 instead of vldm/vstm where possible.
	(neon_vector_mem_operand): Support double-word modes.
	* config/arm/neon.md (*neon_mov VD): Call output_move_neon 
	instead of output_move_vfp.  Change constraint from Uv to Un.

2013-01-07  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-09-04  Christophe Lyon  <christophe.lyon@linaro.org>

	gcc/
	* config/arm/arm.c (arm_evpc_neon_vext): New function.
	(arm_expand_vec_perm_const_1): Add call to arm_evpc_neon_vext.

	gcc/testsuite/
	* gcc.target/arm/neon-vext.c: New test.
	* gcc.target/arm/neon-vext-execute.c: Ditto.

2013-01-07  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-08-17  Richard Earnshaw  <rearnsha@arm.com>

	gcc/
	* arm.md (arm_addsi3): New variant for Thumb2 16-bit ADD instruction.
	* arm.c (thumb2_reorg): Don't convert an ADD instruction that's 
	already 16 bits.

2012-12-18  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-08-02  Richard Earnshaw  <rearnsha@arm.com>

	* arm.c (arm_gen_constant): Use UBFX for some AND operations when 
	available.

2012-12-18  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-09-19  Richard Guenther  <rguenther@suse.de>

	gcc/testsuite/
	* gcc.dg/builtin-object-size-10.c: Adjust.
	* gcc.dg/builtin-unreachable-5.c: Adjust.
	* gcc.dg/tree-ssa/builtin-fprintf-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-fprintf-chk-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-printf-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-printf-chk-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-vfprintf-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-vfprintf-chk-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-vprintf-1.c: Adjust.
	* gcc.dg/tree-ssa/builtin-vprintf-chk-1.c: Adjust.
	* gcc.dg/tree-ssa/ssa-ccp-10.c: Adjust.
	* gcc.dg/vect/vec-scal-opt.c: Adjust.
	* gcc.dg/vect/vec-scal-opt1.c: Adjust.
	* gcc.dg/vect/vec-scal-opt2.c: Adjust.

2012-12-18  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-30  Ulrich Weigand  <ulrich.weigand@linaro.org>
		    Richard Earnshaw  <rearnsha@arm.com>

	gcc/
	* target.def (vector_alignment): New target hook.
	* doc/tm.texi.in (TARGET_VECTOR_ALIGNMENT): Document new hook.
	* doc/tm.texi: Regenerate.
	* targhooks.c (default_vector_alignment): New function.
	* targhooks.h (default_vector_alignment): Add prototype.
	* stor-layout.c (layout_type): Use targetm.vector_alignment.
	* config/arm/arm.c (arm_vector_alignment): New function.
	(TARGET_VECTOR_ALIGNMENT): Define.

	* tree-vect-data-refs.c (vect_update_misalignment_for_peel): Use 
	vector type alignment instead of size.
	* tree-vect-loop-manip.c (vect_do_peeling_for_loop_bound): Use 
	element type size directly instead of computing it from alignment.
	Fix variable naming and comment.

	gcc/testsuite/
	* lib/target-supports.exp 
	(check_effective_target_vect_natural_alignment): New function.
	* gcc.dg/align-2.c: Only run on targets with natural alignment 
	of vector types.
	* gcc.dg/vect/slp-25.c: Adjust tests for targets without natural 
	alignment of vector types.

2012-12-14  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-09  Tom de Vries  <tom@codesourcery.com>
		    Richard Guenther  <rguenther@suse.de>
	
	gcc/testsuite/
	* gcc.dg/builtin-unreachable-6.c: New test.
	* gcc.dg/builtin-unreachable-5.c: New test.

2012-12-14  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-16  Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	* tree-ssa-ccp.c (optimize_unreachable): Check gsi_end_p 
	before calling gsi_stmt.

2012-12-14  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-07  Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	* combine.c (force_to_mode) [LSHIFTRT]: Avoid undefined behaviour
	due to negative shift amount.

2012-12-14  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-18  Jie Zhang  <jzhang918@gmail.com>
		    Julian Brown  <julian@codesourcery.com>
	
	gcc/
	* config/arm/arm.c (arm_rtx_costs_1): Adjust cost for
	CONST_VECTOR.
	(arm_size_rtx_costs): Likewise.
	(neon_valid_immediate): Add a case for double 0.0.

	gcc/testsuite/
	* gcc.target/arm/neon-vdup-1.c: New test case.
	* gcc.target/arm/neon-vdup-2.c: New test case.
	* gcc.target/arm/neon-vdup-3.c: New test case.
	* gcc.target/arm/neon-vdup-4.c: New test case.
	* gcc.target/arm/neon-vdup-5.c: New test case.
	* gcc.target/arm/neon-vdup-6.c: New test case.
	* gcc.target/arm/neon-vdup-7.c: New test case.
	* gcc.target/arm/neon-vdup-8.c: New test case.
	* gcc.target/arm/neon-vdup-9.c: New test case.
	* gcc.target/arm/neon-vdup-10.c: New test case.
	* gcc.target/arm/neon-vdup-11.c: New test case.
	* gcc.target/arm/neon-vdup-12.c: New test case.
	* gcc.target/arm/neon-vdup-13.c: New test case.
	* gcc.target/arm/neon-vdup-14.c: New test case.
	* gcc.target/arm/neon-vdup-15.c: New test case.
	* gcc.target/arm/neon-vdup-16.c: New test case.
	* gcc.target/arm/neon-vdup-17.c: New test case.
	* gcc.target/arm/neon-vdup-18.c: New test case.
	* gcc.target/arm/neon-vdup-19.c: New test case.
	* gcc.target/arm/neon-combine-sub-abs-into-vabd.c: Make intrinsic
	arguments non-constant.

2012-12-14  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-18  Andrew Stubbs  <ams@codesourcery.com>
		    Mark Shinwell  <shinwell@codesourcery.com>
		    Julian Brown  <julian@codesourcery.com>

	gcc/
	* config/arm/vfp.md (*arm_movsi_vfp, *thumb2_movsi_vfp)
	(*movdi_vfp_cortexa8, *movsf_vfp, *thumb2_movsf_vfp)
	(*movdf_vfp, *thumb2_movdf_vfp, *movsfcc_vfp)
	(*thumb2_movsfcc_vfp, *movdfcc_vfp, *thumb2_movdfcc_vfp): Add
	neon_type.
	* config/arm/arm.md (neon_type): Update comment.

2012-12-13  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-04-28  Joern Rennecke  <joern.rennecke@embecosm.com>
		Steven Bosscher  <steven@gcc.gnu.org>
		Maxim Kuvyrkov  <maxim@codesourcery.com>
	
	PR tree-optimization/38785
	* common.opt (ftree-partial-pre): New option.
	* doc/invoke.texi: Document it.
	* opts.c (default_options_table): Initialize flag_tree_partial_pre.
	* tree-ssa-pre.c (do_partial_partial_insertion): Insert only if it will
	benefit speed path.
	(execute_pre): Use flag_tree_partial_pre.

2012-12-13  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-06-15  Marc Glisse  <marc.glisse@inria.fr>
	
	PR c++/51033
	* c-typeck.c (c_build_vec_perm_expr): Move to c-family/c-common.c.
	* c-tree.h (c_build_vec_perm_expr): Move to c-family/c-common.h.
	
	cp/
	2012-06-15  Marc Glisse  <marc.glisse@inria.fr>
	
	PR c++/51033
	* semantics.c (literal_type_p): Handle VECTOR_TYPE.
	(potential_constant_expression_1): Handle VEC_PERM_EXPR.
	* parser.c (cp_parser_postfix_expression): Handle RID_BUILTIN_SHUFFLE.
	
	c-family
	2012-06-15  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/51033
	* c-common.h (c_build_vec_perm_expr): Move decl here.
	* c-common.c (c_build_vec_perm_expr): Move definition
	here.
	
	2012-06-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>
	
	PR c++/51033
	* c-c++-common/torture/vshuf-16.inc: Move from gcc.c-torture/execute/.
	* c-c++-common/torture/vshuf-2.inc: Likewise.
	* c-c++-common/torture/vshuf-4.inc: Likewise.
	* c-c++-common/torture/vshuf-8.inc: Likewise.
	* c-c++-common/torture/vshuf-main.inc: Likewise.
	* c-c++-common/torture/vshuf-v16hi.c: Likewise.
	* c-c++-common/torture/vshuf-v16qi.c: Likewise.
	* c-c++-common/torture/vshuf-v2df.c: Likewise.
	* c-c++-common/torture/vshuf-v2di.c: Likewise.
	* c-c++-common/torture/vshuf-v2sf.c: Likewise.
	* c-c++-common/torture/vshuf-v2si.c: Likewise.
	* c-c++-common/torture/vshuf-v4df.c: Likewise.
	* c-c++-common/torture/vshuf-v4di.c: Likewise.
	* c-c++-common/torture/vshuf-v4hi.c: Likewise.
	* c-c++-common/torture/vshuf-v4sf.c: Likewise.
	* c-c++-common/torture/vshuf-v4si.c: Likewise.
	* c-c++-common/torture/vshuf-v8hi.c: Likewise.
	* c-c++-common/torture/vshuf-v8qi.c: Likewise.
	* c-c++-common/torture/vshuf-v8si.c: Likewise.

2012-12-10  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-06-27  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	gcc/
	PR C++/51033
	* semantics.c (constexpr_call): Fix typo in comment.
	(cxx_eval_vec_perm_expr): New.
	(cxx_eval_constant_expression): Fold VEC_PERM_EXPRs.

	gcc/testsuite/
	2012-06-27  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>
	PR c++/51033.
	* g++.dg/torture/vshuf-16.inc: New test.
	* g++.dg/torture/vshuf-2.inc: New test.
	* g++.dg/torture/vshuf-4.inc: New test.
	* g++.dg/torture/vshuf-8.inc: New test.
	* g++.dg/torture/vshuf-main.inc: New test.
	* g++.dg/torture/vshuf-v16hi.C: New test.
	* g++.dg/torture/vshuf-v16qi.C:	New test.
	* g++.dg/torture/vshuf-v2df.C: New test.
	* g++.dg/torture/vshuf-v2di.C: New test.
	* g++.dg/torture/vshuf-v2sf.C: New test.
	* g++.dg/torture/vshuf-v2si.C: New test.
	* g++.dg/torture/vshuf-v4df.C: New test.
	* g++.dg/torture/vshuf-v4di.C: New test.
	* g++.dg/torture/vshuf-v4sf.C: New test.
	* g++.dg/torture/vshuf-v4si.C: New test.
	* g++.dg/torture/vshuf-v8hi.C: New test.
	* g++.dg/torture/vshuf-v8qi.C: New test.
	* g++.dg/torture/vshuf-v8si.C: New test.

2012-12-10  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-07-01  Wei Guozhi  <carrot@google.com>

	gcc/
	PR target/53447
	* config/arm/arm-protos.h (const_ok_for_dimode_op): New prototype.
	* config/arm/arm.c (const_ok_for_dimode_op): New function.
	* config/arm/constraints.md (Dd): New constraint.
	* config/arm/predicates.md (arm_adddi_operand): New predicate.
	* config/arm/arm.md (adddi3): Extend it to handle constants.
	(arm_adddi3): Likewise.
	(addsi3_carryin_<optab>): Extend it to handle sbc case.
	(addsi3_carryin_alt2_<optab>): Likewise.
	* config/arm/neon.md (adddi3_neon): Extend it to handle constants.
	
	gcc/testsuite/
	* gcc.target/arm/pr53447-1.c: New testcase.
	* gcc.target/arm/pr53447-2.c: New testcase.
	* gcc.target/arm/pr53447-3.c: New testcase.
	* gcc.target/arm/pr53447-4.c: New testcase.
	
2012-12-06  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-06-26  Ulrich Weigand  <ulrich.weigand@linaro.org>

	PR tree-optimization/53729
	PR tree-optimization/53636
	* tree-vect-slp.c (vect_slp_analyze_bb_1): Delay call to
	vect_verify_datarefs_alignment until after statements have 
	been marked as relevant/irrelevant.
	* tree-vect-data-refs.c (vect_verify_datarefs_alignment):
	Skip irrelevant statements.
	(vect_enhance_data_refs_alignment): Use STMT_VINFO_RELEVANT_P 
	instead of STMT_VINFO_RELEVANT.
	(vect_get_data_access_cost): Do not check for supportable 
	alignment before calling vect_get_load_cost/vect_get_store_cost.
	* tree-vect-stmts.c (vect_get_store_cost): Do not abort when 
	handling unsupported alignment.
	(vect_get_load_cost): Likewise.

2012-12-05  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-05-09  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>
	
	* tree-ssa-loop-ivopts.c (add_autoinc_candidates, get_address_cost):
	Replace use of HAVE_{POST/PRE}_{INCREMENT/DECREMENT} with 
	USE_{LOAD/STORE}_{PRE/POST}_{INCREMENT/DECREMENT} appropriately.
	* config/arm/arm.h (ARM_AUTOINC_VALID_FOR_MODE_P): New.
	(USE_LOAD_POST_INCREMENT): Define.
	(USE_LOAD_PRE_INCREMENT): Define.
	(USE_LOAD_POST_DECREMENT): Define.
	(USE_LOAD_PRE_DECREMENT): Define.
	(USE_STORE_PRE_DECREMENT): Define.
	(USE_STORE_PRE_INCREMENT): Define.
	(USE_STORE_POST_DECREMENT): Define.
	(USE_STORE_POST_INCREMENT): Define.
	(arm_auto_incmodes): Add enumeration.
	* config/arm/arm-protos.h (arm_autoinc_modes_ok_p): Declare.
	* config/arm/arm.c (arm_autoinc_modes_ok_p): Define.

2012-12-05  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-06-15  Ulrich Weigand  <ulrich.weigand@linaro.org>
	gcc/
	PR tree-optimization/53636
	* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Verify
	stride when doing basic-block vectorization.
	
	gcc/testsuite/
	PR tree-optimization/53636
	* gcc.target/arm/pr53636.c: New test.

2012-12-04  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-05-18  Andrew Stubbs  <ams@codesourcery.com>
	* config/arm/arm-protos.h (arm_emit_coreregs_64bit_shift): New 
	prototype.
	* config/arm/arm.c (arm_emit_coreregs_64bit_shift): New function.
	* config/arm/arm.md (ashldi3): Use arm_emit_coreregs_64bit_shift.
	(ashrdi3,lshrdi3): Likewise.
	(arm_cond_branch): Remove '*' to enable gen_arm_cond_branch.

2012-12-04  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-04-30  Andrew Stubbs  <ams@codesourcery.com>
	* config/arm/arm.md (negdi2): Use gen_negdi2_neon.
	* config/arm/neon.md (negdi2_neon): New insn.
	Also add splitters for core and NEON registers.

2012-12-04  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-04-30  Andrew Stubbs  <ams@codesourcery.com>
	gcc/
	* config/arm/arm.c (neon_valid_immediate): Allow const_int.
	(arm_print_operand): Add 'x' format.
	* config/arm/constraints.md (Dn): Allow const_int.
	* config/arm/neon.md (neon_mov<mode>): Use VDX to allow DImode.
	Use 'x' format to print constants.
	* config/arm/predicates.md (imm_for_neon_mov_operand): Allow const_int.
	* config/arm/vfp.md (movdi_vfp): Disable for const_int when neon
	is enabled.
	(movdi_vfp_cortexa8): Likewise.

2012-11-27  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline r186167:
	2012-04-05  Andrew Stubbs  <ams@codesourcery.com>
	gcc/
	* config/arm/arm.md (arch): Add neon_onlya8 and neon_nota8.
	(arch_enabled): Handle new arch types.
	(one_cmpldi2): Add NEON support.

2012-11-27  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline r185702:
	libcpp/
	2012-03-22  Richard Earnshaw  <rearnsha@arm.com>
	* lex.c (search_line_fast): Provide Neon-optimized version for ARM.

2012-11-27  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-03-21  Richard Earnshaw  <rearnsha@arm.com>
	gcc/
	* neon.md (neon_vget_lanev2di): Use gen_lowpart and gen_highpart.
	* config/arm/neon.ml (Fixed_return_reg): Renamed to fixed_vector_reg.
	All callers changed.
	(Fixed_core_reg): New feature.
	(Vget_lane [sizes S64 and U64]): Add Fixed_core_reg.  Allow fmrrd in
	disassembly.
	* neon-testgen.ml: Handle Fixed_core_reg.

	gcc/testsuite/
	* gcc.target/arm/neon/vgetQ_laneu64.c: Regenerated.
	* gcc.target/arm/neon/vgetQ_lanes64.c: Likewise.

2012-11-27  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-03-20  Richard Earnshaw  <rearnsha@arm.com>

        * arm/predicates.md (zero_operand, reg_or_zero_operand): New predicates.
	* arm/neon.md (neon_vceq<mode>, neon_vcge<mode>): Use 
	reg_or_zero_operand predicate.
	(neon_vcle<mode>, neon_vclt<mode>): Use zero_operand predicate.

2012-11-26  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-03-26  Ulrich Weigand  <ulrich.weigand@linaro.org>
	gcc/
	PR tree-optimization/52686
	* tree-vect-data-refs.c (vect_get_smallest_scalar_type): Handle
	WIDEN_LSHIFT_EXPR.
	
	gcc/testsuite/
	PR tree-optimization/52686
	* gcc.target/arm/pr52686.c: New test.

2012-11-23  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mailine:
	2012-08-20  Richard Earnshaw  <rearnsha@arm.com>
	
	* gcc.target/arm/thumb-16bit-ops.c (f): This test uses a 16-bit
	add instruction.
	(f2): New test that really does need adds.

2012-11-23  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mailine:
	2012-03-27  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>

	* gcc.target/arm/thumb-ifcvt.c: Only run for -mthumb.
	* gcc.target/arm/thumb-16bit-ops.c: Likewise.

2012-11-23  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mailine:
	2012-03-21  Andrew Stubbs  <ams@codesourcery.com>

	gcc/
	* config/arm/arm.c (thumb2_reorg): Add complete	support
	for 16-bit instructions.
	* config/arm/thumb2.md: Delete obsolete flag-clobbering peepholes.
	
	gcc/testsuite/
	* gcc.target/arm/thumb-16bit-ops.c: New file.
	* gcc.target/arm/thumb-ifcvt.c: New file.

2012-11-23  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from mainline:
	2012-03-02  Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	gcc/
	* config/arm/arm.c (arm_sat_operator_match): New function.
	* config/arm/arm-protos.h (arm_sat_operator_match): Add prototype.
	* config/arm/arm.md ("insn" attribute): Add "sat" value.
	("SAT", "SATrev"): New code iterators.
	("SATlo", "SAThi"): New code iterator attributes.
	("*satsi_<SAT:code>"): New pattern.
	("*satsi_<SAT:code>_shift"): Likewise.
	* config/arm/arm-fixed.md ("arm_ssatsihi_shift"): Add "insn"
	and "shift" attributes.
	("arm_usatsihi"): Add "insn" attribute.
	* config/arm/predicates.md (sat_shift_operator): Allow multiplication
	by powers of two.  Do not allow shift by 32.

	gcc/testsuite/
	* gcc.target/arm/sat-1.c: New test.

2012-10-31  Manjunath Matti <mmatti@caviumnetworks.com>
	Backport from linaro:
	2012-02-17  Ulrich Weigand  <ulrich.weigand@linaro.org>

	gcc/
	* common/config/arm/arm-common.c (arm_option_optimization_table):
	Enable -fsched-pressure using -fsched-pressure-algorithm=model by
	default when optimizing.

	2012-02-17  Richard Sandiford  <richard.sandiford@linaro.org>

	gcc/
	* sched-deps.c (fixup_sched_groups): Rename to...
	(chain_to_prev_insn): ...this.
	(chain_to_prev_insn_p): New function.
	(deps_analyze_insn): Use it instead of SCHED_GROUP_P.

	2012-02-17  Richard Sandiford  <richard.sandiford@linaro.org>

	gcc/
	* sched-int.h (_haifa_insn_data): Move priority_status.
	Add model_index.
	(INSN_MODEL_INDEX): New macro.
	* haifa-sched.c (insn_delay): New function.
	(sched_regno_pressure_class): Update commentary.
	(mark_regno_birth_or_death): Pass the liveness bitmap and
	pressure array as arguments, instead of using curr_reg_live and
	curr_reg_pressure.  Only update the pressure if the bit in the
	liveness set has changed.
	(initiate_reg_pressure_info): Always trust the live-in set for
	SCHED_PRESSURE_MODEL.
	(initiate_bb_reg_pressure_info): Update call to
	mark_regno_birth_or_death.
	(dep_list_size): Take the list as argument.
	(calculate_reg_deaths): New function, extracted from...
	(setup_insn_reg_pressure_info): ...here.
	(MODEL_BAR): New macro.
	(model_pressure_data, model_insn_info, model_pressure_limit)
	(model_pressure_group): New structures.
	(model_schedule, model_worklist, model_insns, model_num_insns)
	(model_curr_point, model_before_pressure, model_next_priority):
	New variables.
	(MODEL_PRESSURE_DATA, MODEL_MAX_PRESSURE, MODEL_REF_PRESSURE)
	(MODEL_INSN_INFO, MODEL_INSN): New macros.
	(model_index, model_update_limit_points_in_group): New functions.
	(model_update_limit_points, model_last_use_except): Likewise.
	(model_start_update_pressure, model_update_pressure): Likewise.
	(model_recompute, model_spill_cost, model_excess_group_cost): Likewise.
	(model_excess_cost, model_dump_pressure_points): Likewise.
	(model_set_excess_costs): Likewise.
	(rank_for_schedule): Extend SCHED_PRIORITY_WEIGHTED ordering to
	SCHED_PRIORITY_MODEL.  Use insn_delay.  Use the order in the model
	schedule as an alternative tie-breaker.  Update the call to
	dep_list_size.
	(ready_sort): Call model_set_excess_costs.
	(update_register_pressure): Update call to mark_regno_birth_or_death.
	Rely on that function to check liveness rather than doing it here.
	(model_classify_pressure, model_order_p, model_add_to_worklist_at)
	(model_remove_from_worklist, model_add_to_worklist, model_promote_insn)
	(model_add_to_schedule, model_analyze_insns, model_init_pressure_group)
	(model_record_pressure, model_record_pressures): New functions.
	(model_record_final_pressures, model_add_successors_to_worklist)
	(model_promote_predecessors, model_choose_insn): Likewise.
	(model_reset_queue_indices, model_dump_pressure_summary): Likewise.
	(model_start_schedule, model_finalize_pressure_group): Likewise.
	(model_end_schedule): Likewise.
	(schedule_insn): Say when we're scheduling the next instruction
	in the model schedule.
	(schedule_insn): Handle SCHED_PRESSURE_MODEL.
	(queue_to_ready): Do not add instructions that are
	MAX_SCHED_READY_INSNS beyond the current point of the model schedule.
	Always allow the next instruction in the model schedule to be added.
	(debug_ready_list): Print the INSN_REG_PRESSURE_EXCESS_COST_CHANGE
	and delay for SCHED_PRESSURE_MODEL too.
	(prune_ready_list): Extend SCHED_PRIORITY_WEIGHTED handling to
	SCHED_PRIORITY_MODEL, but also take the DFA into account.
	(schedule_block): Call model_start_schedule and model_end_schedule.
	Extend SCHED_PRIORITY_WEIGHTED stall handling to SCHED_PRIORITY_MODEL.
	(sched_init): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL, but don't allocate saved_reg_live or
	region_ref_regs.
	(sched_finish): Update accordingly.
	(fix_tick_ready): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL.
	(add_jump_dependencies): Update call to dep_list_size.
	(haifa_finish_h_i_d): Fix leak of max_reg_pressure.
	(haifa_init_insn): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE handling
	to SCHED_PRESSURE_MODEL.
	* sched-deps.c (init_insn_reg_pressure_info): Likewise, but don't
	allocate INSN_MAX_REG_PRESSURE for SCHED_PRESSURE_MODEL.
	(sched_analyze_insn): Extend INSN_REG_PRESSURE_EXCESS_COST_CHANGE
	handling to SCHED_PRESSURE_MODEL.

	2012-02-17  Richard Sandiford  <richard.sandiford@linaro.org>

	gcc/
	* common.opt (fsched-pressure-algorithm=): New option.
	* flag-types.h (sched_pressure_algorithm): New enum.
	* sched-int.h (sched_pressure_p): Replace with...
	(sched_pressure): ...this new variable.
	* haifa-sched.c (sched_pressure_p): Replace with...
	(sched_pressure): ...this new variable.
	(sched_regno_pressure_class, rank_for_schedule, ready_sort)
	(update_reg_and_insn_max_reg_pressure, schedule_insn)
	(debug_ready_list, prune_ready_list, schedule_block, sched_init)
	(sched_finish, fix_tick_ready, haifa_init_insn): Update accordingly.
	* sched-deps.c (init_insn_reg_pressure_info): Likewise.
	(sched_analyze_insn): Likewise.
	* sched-rgn.c (schedule_region): Likewise.
	* config/m68k/m68k.c (m68k_sched_variable_issue): Likewise.

2012-10-31  Manjunath Matti <mmatti@caviumnetworks.com>

	Backport from mainline:
	2012-09-17  Ulrich Weigand  <ulrich.weigand@linaro.org>
	
	* config/arm/arm.c (arm_rtx_costs_1): Handle vec_extract and vec_set
	patterns.
	* config/arm/arm.md ("vec_set<mode>_internal"): Support memory source
	operands, implemented via vld1 instruction.
	("vec_extract<mode>"): Support memory destination operands, implemented
	via vst1 instruction.
	("neon_vst1_lane<mode>"): Use UNSPEC_VST1_LANE instead of vec_select.
	* config/arm/predicates.md ("neon_lane_number"): Remove.
	
2012-12-18  Manjunath Matti  <mmatti@caviumnetworks.com>
	
	Bug #5215 
	* config/arm/arm.h (CANNOT_CHANGE_MODE_CLASS): Allow move 
	 from V2DImode to DImode for big-endian targets.

2012-12-17  Andrew Pinski  <apinski@cavium.com>

	* config/mips/octeon-elf.h (DWARF_FRAME_REGISTERS): Define to 66.
	Speeds up unwinding by almost by a factor of 2.

2012-11-12  Andrew Pinski  <apinski@cavium.com>

	Bug #5253
	* tree-merge-const-bfstores.c (compute_new_bitfield_positions): Fix
	for little-endian.
	(gate_merge_const_bfstores): Don't disable for little-endian targets.

2012-11-29  Andrew Pinski  <apinski@cavium.com>

	Bug #5464
	* tree-vrp.c (register_edge_assert_for_2): In the case of NAME != 0 and NAME
	being defined as XYZ1 CMP XYZ2 we can assert XYZ1 CMP XYZ2.

2012-11-20  Andrew Pinski  <apinski@cavium.com>

	Bug #5183
	* simplify-rtx.c (simplify_subreg): For the simplification of
	(SUBREG (AND/IOR)), if simplify_unary_operation returns the same
	thing back, just mark the simplification not as happened.
	* testsuite/gcc.c-torture/compile/20121220-1.c: New testcase.

2012-11-19  Andrew Pinski  <apinski@cavium.com>

	* testsuite/g++.dg/cpp0x/initlist-lifetime1.C: Fix testcase where
	argc is always greater than 1 (octeon simulator).
	* testsuite/g++.dg/cpp0x/initlist-lifetime2.C: Likewise.

2012-11-18  Andrew Pinski  <apinski@cavium.com>

	Port from the redhat branch:
	* gcc.c (execute): Free string if i is not 0.
	(execute): Call retry_ice if the program which caused an ICE
	started with "cc1".
	(retry_ice): New function.

2012-11-17  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/ext-33.c: Xfail due to bug 2851.

2012-11-17  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/uninit-pred-8_b.c: xfail because of bug 4568.
	* testsuite/gcc.dg/uninit-pred-9_b.c: Likewise.

2012-11-17  Andrew Pinski  <apinski@cavium.com>

	* testsuite/g++.dg/debug/nullptr01.C: xfail the second scan-assembler.

2012-11-09  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.c-torture/compile/limits-structnest.c: Disable unless
	requested; uses a lot of memory.

2012-11-08  Andrew Pinski  <apinski@cavium.com>

	Bug #5214
	* combine.c (make_field_assignment): Don't create SEQUENCE as the rest
	of combine are not ready yet.

2012-11-08  Andrew Pinski  <apinski@cavium.com>

	Bug #5214
	* combine.c (try_combine): After the first two subst, don't combine
	any more if we gotten a sequence.
	* testsuite/gcc.c-torture/execute/20121108-1.c: New testcase.

2012-11-06  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/inter/mips16-inter.exp: Skip for mipsisa*-octeon-elf*.

2012-11-04  Andrew Pinski  <apinski@cavium.com>

	* gcc.target/mips/extra-move-1.c: Tighten the matching of sll so it does not
	match dsll which is used to generate addresses in n64.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/target-supports.exp (check_effective_target_mips_n64_abicalls):
	New proc.
	* testsuite/gcc.dg/octeon/ext-42.c: Change the testcase to check for 3 ld
	if we are n64 with ABI calls.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/ext-45.c: Tighten the matching of sll so it does not
	match dsll which is used to generate addresses in n64.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/bbit-1.c: Remove as the testcase is optimized better
	than before even though bbit is not produced.  Also bbit-10.c represents the problem
	the testcase was testing.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	Bug #5137
	* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-4.c: Remove the special casing for mips
	as LOGICAL_OP_NON_SHORT_CIRCUIT is no longer 0.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	Bug #5136
	* testsuite/gcc.dg/tree-ssa/pr19431.c: Allow for ?: to show up also.

2012-11-03  Andrew Pinski  <apinski@cavium.com>

	Bug #5134
	* testsuite/gcc.dg/alias-10.c: Change the number of unswitching
	that happens to 3.

2012-11-02  Andrew Pinski  <apinski@cavium.com>

	Bug #5138
	* testsuite/gcc.target/mips/mips32-dsp.c: Don't include stdlib.h or stdio.h.
	Declare abort and exit.

2012-11-02  Andrew Pinski  <apinski@cavium.com>

	Bug #5057
	* testsuite/gcc.dg/octeon/bbit-10.c: Change the second call to abort to
	call abort1 so that cross jumping does not happen.
	* testsuite/gcc.target/mips/octeon-bbit-3.c: Likewise.

2012-11-02  Andrew Pinski  <apinski@cavium.com>

	Bug #5140
	* simplify-rtx.c (simplify_relational_operation_1): Don't simplify
	(LTU/GEU (PLUS a 0) 0) into (GEU/LTU a 0) since they are not equivalent.

2012-11-02  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/ext-42.c: Add note on why this fails for linux n64.
	* testsuite/gcc.dg/octeon/ins-3.c: Check for usd only on the elf targets.
	Check for sdr/sdl on the linux targets.
	* testsuite/gcc.dg/octeon/trunc-20.c: Tighten the .* so it does not match a
	return.

2012-11-02  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/ext-26.c: Check for uld only on the elf targets.
	Check for ldr/ldl on the linux targets.
	* testsuite/gcc.dg/octeon/ext-28.c: Likewise.

2012-10-30  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/test-backtrace.h (compare): Fix for LP64
	targets where the subtraction could truncate to 0.

2012-10-28  Andrew Pinski  <apinski@cavium.com>

	* combine.c (try_combine): If we have a sequence, also check
	the destation of the new i2 to make sure it does not use something
	which is set after i2.

2012-10-27  Andrew Pinski  <apinski@cavium.com>

	Bug #5056
	* expr.c (expand_assignment): Set the correct alignment on the mem
	when doing a movemisalign.
	(expand_expr_real_1 <case TARGET_MEM_REF>): Likewise.
	(expand_expr_real_1 <case MEM_REF>): Likewise.

	* testsuite/gcc.c-torture/compile/20121027-1.c: New testcase.

2012-10-20  Andrew Pinski  <apinski@cavium.com>

	Bug #4691
	Backport:
	Julian Brown <julian@codesourcery.com>
	* config/arm/arm.h (CANNOT_CHANGE_MODE_CLASS): Avoid subreg'ing
	VFP D registers in big-endian mode.

2012-10-19  Manjunath Matti  <mmatti@caviumnetworks.com>

	Bug #4692
	* config/arm/arm.c (arm_return_in_msb): Disallow return 
	in registers if valtype is having mode TImode.

2012-10-15  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/arm/thumb-ltu.c: Also skip for
	arm_hf_eabi targets.

2012-10-14  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/tls/pr42894.c: Don't add any options if
	this is arm_hf_eabi.

2012-10-14  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/builtin-apply2.c: Use arm_hf_eabi instead of
	an explict option check.

2012-10-14  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/arm/pr54051.c: Use arm_neon_ok
	instead of arm_neon for checking if neon is ok to use.

2012-10-14  Andrew Pinski  <apinski@cavium.com>

	Bug #4936
	* testsuite/lib/target-supports.exp (check_effective_target_vect_widen_mult_qi_to_hi):
	Use check_effective_target_arm_neon_ok instead of check_effective_target_arm_neon.
	(check_effective_target_vect_widen_mult_hi_to_si): Likewise.
	(check_effective_target_vect_widen_mult_qi_to_hi_pattern): Likewise.
	(check_effective_target_vect_widen_mult_hi_to_si_pattern): Likewise.
	(check_effective_target_vect_pack_trunc): Likewise.
	(check_effective_target_vect_unpack): Likewise.
	(check_effective_target_vect_multiple_sizes): Likewise.

2012-10-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4933
	* combine.c (reg_subword_p): Return true if we match the
	full register after stripping off zero_extract and strict_low_part.
	(try_combine): Generalize the case where the modifying of the
	subregword part to handle non constant for both instructions.

	* testsuite/gcc.target/mips/ins-11.c: New testcase.


	Revert:
	2012-10-11  Andrew Pinski  <apinski@cavium.com>
	* combine.c (combine_simplify_rtx): Simplify SEQUENCEs.
	If we have a set of zero followed by a zero_extract, this can
	be simplified to a shift.

2012-10-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4935
	* combine.c (make_field_assignment): Reject Zero_extend dest.
	Reject if the dest overlaps with either the original or the src.

2012-10-11  Andrew Pinski  <apinski@cavium.com>

	Bug #2973
	* combine.c (make_extraction): Use the target hook
	mode_for_extraction_insv if we are doing an insv.

2012-10-11  Andrew Pinski  <apinski@cavium.com>

	* combine.c (combine_simplify_rtx): Simplify SEQUENCEs.
	If we have a set of zero followed by a zero_extract, this can
	be simplified to a shift.

2012-10-11  Andrew Pinski  <apinski@cavium.com>

	* config.gcc (mips*-*-linux*): mips*-octeon-linux* and
	mips*-montavista-linux* default to n64 and don't support
	mips16 or o32 and default to soft-float.

2012-10-10  Andrew Pinski  <apinski@cavium.com>

	Bug #4906
	* combine.c (make_field_assignment): Don't check
	reg_overlap_mentioned_p for non REG's.  Also reject
	right away ZERO_EXTRACT.
	* testsuite/gcc.c-torture/compile/20121010-1.c: New testcase.

2012-10-10  Andrew Pinski  <apinski@cavium.com>

	Part of bug #4903
	* config.gcc (mips64*-*-linux*): Support mips64*-montavista-linux*
	as an alias to mips64*-octeon-linux*.
	* config/mips/mips.c (octeon_output_shared_variable): Disable
	if CVMX_SHARED_BSS_FLAGS is not define.

2012-10-07  Andrew Pinski  <apinski@cavium.com>

	Bug #2925
	* combine.c (gen_set_field): New function.
	(make_field_assignment): Rewrite optimizing of setting of
	a zero_extract.  Remove lowpart subreg and truncations.
	Optimize IOR better by using nonzero_bits and comparing
	both sides of the IOR.
	Optimize extends also.

2012-10-07  Andrew Pinski  <apinski@cavium.com>

	* combine.c (try_combine): Remove forgotten debug_rtx.

2012-10-07  Andrew Pinski  <apinski@cavium.com>

	* combine.c (try_combine): Don't do splitting of sequence if
	the set src of either instruction crosses a set.
	(make_field_assignment): Create the sequence for a hard register
	but not for subregs or if the dest overlaps with the original.

2012-10-07  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/octeon/trunc-10.c: Look for \tsll
	rather than just sll as that will match dsll which is used
	for n64 addresses.
	* testsuite/gcc.dg/octeon/trunc-31.c: Likewise.

2012-10-07  Andrew Pinski  <apinski@cavium.com>

	* combine.c (try_combine): If we have a SEQUENCE, then
	split if it was not recognized like splitting up a PARALLEL.
	(make_field_assignment): Produce a SEQUENCE if the input
	register is not the same as the destination register.

2012-10-06  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/ucnid-8.c: Update line numbers after
	previous patch to this file.
	* testsuite/gcc.dg/torture/pr51106-2.c: Likewise.

2012-10-05  Andrew Pinski  <apinski@cavium.com>

	* cp/Make-lang.in (c++.install-common): Use ln -s
	instread of ln to save space.

2012-10-04  Andrew Pinski  <apinski@cavium.com>

	* Makefile.in (install-driver): Use ln -s instead of
	ln to save space.

2012-10-03   Khem Raj  <raj.khem@gmail.com>

	* cp/lang-specs.h: Add %I when using preprocessed source.
	* gcc.c (default_compilers): Likewise.

2012-10-03   Manjunath Matti  <mmatti@mvista.com>

	Bug #4679
	* config/arm/arm.md (arm_zero_extendqisi2): Added pool range.
	(arm_zero_extendqisi2_v6): Likewise.
	(arm_zero_extendhisi2): Likewise.
	(arm_zero_extendhisi2_v6): Likewise.

2012-09-26   Manjunath Matti  <mmatti@mvista.com>

	Bug #4676
	* config/arm/arm.md (extzv_t2): Check the operands are valid
	before reload.

2012-09-30  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/arm/pr51835.c: Require arm_hard_vfp_ok.
	* testsuite/gcc.target/arm/pr51915.c: Likewise.
	* testsuite/gcc.target/arm/pr52006.c: Likewise.
	* testsuite/lib/target-supports.exp
	(check_effective_target_arm_vect_no_misalign): Check for
	-mfloat-abi=soft and -msoft-float in the flag list.
	(check_effective_target_arm_hard_vfp_ok): Likewise.
	(check_effective_target_arm_fp16_ok_nocache): Check for
	-msoft-float also.

2012-09-29  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-8.c: Look at ifcombine1
	instead of ifcombine.
	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-9.c: Likewise.

2012-09-29  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c: Include rtl.h and tm_p.h.
	(ifcombine_ifandif): Handle cases where
	maybe_fold_and_comparisons fails, combining the branches
	anyways.
	(tree_ssa_ifcombine): Inverse the order of
	the basic block walk, increases the number of combinings.
	* Makefile.in (tree-ssa-ifcombine.o): Update dependencies.

	* testsuite/gcc.dg/tree-ssa/phi-opt-2.c: Expect zero ifs as the
	compiler produces a & b now.
	* testsuite/gcc.dg/tree-ssa/phi-opt-9.c: Use a function call
	to prevent conditional move to be used.
	* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c: Remove check for
	"one or more intermediate".

2012-09-29  Andrew Pinski  <apinski@cavium.com>

	Revert:
	2012-07-23  Andrew Pinski  <apinski@cavium.com>

        FSF PR 52005
        * tree-ssa-ifcombine.c (recognize_if_then_else): Handle the case
        where the the then and else are spawed.
        (tree_ssa_ifcombine_bb): Handle the case were we have an empty
	basic block for either then or else.

        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-8.c: New testcase.
        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-9.c: New testcase.

2012-09-29  Andrew Pinski  <apinski@cavium.com>

	Revert:
	2012-09-06  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c: Include rtl.h and tm_p.h.
	* Makefile.in (tree-ssa-ifcombine.o): Update dependencies.

	2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (LOGICAL_OP_NON_SHORT_CIRCUIT): Delete define.
	* tree-ssa-ifcombine.c (LOGICAL_OP_NON_SHORT_CIRCUIT): Define if not
	already defined.
	(ifcombine_ifandif): Use LOGICAL_OP_NON_SHORT_CIRCUIT instead of
	checking BRANCH_COST.
	(ifcombine_iforif): Likewise.

	2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c (ifcombine_ifandif): Handle cases
	where maybe_fold_and_comparisons fails, combining the branches
	anyways.
	(ifcombine_iforif):  Handle cases where maybe_fold_or_comparisons
	fails, combining the branches anyways.
	(tree_ssa_ifcombine): Inverse the order of
	the basic block walk, increases the number of combinings.

	* testsuite/gcc.dg/tree-ssa/phi-opt-2.c: Expect zero ifs as the compiler
	produces a & b now.
	* testsuite/gcc.dg/tree-ssa/phi-opt-9.c: Use a function call
	to prevent conditional move to be used.
	* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c: Remove check for
	"one or more intermediate".

2012-09-27  Andrew Pinski  <apinski@cavium.com>

	Bug #4764
	* testsuite/gcc.c-torture/compile/20120927-1.c: New testcase.

2012-09-27  Alexandre Oliva  <aoliva@redhat.com>

	Bug #4764
	FSF PR 53135
	* dwarf2out.c (value_format): Handle DW_FORM_block4.

2012-09-24  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/powerpc/ppc-fma-1.c: Add -fno-unroll-loops.
	* testsuite/gcc.target/powerpc/ppc-fma-2.c: Likewise.
	* testsuite/gcc.target/powerpc/ppc-fma-3.c: Likewise.
	* testsuite/gcc.target/powerpc/ppc-fma-4.c: Likewise.

2012-09-22  Andrew Pinski  <apinski@cavium.com>

	Bug #4737
	* simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):
	Don't optimize vector truncates into a subreg.

2012-09-21  Andrew Pinski  <apinski@cavium.com>

	Bug #4620
	* testsuite/gcc.dg/octeon/madd-1.c: Fix testcase.
	* testsuite/gcc.dg/octeon/madd-2.c: Fix testcase.
	* testsuite/gcc.dg/octeon/madd-3.c: Fix testcase.
	* testsuite/gcc.dg/octeon/madd-4.c: Fix testcase.

2012-09-17  Andrew Pinski  <apinski@cavium.com>

	Bug #4705
	* optabs.c (emit_conditional_move): Only
	try using the same registers for the constant
	if the modes are equal.

	* testsuite/gcc.c-torture/compile/20120917-1.c: New testcase.


2012-09-16  Andrew Pinski  <apinski@cavium.com>

	Bug #4695
	* testsuite/gcc.target/arm/unsigned-extend-2.c: Use shift to
	the left rather than shift to the right so the and would not
	be removed and the loop does not get optimized away.

2012-09-15  Andrew Pinski  <apinski@cavium.com>

	* config/arm/t-linux-eabi (MULTILIB_MATCHES): Fixup
	the mhard-float case and add mfloat-abi=softfp as
	an alias for -mfloat-abi=soft.

2012-09-14  Andrew Pinski  <apinski@cavium.com>

	Bug #4618
	* config/arm/linux-eabi.h (TARGET_DEFAULT_FLOAT_ABI): Define
	to ARM_FLOAT_ABI_HARD.
	(GLIBC_DYNAMIC_LINKER_DEFAULT): Change to the hard float one.
	(MULTILIB_DEFAULT_ENDIAN): New define.
	(MULTILIB_DEFAULTS): New define.
	* config/arm/t-linux-eabi (MULTILIB_OPTIONS): Redefine to include
	hard and soft float ABIs.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_OSDIRNAMES): Likewise.
	(MULTILIB_MATCHES): Match -msoft-float as -mfloat-abi=soft.

2012-09-13  Andrew Pinski  <apinski@cavium.com>

	* combine.c (simplify_set): Only simplify (set (subreg (x)) (y)
	when the subreg is a paradoxical subreg.

	* testsuite/gcc.c-torture/compile/20120913-1.c: New testcase.

2012-09-10  Andrew Pinski  <apinski@cavium.com>

	Bug #4619
	* simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):
	Simplify truncate when no matter what if
	TRULY_NOOP_TRUNCATION_MODES_P is true.
	(simplify_subreg): When doing (subreg (ior/and)) produce
	TRUNCATE rather than subregs of the inner operands and only
	do it if the outer mode is a scalar integer mode.

2012-09-10  Andrew Pinski  <apinski@cavium.com>

	Bug #4613
	* expr.c (expand_cond_expr_using_xors):	Call
	reduce_to_bit_field_precision if needed after the negation.

	* testsuite/gcc.c-torture/execute/20120910-1.c: New testcase.

2012-09-06  Andrew Pinski  <apinski@cavium.com>

	* timevar.def (TV_TREE_SSA_MERGE_COMMON): New.
	* tree-ssa-merge-common-code.c (pass_merge_common_code): Use
	 TV_TREE_SSA_MERGE_COMMON.

2012-09-06  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c: Include rtl.h and tm_p.h.
	* Makefile.in (tree-ssa-ifcombine.o): Update dependencies.

2012-09-05  Andrew Pinski  <apinski@cavium.com>

	FSF PR tree-opt/54494
	* tree-ssa-strlen.c (strlen_optimize_stmt): Don't look at statements
	which have volatile operands.

	* testsuite/gcc.dg/tree-ssa/strlen-1.c: New testcase.

2012-09-03  Andrew Pinski  <apinski@cavium.com>

	Bug #4370
	Bug #4569
	* tree-ssa-phiopt.c (simple_cond_move_replacement):
	Manually create the assignment of the conditional expression.

2012-09-03  Andrew Pinski  <apinski@cavium.com>

	FSF PR tree-opt/54362
	Start of Bug #4370
	* trans-mem.c (thread_private_new_memory): Handle
	COND_EXPR like a PHI with two arguments.

	* testsuite/gcc.dg/tm/memopt-16.c: New testcase.

2012-08-30  Andrew Pinski  <apinski@cavium.com>

	Bug #4587
	* simplify-rtx.c (simplify_ternary_operation): Don't create
	a lowpart for mode of VOIDmode.

	* testsuite/gcc.c-torture/compile/20120830-2.c: New testcase.

2012-08-30  Andrew Pinski  <apinski@cavium.com>

	Bug #4586
	* tree-ssa-phiopt.c (tree_ssa_phiopt_worker): Only delete the phi node
	when we actually did the propagatation for degenerate phi.

	* testsuite/gcc.c-torture/compile/20120830-1.c: New testcase.

2012-08-29  Andrew Pinski  <apinski@cavium.com>

	Bug #4374
	* combine.c (simplify_set): Simplify
	(set (subreg (a)) (b)) to (set (a) (subreg (b))
	iff (subreg (b)) simplifies.

2012-08-29  Andrew Pinski  <apinski@cavium.com>

	* simplify-rtx.c (simplify_subreg): Simplify
	(subreg (and/ior (a) (b))) to (and/ior (subreg (a)) (subreg (b)))
	iff either (subreg (a)) or (subreg (b)) simplifies and either
	(a)  or (b) were not a constant integer.

2012-08-29  Andrew Pinski  <apinski@cavium.com>

	* simplify-rtx.c (simplify_binary_operation_1): Don't simplify
	an and with a subreg if the mode is not a scaler integer mode.

2012-08-28  Andrew Pinski  <apinski@cavium.com>

	Bug #4375
	* optabs.c (emit_conditional_move): Try using
	the same registers for the same constants.

2012-08-28  Andrew Pinski  <apinski@cavium.com>

	* optabs.c (emit_conditional_move): If prepare_cmp_insn does not work,
	try with a swaped comparison.

2012-08-28  Andrew Pinski  <apinski@cavium.com>

	* config/i386/i386.c (ix86_expand_int_movcc):
	If emit_store_flag fails, move on to the next case.

2012-08-23  Andrew Pinski  <apinski@cavium.com>

	Bug #4368
	* tree-ssa-phiopt.c (simple_cond_move_replacement):
	Use fold_build2_loc to create the comparision.
	Use fold_build3_loc to create the conditional
	expression using the location of the comparision.
	Also remove the variable from the call to
	force_gimple_operand_gsi.

2012-08-23  Andrew Pinski  <apinski@cavium.com>

	Bug #3307
	* config/mips/mips.md (doloop_end): New expand for
	allowing SMS to work.

	* testsuite/gcc.dg/sms-1.c: Match for MIPS* also.
	* testsuite/gcc.dg/sms-10.c: Likewise.
	* testsuite/gcc.dg/sms-3.c: Likewise.
	* testsuite/gcc.dg/sms-4.c: Likewise.
	* testsuite/gcc.dg/sms-5.c: Likewise.

2012-08-22  Andrew Pinski  <apinski@cavium.com>

	Bug #4550
	* ipa-inline.c (inline_small_functions): For max_count,
	use the max also from indirect calls if doing indirect
	inlinining.

2012-08-22  Andrew Pinski  <apinski@cavium.com>

	Bug #4552
	* combine.c (combine_simplify_rtx): For RTX_BITFIELD_OPS and
	RTX_TERNARY, set op0_mode to op0 mode if it was VOIDmode.

2012-08-21  Andrew Pinski  <apinski@cavium.com>

	Bug #4546
	* merge-gcda.c (merge_file): Fixup the case when coming
	to a new function tag.

2012-08-13  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (sync_<optab><mode>): Remove.
	(sync_old_<optab><mode>): Remove.
	(sync_new_<optab><mode>): Remove.
	(atomic_fetch_<optab><mode>): New pattern.
	(atomic_<optab><mode>): New pattern.
	(atomic_<optab>_fetch<mode>): New expand.

2012-08-12  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/atomic-memory-2.c: Forbid octeon2 as
	law is used instead.
	* testsuite/gcc.target/mips/fix-r10000-1.c: Likewise.
	* testsuite/gcc.target/mips/fix-r10000-15.c: Likewise.
	* testsuite/gcc.target/mips/fix-r10000-2.c: Likewise.
	* testsuite/gcc.target/mips/fix-r10000-7.c: Likewise.
	* testsuite/gcc.target/mips/fix-r10000-8.c: Likewise.

2012-08-12  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (atomic_add<mode>_saa): Fix
	memory constraint, should be ZR and not R.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (sync_old_sub<mode>): Remove.
	(sync_new_sub<mode>): Remove.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (atomic_fetch_sub<mode>): New expand.
	(atomic_sub_fetch<mode>): New expand.
	(atomic_fetch_sub<mode>_llsc): New pattern.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (sync_sub<mode>): Remove.
	(sync_old_add<mode>): Remove.
	(sync_new_add<mode>): Remove.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (atomic_sub<mode>): New expand.
	(atomic_sub<mode>_llsc): New pattern.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (sync_compare_and_swap<mode>): Delete
	(sync_add<mode>): Delete.

2012-08-08  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (UNSPEC_MEMORY_BARRIER_R): New unspec.
	(memory_barrier_r): New expand.
	(*memory_barrier_r): New pattern.
	(atomic_load<mode>): For octeon emit memory_barrier_r so
	the load will be done at the correct location.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (UNSPEC_ATOMIC_OP): New unspec.
	(atomic_add<mode>): New expand.
	(atomic_add<mode>_llsc): New pattern.
	(atomic_add<mode>_saa): New pattern.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (INT1): New mode iterator.
	* config/mips/sync.md (UNSPEC_MEMORY_BARRIER_W): New unspec.
	(memory_barrier_w): New expand.
	(memory_barrier_w_internal): New pattern.
	(atomic_store<mode>): New expand.
	(atomic_load<mode>): New expand.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/sync.md (atomic_add_fetch<mode>): New pattern.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_process_sync_loop): Always emit
	syncw for Octeon instead of sync.
	* config/mips/mips.opt (msyncw): Remove option.
	* config/mips/sync.md (atomic_compare_and_swap<mode>): Add a few
	comments about the operands.
	(atomic_exchange<mode>_law): Don't emit syncw after the law/lac/las.
	(atomic_fetch_add<mode>_laa): Don't emit syncw after the laa/lad/lai.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.opt (msyncw): New option.
	* config/mips/mips.c (mips_process_sync_loop): Emit
	a sync only if model is MEMMODEL_SEQ_CST and not when
	msyncw is enabled.
	Only emit one syncw for Octeon2.

2012-08-07  Andrew Pinski  <apinski@cavium.com>

	* config/mips/predicates.md (law_lac_las_operand): New predicate.
	* config/mips/sync.md (atomic_exchange<mode>_law): Add support
	for emitting las and lac.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (ISA_HAS_LAW): New define.
	* config/mips/sync.md (atomic_exchange<mode>): Add support
	for emitting law.
	(gen_atomic_exchange<mode>_llsc): Disable it for ISA_HAS_LAW.
	(atomic_exchange<mode>_law): New pattern.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/constraints.md (YD): New constraint.
	(YI): Likewise.
	* config/mips/predicates.md (lai_operand): New predicate.
	(lad_operand): Likewise.
	(laa_lai_lad_operand): Likewise.
	* config/mips/sync.md (atomic_fetch_add<mode>_laa):
	Add support for emitting lai and lad.

2012-08-06  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (ISA_HAS_LAA): New define.
	(ISA_HAS_SAA): Likewise.
	* config/mips/sync.md (atomic_fetch_add<mode>): Add support
	for emitting laa.
	(atomic_fetch_add<mode>_llsc): Disable it for
	ISA_HAS_LAA.
	(atomic_fetch_add<mode>_laa): New pattern.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* passes.c (init_optimization_passes): Add pass_tree_ifcombine
	and pass_merge_phi before pass_late_phiopt.

	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-6.c: Look at ifcombine1 instead
	of ifcombine.
	* testsuite/gcc.dg/tree-ssa/ssa-ifcombine-7.c: Look at optimized instead
	of ifcombine.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md: Add to the comment about
	"Bit field extract patterns".

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (<su>mulsi3_highpart): Disable if we have dmul3.
	(<su>mulsi3_highpart_internal): Likewise.

	* testsuite/gcc.target/mips/octeon-dmul-4.c: New testcase.

2012-08-02  Andrew Pinski  <apinski@cavium.com>

	* config/i386/i386.md (*jcc_bt<mode>_mask): Use SWI48 for the modes
	of the and.  Remove simplify_gen_subreg since it is already in the correct
	mode.
	* fwprop.c (propagate_rtx): Take a mask argument.
	If propagate_rtx_1 fails, try using the mask to remove
	an extend from a pseudo-register.
	(forward_propagate_asm): Update call to propagate_rtx.
	(forward_propagate_and_simplify): If the lhs of the set
	is a zero_extract, then pass a mask of the bits which we need.
	* simplify-rtx.c  (simplify_unary_operation_1 <case TRUNCATE>):
        Handle a truncation of an and if the mask is the same as the
        mode mask.
 	(simplify_unary_operation_1 <case ZERO_EXTEND>): Transform
	(zero_extend:SI (subreg:HI foo:DI)) to (subreg:SI foo:DI)
	if we know the zero_extend is not needed.
	(simplify_binary_operation_1): Transform "(and (subreg X) C)"
	into (subreg (and X C)) for lowpart subregs.
	(simplify_ternary_operation <case ZERO_EXTRACT>):
	If op2 is in the same mode as op0 and was a subreg, then create
	a subreg which is the same mode as op0.

	* testsuite/gcc.dg/extend-1.c: New testcase.
	* testsuite/gcc.dg/extend-2.c: New testcase.
	* testsuite/gcc.target/mips/ins-10.c: New testcase.

	Revert:
	* testsuite/gcc.target/mips/extend-1.c: Check for
	two sll and only three dsll/dsra and one seb and
	one seh.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.dg/tree-ssa/ssa-fre-4.c: Don't compile on mips.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	Bug #3596
	* combine.c (simplify_shift_const_1 <case TRUNCATE>): Handle ASHIFTRT
	like LSHIFTRT but use ASHIFTRT as the final result.

	* testsuite/gcc.target/mips/shift-1.c: New testcase.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.h (LOGICAL_OP_NON_SHORT_CIRCUIT): Delete define.
	* tree-ssa-ifcombine.c (LOGICAL_OP_NON_SHORT_CIRCUIT): Define if not
	already defined.
	(ifcombine_ifandif): Use LOGICAL_OP_NON_SHORT_CIRCUIT instead of
	checking BRANCH_COST.
	(ifcombine_iforif): Likewise.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	Bug #3266
	* fold-const.c (build_range_check): Use either
	unsigned_type_node or integer_type_node for the
	type if the precision of the original type is smaller
	than the precision of integer_type_node.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

        Bug #2837
        * config/mips/mips.c (TARGET_PROMOTE_PROTOTYPES): Remove definition.
	* config/mips/mips.md (*baddu_di_eb): New pattern to handle subreg from qi
	to di mode.
	(*baddu_di_el): Likewise.

	* testsuite/gcc.target/mips/ext-2.c: There should be no truncate here.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	continue bug #4296
	* config/mips/octeon.md (octeon_condmove): Split into ...
	(octeon_condmove_o1): This and ...
	(octeon_condmove_o2): This.  Also change the latency to 3.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

        start of bug #4296
        * config/mips/octeon.md (octeon_arith): Don't match slt for the type.
        (octeon_set): New reservation.
        Add bypass between octeon_set and octeon_brj_o2.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	start of Bug #4290
	* config/mips/mips.c (mips_block_move_straight): Use 32bits loads
	if the length is equal to 4 bytes and either of the alignments
	is greater than or equal to 32bits.  Also use 32bits when either
	of the alignment is equal to 32bits not just when both are equal.

2012-08-01  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_rtx_costs <case TRUNCATE>): The truncate
	inside a sign_extend or a zero_extend is free.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	* combine.c (simplify_logical): Add in_cond argument.
        Simplify when the both operands are subregs.
        (combine_simplify_rtx): Update call to simplify_logical.
	* simplify-rtx.c (simplify_unary_operation_1 <case SIGN_EXTEND>):
	(sign_extend:M (and:M X (const_int I)) can be converted over to
	using zero_extend if I does not have the sign bit set.

	* testsuite/gcc.target/mips/ext-15.c: New testcase.
	* testsuite/gcc.target/mips/ext-5.c: Also allow dext instead of just ext.

2012-07-31  Adam Nemet  <anemet@caviumnetworks.com>

	* mips.md (split for equality comparison with non-zero constant): New.

	* testsuite/gcc.target/mips/ext-14.c: New testcase.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	Bug #2970
	* simplify-rtx.c (simplify_subreg): Simplify
	a paradoxical subreg of a truncate.

	* testsuite/gcc.target/mips/extend-1.c: Check for
	two sll and only three dsll/dsra and one seb and
	one seh.
	* testsuite/gcc.target/mips/truncate-13.c: New testcase.

2012-07-31  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_immediate_operand_p): Remove.
	(mips_rtx_costs): Cost of CONST and SYMBOL_REF are zero.
	Remove the code that says constants are (close to) free.
	* config/mips/predicates.md (move_operand): Remove old comment that does
	not apply. Return true for CONST_INT.
	* config/mips/mips.md: New splitter for splitting of constant integers.

	* testsuite/gcc.target/mips/const-anchor-1.c: Support subtracting 2.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #2923
	* combine.c (find_split_point): Handle PLUS/MINUS specially
	when there is no split point for either operands.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #4367
	* expr.c (expand_cond_expr_using_xors): New function.
	(expand_expr_real_2 <case COND_EXPR>): Call expand_cond_expr_using_mask
	before expand_cond_expr_using_cmove.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        Bug #4274
        * expr.c (expand_cond_expr_using_mask): New function.
        (expand_expr_real_2 <case COND_EXPR>): Call expand_cond_expr_using_mask
        before trying any other case.

	* testsuite/testsuite/gcc.target/mips/movcc-6.c: New testcase.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* cse.c (se_insn): Optimize zero_extract even if the cost of the constant
        is greater than the const of the register.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_zero_extend_cost): Fix
	cost of zero extending to DImode from SImode for
	ISA_HAS_EXT_INS.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.c (mips_rtx_costs): Provide the correct cost of an
	expanded ins/dins.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

	Bug #3210
	* combine.c (simplify_comparison): Use gen_lowpart_or_truncate when
	truncating for the comparision.

	* testsuite/gcc.c-torture/execute/20110418-1.c: New testcase.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        * passes.c (init_optimization_passes): Move pass_initialize_regs before
        the first RTL CSE.

2012-07-30  Andrew Pinski  <apinski@cavium.com>

        * tree-pass.h (pass_late_phiopt): New variable.
        * passes.c (init_optimization_passes): Use pass_late_phiopt for the
        last pass_phiopt.
        * tree-ssa-phiopt.c
	(tree_ssa_phiopt_worker): Add late argument.
	Call simple_cond_move_replacement if nothing changed the phi and
	this is the late phiopt.
	(tree_ssa_phiopt): Update call to tree_ssa_phiopt_worker.
	(tree_ssa_cs_elim): Likewise.
	(tree_ssa_late_phiopt): New function.
	(hard_float_target): New function.
        (block_with_single_simple_statement): New function.
	(simple_cond_move_replacement): New function.
	(pass_late_phiopt): New variable.

	* testsuite/gcc.target/mips/octeon-seq-5.c: New testcase.
	* testsuite/gcc.target/mips/movcc-5.c: New testcase.

2012-07-29  Andrew Pinski  <apinski@cavium.com>

	* loop-unroll.c (decide_unroll_constant_iterations): Add more
	debugging output for when the loop does not roll.
	(decide_unroll_runtime_iterations): Use expected_loop_iterations
	when it might be trying to peel instead of unroll.

2012-07-27  Adam Nemet  <anemet@caviumnetworks.com>

        * cfgloopanal.c (init_set_costs): Exclude call-used registers
        from available registers.

2012-07-27  Adam Nemet  <anemet@caviumnetworks.com>

        * config/mips/mips.c (TARGET_SCHED_ADJUST_PRIORITY): New macro.
        (mips_adjust_priority): New function.

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* expr.c (get_condition_from_operand): New function.
	(get_def_noter_for_expr_with_code): New function.
	(expand_cond_expr_using_addcc): New function.
	(expand_cond_expr_using_cmove): Use get_condition_from_operand
	instead of doing it inline.
	(expand_expr_real_2 <case COND_EXPR>): Try expanding using
	addcc before using cmove.
	* optabs.c (emit_conditional_add): Correct comment about the arguments.
	Remove code which might swap op2 and op3 since they cannot be swapped.

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* optabs.c (emit_conditional_move): Allow libcalls too for the
	comparison (allows conditional moves for soft-float).

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-ifcombine.c (ifcombine_ifandif): Handle cases
	where maybe_fold_and_comparisons fails, combining the branches
	anyways.
	(ifcombine_iforif):  Handle cases where maybe_fold_or_comparisons
	fails, combining the branches anyways.
	(tree_ssa_ifcombine): Inverse the order of
	the basic block walk, increases the number of combinings.

	* testsuite/gcc.dg/tree-ssa/phi-opt-2.c: Expect zero ifs as the compiler
	produces a & b now.
	* testsuite/gcc.dg/tree-ssa/phi-opt-9.c: Use a function call
	to prevent conditional move to be used.
	* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c: Remove check for
	"one or more intermediate".

2012-07-27  Andrew Pinski  <apinski@cavium.com>

	* regcprop.c (TARGET_CAN_COPY_MODES): New define.
	(maybe_mode_change): Use TARGET_CAN_COPY_MODES to check if
	we can do the copy.
	* config/mips/mips.h (TARGET_CAN_COPY_MODES): Define.

2012-07-26  Andrew Pinski  <apinski@cavium.com>

	Bug #3261
	* config/mips/mips.md (*mov<GPR:mode>_on_<MOVECC:mode>):
	Remove mode check from comparisons.
	(*mov<SCALARF:mode>_on_<MOVECC:mode>): Likewise.
	(*mov<GPR:mode>_on_<GPR2:mode>_ne): New pattern to match
	when (ne A 0) can be just A.

	* testsuite/gcc.target/mips/movcc-4.c: New testcase.

2012-07-26  Andrew Pinski  <apinski@cavium.com>

	Bug #2854
	Bug #2965
	* config/mips/mips.md (*<optab><mode>3_trunc): New pattern.
	(*ashl_truncsi3): Likewise.
	(*ashl_truncsi3_trunc): Likewise.
	(*ashl_truncsi3_extend): Likewise.

	* testsuite/gcc.target/mips/truncate-10.c: New testcase.
	* testsuite/gcc.target/mips/truncate-11.c: New testcase.
	* testsuite/gcc.target/mips/truncate-12.c: New testcase.

2012-07-26  Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips.md (ior<mode>3): Use uns_arith_or_bitmask_operand.
	Expand early bitmask_operand cases.
	* config/mips/predicates.md (uns_arith_or_bitmask_operand): New predicate.

	* testsuite/gcc.target/mips/ins-8.c: New testcase.
	* testsuite/gcc.target/mips/ins-9.c: New testcase.

2012-07-26  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.target/mips/ext-12.c: New test.
	* testsuite/gcc.target/mips/ext-13.c: New test.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips.md (and<mode>3): Add support for
	bitmask_operand, expanding them early.
	* config/mips/predicates.md (and_reg_operand): Rename to ...
	(and_reg_without_bitmask_operand): This.
	(and_reg_operand): New operand.
	(and_operand): Use and_reg_without_bitmask_operand.
	* testsuite/gcc.target/mips/ext-11.c: New test.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/constraints.md (Yy): New constraint.
        * config/mips/mips.md (*and<mode>3): Add Yy constraint support.
	(split for and of an ins reg,$0,): Split the and if the destination
	not the same as the first operand of the and.
	* config/mips/predicates.md (and_reg_operand): Add inverse_bitmask_operand.

	* testsuite/gcc.target/mips/ins-6.c: New testcase.
	* testsuite/gcc.target/mips/ins-7.c: New testcase.
	* testsuite/gcc.target/mips/ins-5.c: New testcase.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	Bug #4249
	* expr.c (expand_assignment): Set the correct alignment on the mem
	when doing a movemisalign.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	* config/mips/mips.md (movmisalign<mode>): New expand
	for expanding unaligned load/stores.

2012-07-25  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

	* config/mips/mips-protos.h (mips_bitmask, mips_bitmask_p,
        mips_bottom_bitmask_p): Declare them.
	* config/mips/mips.c (mips_bitmask, mips_bitmask_p,
        mips_bottom_bitmask_p): New functions.
	* config/mips/mips.md (*insv<mode>_internal1): New pattern to
	match a bottom insert.
	(*insv<mode>_internal2): Likewise.
	(*insv<mode>_internal3): New pattern to
	match an insert.
	(*insv<mode>_internal4): Likewise.
        * config/mips/predicates.md (bitmask_operand
        bottom_bitmask_operand, inverse_bitmask_operand):
        New predicates.

	* testsuite/gcc.target/mips/ins-4.c: New testcase.

2012-07-25  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

        * config/mips/mips.opt (mmad): New option.
        * config/mips/mips.h (ISA_HAS_MADD_MSUB): Use it.
	* testsuite/gcc.target/mips/mips.exp: Add madd to mips_option_groups.
	* testsuite/gcc.target/mips/madd-10.c: New testcase.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/ext-10.c: Add isa_rev>=2.
	* testsuite/gcc.target/mips/ext-9.c: Likewise.
	* testsuite/gcc.target/mips/ins-3.c: Likewise.
	* testsuite/gcc.target/mips/truncate-9.c: Likewise.

2012-07-25  Andrew Pinski  <apinski@cavium.com>

        * config/mips/mips.md (extv<mode>): Use sll for
        extraction of the lower 32bits.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * regcprop.c (maybe_mode_change): Return the reg in the
        new mode if the copy was done in the same mode size.
        * config/mips/mips.md (extendsidi2): Add expanding in
        a different register; split the move in DImode.

        * testsuite/gcc.target/mips/extra-move-1.c: new testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/mips/ext-10.c: Remove check for octeon
	target and use -mgp64 for the options.
	* testsuite/gcc.target/mips/ext-9.c: Likewise.
	* testsuite/gcc.target/mips/ins-3.c: Likewise.
	* testsuite/gcc.target/mips/truncate-7.c: Likewise.
	* testsuite/gcc.target/mips/truncate-8.c: Likewise.
	* testsuite/gcc.target/mips/truncate-9.c: Likewise.
	* testsuite/gcc.target/mips/unaligned-3.c: Likewise.
	* testsuite/gcc.target/mips/unaligned-4.c: Likewise.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	Bug #3201
	* combine.c (simplify_set): After force_to_mode is called, simplify
	the rtl.

	* testsuite/gcc.target/mips/ext-10.c: New testcase.
	* testsuite/gcc.target/mips/ext-9.c: New testcase.
	* testsuite/gcc.target/mips/ins-3.c: New testcase.
	* testsuite/gcc.target/mips/truncate-9.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* combine.c (combine_validate_cost): Print out the costs even if
        successive.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        Bug #2849
        * simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):
        A truncate of a memory is just loading the low part of the memory.

	* testsuite/gcc.target/mips/truncate-7.c: New testcase.
	* testsuite/gcc.target/mips/truncate-8.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        Start of Bug #4220
        * tree-ssa-sccvn.c (simplify_binary_expression): Add looked_up argument.
        Get the first operand full expression for PLUS, IOR, and AND expressions also.
        Try to simplify (type)a + CST if there is a + CST exists already when type is
        just a different signedness of the type of a.
        (simplify_unary_expression): Add looked_up argument.
        Try to simplify (type)(a+CST) if there exists a (type)a where the type is
        just a difference signedness of the type of a.
        (try_to_simplify): Add looked_up argument.  Update calls to
        simplify_binary_expression and simplify_unary_expression.
        (visit_use): Update call to try_to_simplify.
        Set was_simplified to true if try_to_simplify's looked_up is true.
        * tree-ssa-sccvn.h (struct vn_ssa_aux): New field was_simplified.
        * tree-ssa-pre.c (eliminate): Do an insert when the VN said we should.

2012-07-24  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>

        * tree-ssa-loop-ivopts.c (rewrite_use_address): Create an aligned type
        of the use type of the correct alignment.

	* testsuite/gcc.target/mips/unaligned-4.c: New testcase.
	* testsuite/gcc.target/mips/unaligned-3.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * tree-cfg.c (print_loop): Allow for NULL latch.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/lib/scangcda.exp: New file.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

        * testsuite/gcc.dg/octeon/badd-1.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-2.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-3.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-4.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-5.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-6.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-7.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-8.c: New testcase.
        * testsuite/gcc.dg/octeon/badd-9.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-10.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-12.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-13.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-2.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-3.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-4.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-5.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-6.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-7.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-8.c: New testcase.
        * testsuite/gcc.dg/octeon/bbit-9.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-2.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-3.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-4.c: New testcase.
        * testsuite/gcc.dg/octeon/bt-5.c: New testcase.
        * testsuite/gcc.dg/octeon/bug1546-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug1554-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug401.c: New testcase.
        * testsuite/gcc.dg/octeon/bug985-1.c: New testcase.
        * testsuite/gcc.dg/octeon/bug985-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cins-3.c: New testcase.
        * testsuite/gcc.dg/octeon/clz-1.c: New testcase.
        * testsuite/gcc.dg/octeon/clz-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cmov-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cmov-2.c: New testcase.
        * testsuite/gcc.dg/octeon/cond_expr-1.c: New testcase.
        * testsuite/gcc.dg/octeon/cond_expr-2.c: New testcase.
        * testsuite/gcc.dg/octeon/dpopcount.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-10.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-11.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-12.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-13.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-14.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-15.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-16.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-17.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-18.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-19.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-2.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-20.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-21.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-22.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-23.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-24.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-25.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-26.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-27.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-28.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-29.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-30.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-31.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-32.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-33.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-34.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-35.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-36.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-37.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-38.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-39.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-4.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-40.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-41.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-42.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-43.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-44.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-45.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-5.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-6.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-7.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-8.c: New testcase.
        * testsuite/gcc.dg/octeon/ext-9.c: New testcase.
        * testsuite/gcc.dg/octeon/fdo-1.c: New testcase.
        * testsuite/gcc.dg/octeon/fini-1.cc: New testcase.
        * testsuite/gcc.dg/octeon/ins-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-10.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-11.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-12.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-13.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-14.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-15.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-16.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-17.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-19.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-2.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-20.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-21.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-22.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-23.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-24.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-25.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-26.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-27.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-28.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-3.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-30.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-31.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-32.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-33.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-34.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-35.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-4.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-5.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-6.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-7.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-8.c: New testcase.
        * testsuite/gcc.dg/octeon/ins-9.c: New testcase.
        * testsuite/gcc.dg/octeon/inttypes-1.c: New testcase.
        * testsuite/gcc.dg/octeon/ivopts-1.c: New testcase.
        * testsuite/gcc.dg/octeon/lx-1.c: New testcase.
        * testsuite/gcc.dg/octeon/lx-2.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-1.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-2.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-3.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-4.c: New testcase.
        * testsuite/gcc.dg/octeon/madd-5.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-1.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10b.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-10c.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-11.cc: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-12.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-1a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-2.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-3.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-4.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-5.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-6.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-7.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-7a.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-8.c: New testcase.
        * testsuite/gcc.dg/octeon/merge-const-bfstores-9.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda-1.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda-2.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/merge-gcda.exp: New testcase.
        * testsuite/gcc.dg/octeon/misc/profopt.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-a.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-b.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-m.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next-u.c: New testcase.
        * testsuite/gcc.dg/octeon/misc/rtld_next.exp: New testcase.
        * testsuite/gcc.dg/octeon/misc/serial-profopt.exp: New testcase.
        * testsuite/gcc.dg/octeon/mul-1.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-2.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-3.c: New testcase.
        * testsuite/gcc.dg/octeon/mul-4.c: New testcase.
        * testsuite/gcc.dg/octeon/open-1.c: New testcase.
        * testsuite/gcc.dg/octeon/range-1.c: New testcase.
        * testsuite/gcc.dg/octeon/return-1.c: New testcase.
        * testsuite/gcc.dg/octeon/sra-1.c: New testcase.
        * testsuite/gcc.dg/octeon/test-gprof-1.c: New testcase.
        * testsuite/gcc.dg/octeon/tramp-1.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-1.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-10.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-11.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-12.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-13.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-14.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-15.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-16.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-17.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-18.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-19.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-2.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-20.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-21.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-22.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-23.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-24.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-25.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-26.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-27.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-28.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-29.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-3.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-30.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-31.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-4.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-5.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-6.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-7.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-8.c: New testcase.
        * testsuite/gcc.dg/octeon/trunc-9.c: New testcase.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew pinski  <apinski@cavium.com>

        * Makefile.in (LANGUAGES): Include merge-gcda.
        (MERGE_GCDA_INSTALL_NAME): New variable.
        (install-common): Install merge-gcda.
        (merge-gcda.o): New rule.
        (MERGE_GCDA_OBJS): New variable.
        (merge-gcda$(exeext)): New rule.

        * merge-gcda.c: New file.  Define IN_GOV_MERGE.
        * gcov-io.h (GCOV_FACTORED_MERGE_FUNCTIONS): New macro.
        (gcov_var): Include it if IN_GOV_MERGE.
        * gcov-io.c (gcov_write_counter, gcov_write_tag_length,
        gcov_write_summary): Likewise.

2012-07-24  Adam Nemet  <anemet@caviumnetworks.com>

	* Makefile.in (GCOV_DUMP_INSTALL_NAME): New variable.
	(install-common): Install gcov-dump also.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* testsuite/lib/profopt.exp: Delete also the .gcda on the build machine.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.dg/vect/dump-tree-dceloop-pr26359.c: Update to look at
        dceloop4 after the patch adding one more.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* cfgloop.c (skip_to_exit): New function.
	(find_subloop_latch_edge_by_ivs): Rewrite to better detect subloop
	latches by IVs.  Also look at the cfg for those IVs to check for a
	better choice.
	* passes.c (init_optimization_passes): Add pass_dce_loop
        after the second pass_copy_prop.  Add pass_merge_phi
	before pass_ch and pass_tree_loop.

        * testsuite/gcc.dg/tree-ssa/loop-25.c: Remove xfails and remove "Found
        latch edge"/"Merged latch edges" tests.
        * gcc.dg/tree-ssa/loop-38.c: New testcase.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.dg/tree-ssa/ssa-fre-9.c: Update the number of
        eliminatations that happen.

2012-07-24  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-sccvn.c (visit_use): Look up the simplified
	expression before visting the original one.

2012-07-23  Andrew Pinski  <apinski@cavium.com>

        FSF PR 52005
        * tree-ssa-ifcombine.c (recognize_if_then_else): Handle the case
        where the the then and else are spawed.
        (tree_ssa_ifcombine_bb): Handle the case were we have an empty basic block
        for either then or else.

        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-8.c: New testcase.
        * testsuite/gcc.dg/tree-ssa/ssa-ifcombine-9.c: New testcase.

2012-07-23  Andrew Pinski  <apinski@cavium.com>

        * tree-pretty-print.c (dump_generic_node): Handle MEM_REF
        with first argument whos type is NULL.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #2022
        * sched-deps.c (create_mem_store_deps): New function.
        (sched_analyze_1): Use create_mem_store_deps.
        (sched_analyze_2): For prefetches, cause a write memory barrior.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

        * tree-ssa-loop-unswitch.c (tree_ssa_unswitch_loops): Look at all loop
        not just the inner most ones.
        (tree_unswitch_loop): Remove the assert about the loop being the inner
        most loop.
	* testsuite/gcc.dg/alias-10.c: Update testcase for the number of unswitching.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

	* testsuite/gcc.dg/invalid-call-1.c: Fix testcase.

2012-07-23  Andrew Pinski  <apinski@caviumnetworks.com>

	* testsuite/gcc.dg/tree-ssa/phi-opt-pass-order.c: New testcase.

2012-07-23  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@caviumnetworks.com>

        * c-typeck.c (build_function_call): Issue an error rather than
        a warning when function is called through a non-compatible
        type and the program would abort at run-time.
	* testsuite/gcc.c-torture/execute/call-trap-1.c: Remove testcase.
	* testsuite/gcc.dg/call-diag-2.c: Update the testcase for the error
	instead of warning.
	* testsuite/gcc.dg/cast-function-1.c: Likewise.
	* testsuite/gcc.dg/invalid-call-1.c: Likewise.

2012-07-20  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/test-backtrace.h: New header.

2012-07-20  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #2942
        * config/mips/mips.md (*popcountdi2_trunc): New pattern
        to handle popcount pf a truncation.
	* testsuite/gcc.target/mips/octeon-pop-2.c: New testcase.

2012-07-20  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #380
        * config/mips/mips.c (mips_expand_ext_as_unaligned_load): Handle
        unaligned loads of 16bits too.
	* testsuite/gcc.target/mips/unaligned-2.c: New testcase.

2012-07-20  Andrew Pinski  <apinski@cavium.com>

	Bug #2056
	* config/mips/mips-protos.h (mips_expand_ext_as_unaligned_load):
	Add a bool argument.
	* config/mips/mips.c (mips_block_move_straight): Update call to
	mips_expand_ext_as_unaligned_load.
	(mips_expand_ext_as_unaligned_load): Add unsigned_p argument.
	Accept DImode dest when the width is that of SImode.
	* testsuite/gcc.target/mips/unaligned-1.c: New testcase.
	* testsuite/gcc.target/mips/mips.exp (mips_option_groups):
	Add octeon-useun.

2012-07-19  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/README: New file about this directory.

2012-07-19  Adam Nemet  <anemet@caviumnetworks.com>

	* testsuite/gcc.dg/octeon/cvmx/octeon-cvmx.exp: New file.
	* testsuite/gcc.dg/octeon/cvmx/bt-1.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-2.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-3.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-4.c: New test.
	* testsuite/gcc.dg/octeon/cvmx/bt-5.c: New test.

2012-07-19  Andrew Pinski  <apinski@cavium.com>

        * testsuite/gcc.target/mips/mips.exp (mips_option_tests): New test.
	(mips-dg-options): Treat all
	cases of -mhard-float as not being able to compile.

2012-07-19  Andrew Pinski  <apinski@cavium.com>
            Adam Nemet  <anemet@caviumnetworks.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

	* config.gcc (mips64*-*-linux* | mipsisa64*-*-linux*): Handle
	mips64*-octeon-linux* as defaulting to n64.
	Also handle mips64*-octeon-linux* like mips64octeon*-*-linux*.
	(mipsisa64-octeon-elf*): New target.
	* config/mips/mips-protos.h (mips_cvmx_shared_decl_p): New prototype.
	(octeon_output_shared_variable): New prototype.
	(mips_output_aligned_bss): New prototype.
	* config/mips/mips.c (accept_var_decls_only): New function.
	(mips_attribute_table): Add cvmx_shared and cvmx_noshared.
	(mips_merge_decl_attributes): Warn about when cvmx_shared are
	different between the two decls.
	(mips_expand_ext_as_unaligned_load): Handle the ISA_HAS_UL_US case.
	(mips_expand_ins_as_unaligned_store): Likewise.
	(mips_cvmx_shared_decl_p): New function.
	(mips_in_small_data_p): Check for cvmx_shared.
	(mips_option_override): Error out if the target is octeon* and
	hardfloat was enabled.
	Enable k0 optimization for TLS for Octeon1.
	(octeon_select_section): New function.
	(octeon_unique_section): New function.
	(octeon_output_shared_variable): New function.
	* config/mips/mips.h (ISA_HAS_UL_US): New macro.
	* config/mips/mips.md (UNSPEC_UNALIGNED_LOAD,
	UNSPEC_UNALIGNED_STORE): New unspecs.
	(mov_<load>l, mov_<load>r, mov_<store>l, mov_<store>r): Disable if
	ISA_HAS_UL_US.
	(mov_u<load>, mov_u<store>): New patterns.
	(tls_get_tp_<mode>): Emit "move $v1,$k0"
	instead of "rdhwr $v1,$29" when TARGET_TLS_ACCEL is true.
	Set can_delay to yes when TARGET_TLS_ACCEL is true.
	* config/mips/mips.opt (mtls-accel): New option.
	(mocteon-useun): New option.
	(mshared-variables): New option.
	* defaults.h (GCOV_TARGET_SUFFIX_LENGTH): Define if not already defined.
	* config/mips/octeon-elf.h: New file.
	* config/mips/octeon-linux.h: New file.
	* config/mips/octeon.h: New file.
	* config/mips/t-octeon-elf: New file.
	* config/mips/t-octeon-linux: New file.
	* testsuite/gcc.dg/octeon/pipeline-1.c: New file.
	* testsuite/gcc.dg/octeon/pipeline-2.c: New file.
	* testsuite/gcc.dg/octeon/pop-1.c: New file.
	* testsuite/gcc.dg/octeon/pop-2.c: New file.
	* testsuite/gcc.dg/octeon/saa-1.c: New file.
	* testsuite/gcc.dg/octeon/saa-2.c: New file.
	* testsuite/gcc.dg/octeon/saa-3.c: New file.
	* testsuite/gcc.dg/octeon/saa-4.c: New file.
	* testsuite/gcc.dg/octeon/seq-1.c: New file.
	* testsuite/gcc.dg/octeon/seq-10.c: New file.
	* testsuite/gcc.dg/octeon/seq-11.c: New file.
	* testsuite/gcc.dg/octeon/seq-12.c: New file.
	* testsuite/gcc.dg/octeon/seq-13.c: New file.
	* testsuite/gcc.dg/octeon/seq-2.c: New file.
	* testsuite/gcc.dg/octeon/seq-3.c: New file.
	* testsuite/gcc.dg/octeon/seq-4.c: New file.
	* testsuite/gcc.dg/octeon/seq-5.c: New file.
	* testsuite/gcc.dg/octeon/seq-6.c: New file.
	* testsuite/gcc.dg/octeon/seq-7.c: New file.
	* testsuite/gcc.dg/octeon/seq-8.c: New file.
	* testsuite/gcc.dg/octeon/seq-9.c: New file.
	* testsuite/gcc.dg/octeon/siginfo-1.c: New file.
	* testsuite/gcc.dg/octeon/tls-1.c: New file.
	* testsuite/gcc.dg/octeon/tls-2.c: New file.
	* testsuite/gcc.dg/octeon/tls-3.c: New file.
	* testsuite/gcc.dg/octeon/tls-4.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-1.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-2.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-3.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-4.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-5.c: New file.
	* testsuite/gcc.dg/octeon/unaligned-6.c: New file.
	* testsuite/gcc.dg/octeon/vrp-1.c: New file.
	* testsuite/gcc.dg/octeon/vrp-2.c: New file.
	* testsuite/gcc.dg/octeon/vrp-3.c: New file.
	* testsuite/gcc.dg/octeon/vrp-4.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-10.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-11.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-2.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-3.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-4.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-5.cc: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-6.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-7.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-8.c: New file.
	* testsuite/gcc.dg/octeon/cvmx-shared-9.c: New file.


2012-07-18  Andrew Pinski  <apinski@cavium.com>

	* cfgloop.h (exact_loop_iterations_unbounded): Add Prototype.
	* cfgloopanal.c (exact_loop_iterations_unbounded): New function.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        * tree-pass.h (pass_profile_loop_bounds): New variable.
        * timevar.def (TV_PROFILE_LOOP_BOUNDS): New time var.
        * tree-ssa-loop.c (tree_profile_loop_bounds): New function.
        (gate_profile_loop_bounds): New function.
        (pass_profile_loop_bounds): New pass.
        * passes.c (init_optimization_passes): Add pass_profile_loop_bounds before
        pass_complete_unrolli.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        * opts.c (default_options_table): Turn on
        register pressure sensitive instruction
        scheduling at -O3 and above.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* opts.c (default_options_table): Enable fmerge-const-bfstores at -O2.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* opts.c (default_options_table): Enable fpostreload-load at -O2.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

        * basic-block.h (struct basic_block_def): Add new field probability.
        * builtins.def (BUILT_IN_BLOCK_PROB): New builtin.
        * predict.def (PRED_BUILTIN_BLOCK_PROB): New predictor.
        * common.opt (flag_propagate_block_prob): New option.
        * predict.c (compute_block_prob): New function.  Set basic block
        probablity from builtin_block_prob
        (propagate_block_prob): New functions.  Propagate branch
        probabilities backward in the CFG.
        (tree_estimate_probability): Invoke them.
        (tree_predict_by_opcode): Copy BB probablity to edge.
        * builtins.c (expand_builtin): Handle BUILT_IN_BLOCK_PROB.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

	* expmed.c (store_fixed_bit_field): Special case the storing
        of the whole field.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* postreload-load.c: New file.
	* Makefile.in (OBJS-common): Add postreload-load.o.
	(postreload-load.o): New rule.
	* common.opt (fpostreload-load): New option.
	* timevar.def: Add TV_LOAD_AFTER_RELOAD timevar.
	* tree-pass.h (pass_postreload_load): Declare.
	* passes.c (init_optimization_passes): Add
	pass_postreload_load.

2012-07-16  Adam Nemet  <anemet@caviumnetworks.com>
            Andrew Pinski  <apinski@cavium.com>

	* tree-merge-const-bfstores.c: New file.
	* Makefile.in (OBJS-common): Add tree-merge-const-bfstores.o.
	(tree-merge-const-bfstores.o): New rule.
	* timevar.def: Add TV_MERGE_CONST_BFSTORES timevar.
	* tree-pass.h (pass_merge_const_bfstores): Declare.
	* passes.c (init_optimization_passes): Add
	pass_merge_const_bfstores.
	* common.opt (fmerge-const-bfstores): New option.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

	Bug #2845
	* target.h (gcc_target): Add mode_for_extraction_insv.
	* expmed.c (store_bit_field_1): Use mode_for_extraction_insv
	and split out into ...
	(store_bit_field_2): Here.
	* target-def.h (TARGET_MODE_FOR_EXTRACTION_INSV): Define.
	(TARGET_INITIALIZER): Add TARGET_MODE_FOR_EXTRACTION_INSV.
	* config/mips/mips.c (mips_mode_for_extraction_insv): New function.
	(TARGET_MODE_FOR_EXTRACTION_INSV): Define.

2012-07-16  Andrew Pinski  <apinski@cavium.com>

        start of bug #4296
        * config/mips/mips.c (mips_rtx_cost_data): Add movz cost.
	(mips_cpu_info_table): Set movz for Octeon to 2 and Octeon2 to 3.
	(mips_rtx_costs <case IF_THEN_ELSE>): Return mips_cost->movz.

2012-07-15  Andrew Pinski  <apinski@caviumnetworks.com>

        Bug #3154
        * config/mips/mips.md (bswapdi2): New instruction pattern.
        (bswapsi2): Likewise.
        * config/mips/mips.h (ISA_HAS_SBWH): New ISA define.
        * testsuite/gcc.target/mips/bswap-1.c: New test.

2012-07-15  Andrew Pinski  <apinski@cavium.com>

        Bug #4290
        * tree-vrp.c (vrp_stmt_computes_nonzero): Return true for some
        builtins (memcpy and memmove).
        (infer_value_range): Infer the nonzero for some arguments to
        some builtins (memcpy, memmove, strcmp and memcmp).
        * testsuite/gcc.dg/tree-ssa/vrp-builtins1.c: New testcase.

2012-07-15  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.c-torture/unsorted/dump-noaddr.x (dump_compare): Use
        an absolute dump base instead of a relative one.

2012-07-13  Andrew Pinski  <apinski@cavium.com>
 
	* opts.c (default_options_table): Enable unroll-loops at -O3 and above.

	* testsuite/gcc.target/i386/l_fma_float_5.c: Add -fno-unroll-loops.
	* testsuite/gcc.target/i386/l_fma_double_4.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_2.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_6.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_1.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_5.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_3.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_2.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_6.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_4.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_double_3.c: Likewise.
	* testsuite/gcc.target/i386/l_fma_float_1.c: Likewise.
	* testsuite/gcc.target/i386/fma4-builtin-2.c: Likewise.
	* testsuite/gcc.target/i386/fma3-builtin-2.c: Likewise.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4258
	* config/mips/mips.c (mips_delegitimize_address): New function.
	(TARGET_DELEGITIMIZE_ADDRESS): Define.

2012-07-13  Andrew Pinski  <apinski@cavium.com>
            Chandrakala Chavva  <cchavva@caviumnetworks.com>

	* config/mips/mips.opt (mfix-cn63xxp1): New option.
	* config/mips/mips.h (ASM_SPEC): Add mfix-cn63xxp1.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	Bug #4325
	* tree-pass.h (pass_merge_common_code): New declaration.
	* tree-ssa-merge-common-code.c: New file.
	* Makefile.in (OBJS): Add tree-ssa-merge-common-code.o.
	(tree-ssa-merge-common-code.o): New target.
	* passes.c (init_optimization_passes): Add pass_merge_common_code
	after the two fres and after the pre.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-phiopt.c (tree_ssa_phiopt_worker): Prop
	the phi result if value_remplacement returns 1.

2012-07-13  Andrew Pinski  <apinski@cavium.com>

        * configure.ac: Set PLUGIN_LD to just "ld" if it was "ld-new".
        * configure: Regenerate.


