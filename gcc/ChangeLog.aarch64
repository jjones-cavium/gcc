2013-08-05  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.c (aarch64_attribute_table): New
	attribute table defined.
	(aarch64_handle_long_call_attribute): New Declare and define
	long_call attribute.
	(aarch64_decl_is_long_call_p): Return true if function is
	declared with long_call attribute.

2013-08-04  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf.h (ASM_SPEC): Pass -mabi=* through
	instead of -milp32/-mlp64.

2013-07-26  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (neg<mode>2): Offer alternative that
	uses vector registers.
	* config/aarch64/iterators.md: Add attributes rtn and vas.

2013-07-23  Andrew Pinski  <apinski@cavium.com>

	Bug #7526
	* config/aarch64/aarch64.h (SIZE_TYPE): Set to unsigned int for ILP32.
	(PTRDIFF_TYPE): Set to int for ILP32.

2013-07-20  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_fold_builtin): Fold abs in all modes.
	* config/aarch64/aarch64-simd-builtins.def
	(abs): Enable for all modes.
	* config/aarch64/arm_neon.h
	(vabs<q>_s<8,16,32,64): Rewrite using builtins.
	(vabs_f64): Add missing intrinsic.

2013-07-19  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/arm_neon.h (vabs_s64): New function

2013-07-17  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.opt (mlp64): Fix typo in the help section.

2013-07-17  Yufeng Zhang  <yufeng.zhang@arm.com>

         * config/aarch64/aarch64.c (aarch64_pad_arg_upward): In big-endian,
	pad pointer-typed argument downward.

2013-07-15  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_symbol_type):
	Define SYMBOL_TINY_GOT, update comment.
	* config/aarch64/aarch64.c
	(aarch64_load_symref_appropriately): Handle SYMBOL_TINY_GOT.
	(aarch64_expand_mov_immediate): Likewise.
	(aarch64_print_operand): Likewise.
	(aarch64_classify_symbol): Likewise.
	* config/aarch64/aarch64.md (UNSPEC_GOTTINYPIC): Define.
	(ldr_got_tiny): Define.

2013-07-12  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-protos.h
	(aarch64_simd_immediate_valid_for_move): Remove.
	* config/aarch64/aarch64.c (simd_immediate_info): New member.
	(aarch64_simd_valid_immediate): Recognize idioms for shifting ones
	cases.
	(aarch64_output_simd_mov_immediate): Print the correct shift specifier.

2013-07-11  Andreas Schwab  <schwab@suse.de>

	* config/aarch64/aarch64-linux.h (CPP_SPEC): Define.

2013-07-08  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/t-aarch64-elf (MULTILIB_OPTIONS):
	Change to use -mabi= options.

2013-07-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-protos.h (cpu_vector_cost): New.
	(tune_params): New member 'const vec_costs'.
	* config/aarch64/aarch64.c (generic_vector_cost): New.
	(generic_tunings): New member 'generic_vector_cost'.
	(aarch64_builtin_vectorization_cost): New.
	(TARGET_VECTORIZE_BUILTIN_VECTORIZATION_COST): New.

2013-07-03  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.h (enum arm_abi_type): Remove.
	(ARM_ABI_AAPCS64): Ditto.
	(arm_abi): Ditto.
	(ARM_DEFAULT_ABI): Ditto.

2013-07-03  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_simd_expand_builtin): Handle AARCH64_SIMD_STORE1.
	* config/aarch64/aarch64-simd-builtins.def (ld1): New.
	(st1): Likewise.
	* config/aarch64/aarch64-simd.md
	(aarch64_ld1<VALL:mode>): New.
	(aarch64_st1<VALL:mode>): Likewise.
	* config/aarch64/arm_neon.h
	(vld1<q>_<fpsu><8, 16, 32, 64>): Convert to RTL builtins.

2013-07-02  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64-simd.md (absdi2): Support abs for
	DI mode.

2013-07-02  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*extr_insv_reg<mode>): New pattern.

2013-07-06  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/t-aarch64-linux: Build ilp32 multilib also.

2013-07-05  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):
	Handle !TARGET_64BIT better.
	* config/aarch64/aarch64.md (tlsdesc_small): Rename to ...
	(tlsdesc_small_<mode>): This and use PTR iterator instead of DImode.

2013-07-05  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):
	Handle !TARGET_64BIT.
	* config/aarch64/aarch64.md (aarch64_load_tp_hard): Change to exand.
	(aarch64_load_tp_hard_<mode>): New pattern.
	(tlsie_small): Rename to ...
	(tlsie_small_<mode>): This and use PTR iterator.
	(tlsle_small): Rename to ...
	(tlsle_small_<mode>): This and use PTR iterator.

2013-07-05  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-linux.h (GLIBC_DYNAMIC_LINKER):
	Use -mabi=ilp32 instead of -milp32.

2013-07-05  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf-raw.h (LINK_SPEC): Use
	-mabi=ilp32 instead of -milp32.
	* config/aarch64/aarch64-elf.h (ASM_SPEC): Support -mabi=* instead of
	-milp32/-mlp64.
	(DRIVER_SELF_SPECS): Likewise.
	* config/aarch64/aarch64-linux.h (LINK_SPEC): Likewise.
	* config/aarch64/aarch64.h (TARGET_64BIT): New define.
	(aarch64_abi_type): New enum type.
	(MULTILIB_DEFAULTS): Use -mabi=lp64 instead of -mlp64.
	* config/aarch64/aarch64.opt (mabi=): New option.
	(milp32): Make an alias for -mabi=ilp32.
	(mlp64): Make an alias for -mabi=lp64.

2013-06-26  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/aarch64/atomic-op-long.c: Update for
	ILP32 ABI support.
	* testsuite/gcc.target/aarch64/fcvt_double_int.c: Likewise.

2013-06-25  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf-raw.h (LINK_SPEC): Update for the
	renaming of the bigendian ilp32 linker target.
	* config/aarch64/aarch64-linux.h (GLIBC_DYNAMIC_LINKER): Support
	milp32 correctly.
	(LINK_SPEC): Update for the bigendian ilp32 linker target.

2013-06-24  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS):
	Define __ILP32__ for ilp32 targets.

2013-06-21  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-linux.h (LINUX_TARGET_LINK_SPEC):
	Use linux target rather than elf target.

2013-06-21  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-linux.h (LINUX_TARGET_LINK_SPEC):
	Change the linker script based on the milp32 option.

2013-06-21  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf-raw.h (LINK_SPEC): Change to update
	for the new naming.

2013-06-20  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_classify_address): Don't
	allow reg index mode for ILP32 (note we can allow it if we know for a
	fact it is really an index here and not the pointer and we sign extend it
	but that is too much work for now).

2013-06-20  Andrew Pinski  <apinski@cavium.com>

	* testsuite/gcc.target/aarch64/aapcs64/test_18.c: Use long long
	for ILP32.

2013-06-20  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_trampoline_init):
	Support Pmode being SImode.

2013-06-20  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_elf_asm_constructor): Use
	.word for !TARGET64_BIT.
	(aarch64_elf_asm_destructor): Likewise.

2013-06-19  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.h (MULTILIB_DEFAULTS): Define.
	* config.gcc (aarch64*-*-elf): Use aarch64/t-aarch64-elf.
	* config/aarch64/t-aarch64-elf: New file.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_output_mi_thunk): Support
	32bit vcall_offsets for !TARGET_64BIT.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_expand_prologue):
	Use DImode version of hard_frame_pointer_rtx.
	(aarch64_expand_epilogue): Likewise.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_expand_epilogue):
	Use Pmode for IP0_REGNUM in one place.
	(aarch64_final_eh_return_addr): Use Pmode for LR_REGNUM
	and the addition of the memory.
	* config/aarch64/aarch64.md (eh_frame): Change to an expand.
	(eh_return<mode>): New insn.
	(split for UNSPECV_EH_RETURN): Use PTR iterator.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (add_losym_<mode>): Use PTR
	iterator instead of P iterator.
	* config/aarch64/iterators.md (P): Remove as PTR is the same.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_expand_prologue):
	Use gen_storewb_pairdi_si for !TARGET_64BIT.
	(aarch64_expand_epilogue): Use gen_loadwb_pairdi_si
	for !TARGET_64BIT.
	* config/aarch64/aarch64.md (indirect_jump_<mode>): Use PTR iterator
	instead of the P iterator.
	(casesi_dispatch_<mode>): Likewise.
	(*call_reg_<mode>): Likewise.
	(*call_symbol_<mode>): Likewise.
	(*call_value_reg<mode>): Likewise.
	(*call_value_symbol_<mode>): Likewise.
	(*sibcall_insn_<mode>): Likewise.
	(*sibcall_value_insn_<mode>): Likewise.
	(stack_tie): Change to expand.
	(stack_tie_<mode>): New pattern.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* gcc/config/aarch64/aarch64.md (*movsi_aarch64): Add stack register
	moves to the pattern for ILP32 mode.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (indirect_jump): Change to an expand.
	(indirect_jump_<mode>): New pattern.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (casesi): Use Pmode instead of DImode.
	Use gen_casesi_dispatch_di/gen_casesi_dispatch_si.
	(casesi_dispatch): Rename to ...
	(casesi_dispatch_<mode>): This. Use P iterator in some cases.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (*movsi_aarch64): Add Ush for ILP32 mode.
	(add_losym_<mode>): Add <w> to the operands of the instruction.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (*call_reg): Rename to ...
	(*call_reg_<mode>): This. Use P iterator in some cases.
	(*call_symbol): Rename to ...
	(*call_symbol_<mode>): This.  Use P iterator in some cases.
	(*call_value_reg): Rename to ...
	(*call_value_reg_<mode>): This.  Use P iterator in some cases.
	(*call_value_symbol): Rename to ...
	(*call_value_symbol_<mode>): This.  Use P iterator in some cases.
	(*sibcall_insn): Rename to ...
	(*sibcall_insn_<mode>): This.  Use P iterator in some cases.
	(*sibcall_value_insn): Rename to ...
	(*sibcall_value_insn_<mode>): This.  Use P iterator in some cases.

2013-06-18  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (add_losym): Change to an expand.
	(add_losym_<mode>): New pattern.
	* config/aarch64/iterators.md (P): New iterator.

2013-06-17  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf.h (DRIVER_SELF_SPECS): Fix typo.

2013-06-17  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_save_or_restore_callee_save_registers):
	Use DImode instead of Pmode.
	(initialize_aarch64_code_model): Error out when ilp32 and large code model is used.
	* config/aarch64/aarch64.h (LONG_TYPE_SIZE): Define based on -milp32.
	(Pmode): Likewise.
	(POINTER_SIZE): New define.

2013-06-17  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf-raw.h (LINK_SPEC): Change the linker script based
	on the milp32/mlp64 options.
	* config/aarch64/aarch64-elf.h (ASM_SPEC): Pass -milp32 and -mlp64 on to the assembler.
	(ENDIAN_SPEC): Define.
	(DRIVER_SELF_SPECS): Define.
	* config/aarch64/aarch64.opt (milp32): New option.
	(mlp64): New option.

2013-07-02  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.c (aarch64_add_offset): Add another
	parameter mode to aarch64_add_offset.

2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_cannot_force_const_mem): Adjust
	layout.

2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_symbol_type):
	Update comment w.r.t SYMBOL_TINY_ABSOLUTE.

2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h
	aarch64_classify_symbol_expression): Define.
	(aarch64_symbolic_constant_p): Remove.
	* config/aarch64/aarch64.c (aarch64_classify_symbol_expression): Remove
	static.  Fix line length and white space.
	(aarch64_symbolic_constant_p): Remove.
	* config/aarch64/predicates.md (aarch64_valid_symref):
	Use aarch64_classify_symbol_expression.

2013-06-27  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_force_temporary): Add an extra
	parameter 'mode' of type 'enum machine_mode mode'; change to pass
	'mode' to force_reg.
	(aarch64_add_offset): Update calls to aarch64_force_temporary.
	(aarch64_expand_mov_immediate): Likewise.

2013-06-27  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_add_offset): Change to pass
	'mode' to aarch64_plus_immediate and gen_rtx_PLUS.

2013-06-14  Vidya Praveen <vidyapraveen@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_<su>mlal_lo<mode>):
	New pattern.
	(aarch64_<su>mlal_hi<mode>, aarch64_<su>mlsl_lo<mode>): Likewise.
	(aarch64_<su>mlsl_hi<mode>, aarch64_<su>mlal<mode>): Likewise.
	(aarch64_<su>mlsl<mode>): Likewise.

2013-06-17  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_dup_lane<mode>): Add r<-w
	alternative and update.
	(aarch64_dup_lanedi): Delete.
	* config/aarch64/arm_neon.h (vdup<bhsd>_lane_*): Update.
	* config/aarch64/aarch64-simd-builtins.def: Update.

2013-06-12  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_combine<mode>): convert to split.
	(aarch64_simd_combine<mode>): New instruction expansion.
	* config/aarch64/aarch64-protos.h (aarch64_split_simd_combine): New
	function prototype.
	* config/aarch64/aarch64.c (aarch64_split_combine): New function.
	* config/aarch64/iterators.md (Vdbl): Add entry for DF.

2013-06-11  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64-simd.md (move_lo_quad_<mode>): Update.

2013-06-05  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.md (insv): New define_expand.

2013-06-05  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Revert the
	patch "Generate movi instruction with shift if required"

2013-06-04  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Call
	into function to generate MOVI instruction.
	* config/aarch64/aarch64.c (aarch64_simd_container_mode):
	New function.
	(aarch64_preferred_simd_mode): Turn into wrapper.
	(aarch64_output_scalar_simd_mov_immediate): New function.
	(simd_immediate_info): Move the structure definition to
	aarch64-protos.h file.
	* config/aarch64/aarch64-protos.h: Add prototype for above.

2013-06-04  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (simd_immediate_info): Remove
	element_char member.
	(sizetochar): Return signed char.
	(aarch64_simd_valid_immediate): Remove elchar and other
	unnecessary variables.
	(aarch64_output_simd_mov_immediate): Take rtx instead of &rtx.
	Calculate element_char as required.
	* config/aarch64/aarch64-protos.h: Update and move prototype
	for aarch64_output_simd_mov_immediate.
	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>):
	Update arguments.

2013-06-04  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (simd_immediate_info): Struct to hold
	information completed by aarch64_simd_valid_immediate.
	(aarch64_legitimate_constant_p): Update arguments.
	(aarch64_simd_valid_immediate): Work with struct rather than many
	pointers.
	(aarch64_simd_scalar_immediate_valid_for_move): Update arguments.
	(aarch64_simd_make_constant): Update arguments.
	(aarch64_output_simd_mov_immediate): Work with struct rather than
	many pointers.  Output immediate directly rather than as operand.
	* config/aarch64/aarch64-protos.h (aarch64_simd_valid_immediate):
	Update prototype.
	* config/aarch64/constraints.md (Dn): Update arguments.

2013-06-04  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (aarch64_simd_valid_immediate): No
	longer static.
	(aarch64_simd_immediate_valid_for_move): Remove.
	(aarch64_simd_scalar_immediate_valid_for_move): Update call.
	(aarch64_simd_make_constant): Update call.
	(aarch64_output_simd_mov_immediate): Update call.
	* config/aarch64/aarch64-protos.h (aarch64_simd_valid_immediate):
	Add prototype.
	* config/aarch64/constraints.md (Dn): Update call.

2013-06-04  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (aarch64_simd_valid_immediate): Change
	return type to bool for prototype.
	(aarch64_legitimate_constant_p): Check for true instead of not -1.
	(aarch64_simd_valid_immediate): Fix up each return to return a bool.
	(aarch64_simd_immediate_valid_for_move): Update retval for bool.

2013-06-03  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md (*movdi_aarch64): Define "simd" attribute.

2013-05-31  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):
	Remove un-necessary braces.

2013-05-31  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_classify_symbol):
	Use SYMBOL_TINY_ABSOLUTE for AARCH64_CMODEL_TINY_PIC.

2013-05-30  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (insv<mode>): New define_expand.
	(*insv_reg<mode>): New define_insn.

2012-05-29  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_symbol_type): Define
	SYMBOL_TINY_ABSOLUTE.
	* config/aarch64/aarch64.c (aarch64_load_symref_appropriately): Handle
	SYMBOL_TINY_ABSOLUTE.
	(aarch64_expand_mov_immediate): Likewise.
	(aarch64_classify_symbol): Likewise.
	(aarch64_mov_operand_p): Remove ATTRIBUTE_UNUSED.
	Permit SYMBOL_TINY_ABSOLUTE.
	* config/aarch64/predicates.md (aarch64_mov_operand): Permit CONST.

2013-05-29  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_classify_symbol): Remove comment.
	Refactor if/switch.  Replace gcc_assert with if.

2013-05-29  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-cores.def: Add an entry for thunder.
	* config/aarch64/aarch64-tune.md: Re-generate.

2013-05-13  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Generate movi
	instruction with shift values if supported by operand.

2013-05-24  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (aarch64_print_operand): Change the
	X format specifier to only display bottom 16 bits.
	* config/aarch64/aarch64.md (insv_imm<mode>): Allow any size of
	immediate to match for operand 2, since it will be masked.

2013-05-23  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.md (*movdi_aarch64): Replace Usa with S.
	* config/aarch64/constraints.md (Usa): Remove.
	* doc/md.texi (AArch64 Usa): Remove.

2013-05-23  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_mov_operand_p): Define.
	* config/aarch64/aarch64.c (aarch64_mov_operand_p): Define.
	* config/aarch64/predicates.md (aarch64_const_address): Remove.
	(aarch64_mov_operand): Use aarch64_mov_operand_p.

2013-05-23  Vidya Praveen <vidyapraveen@arm.com>

	* config/aarch64/aarch64-simd.md (clzv4si2): Support for CLZ
	instruction (AdvSIMD).
	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): Handler for BUILT_IN_CLZ.
	* config/aarch64/aarch-simd-builtins.def: Entry for CLZ.

2013-05-23  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(aarch64_cm<optab>di): Add clobber of CC_REGNUM to unsplit pattern.

2013-05-14  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(aarch64_vcond_internal<mode>): Rename to...
	(aarch64_vcond_internal<mode><mode>): ...This, for integer modes.
	(aarch64_vcond_internal<VDQF_COND:mode><VDQF:mode>): ...This for
	float modes. Clarify all iterator modes.
	(vcond<mode><mode>): Use new name for vcond expanders.
	(vcond<v_cmp_result><mode>): Likewise.
	(vcondu<mode><mode>: Likewise.
	* config/aarch64/iterators.md (VDQF_COND): New.

2013-05-13  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	* config/aarch64/constraints.md (Dq): Remove condition to restrict
	const values in the range 0-255.
	(Dh): Likewise.

2013-05-13  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_simd_mov<mode>): Group
	similar switch cases.
	(aarch64_simd_mov): Rename to aarch64_split_simd_mov. Update.
	(aarch64_simd_mov_to_<mode>low): Delete.
	(aarch64_simd_mov_to_<mode>high): Delete.
	(move_lo_quad_<mode>): Add w<-r alternative.
	(aarch64_simd_move_hi_quad_<mode>): Likewise.
	(aarch64_simd_mov_from_*): Update type attribute.
	* config/aarch64/aarch64.c (aarch64_split_simd_move): Refacror switch
	statement.

2013-05-09  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md: New movtf split.
	(*movtf_aarch64): Update.
	(aarch64_movdi_tilow): Handle TF modes and rename to
	aarch64_movdi_<mode>low.
	(aarch64_movdi_tihigh): Handle TF modes and rename to
	aarch64_movdi_<mode>high
	(aarch64_movtihigh_di): Handle TF modes and rename to
	aarch64_mov<mode>high_di
	(aarch64_movtilow_di): Handle TF modes and rename to
	aarch64_mov<mode>low_di
	(aarch64_movtilow_tilow): Remove spurious whitespace.
	* config/aarch64/aarch64.c (aarch64_split_128bit_move): Handle TFmode
	splits.
	(aarch64_print_operand): Update.

2013-05-07  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>): call splitter.
	(aarch64_simd_mov<mode>): New expander.
	(aarch64_simd_mov_to_<mode>low): New instruction pattern.
	(aarch64_simd_mov_to_<mode>high): Likewise.
	(aarch64_simd_mov_from_<mode>low): Likewise.
	(aarch64_simd_mov_from_<mode>high): Likewise.
	(aarch64_dup_lane<mode>): Update.
	(aarch64_dup_lanedi): New instruction pattern.
	* config/aarch64/aarch64-protos.h (aarch64_split_simd_move): New prototype.
	* config/aarch64/aarch64.c (aarch64_split_simd_move): New function.

2013-05-07  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	* config/aarch64/aarch64.md
	(cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): Restrict the
	shift value between 0-4.

2013-05-03  Vidya Praveen  <vidyapraveen@arm.com>

	* config/aarch64/aarch64-simd.md (*fabd_scalar<mode>3): Support
	scalar form of FABD instruction.
	(simd_fabd): Correct the description.

2013-05-03  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	* config/aarch64/constraints.md (Dq): Remove the condition for
	zero as its unsigned value.
	(Dh): Likewise. 

2013-05-03  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	* config/aarch64/arm_neon.h (vmlsq_laneq_s16): Modify the 3rd
	operand constraint to use x instead of w.
	(vmlsq_laneq_u16): Likewise.
	* config/aarch64/constraints.md (Dq): Add condition to restrict
	const values in the range 0-255.
	(Dh): Likewise. 

2013-05-02  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (movsi_aarch64): Only allow to/from
	S reg when fp attribute set.
	(movdi_aarch64): Only allow to/from D reg when fp attribute set.

2013-05-02  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*and_one_cmpl<mode>3_compare0):
	New pattern.
	(*and_one_cmplsi3_compare0_uxtw): Likewise.
	(*and_one_cmpl_<SHIFT:optab><mode>3_compare0): Likewise.
	(*and_one_cmpl_<SHIFT:optab>si3_compare0_uxtw): Likewise.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_gimple_fold_builtin.c): Fold more modes for reduc_splus_.
	* config/aarch64/aarch64-simd-builtins.def
	(reduc_splus_): Add new modes.
	(reduc_uplus_): New.
	* config/aarch64/aarch64-simd.md (aarch64_addvv4sf): Remove.
	(reduc_uplus_v4sf): Likewise.
	(reduc_splus_v4sf): Likewise.
	(aarch64_addv<mode>): Likewise.
	(reduc_uplus_<mode>): Likewise.
	(reduc_splus_<mode>): Likewise.
	(aarch64_addvv2di): Likewise.
	(reduc_uplus_v2di): Likewise.
	(reduc_splus_v2di): Likewise.
	(aarch64_addvv2si): Likewise.
	(reduc_uplus_v2si): Likewise.
	(reduc_splus_v2si): Likewise.
	(reduc_<sur>plus_<mode>): New.
	(reduc_<sur>plus_v2di): Likewise.
	(reduc_<sur>plus_v2si): Likewise.
	(reduc_<sur>plus_v4sf): Likewise.
	(aarch64_addpv4sf): Likewise.
	* config/aarch64/arm_neon.h
	(vaddv<q>_<s,u,f><8, 16, 32, 64): Rewrite using builtins.
	* config/aarch64/iterators.md (unspec): Remove UNSPEC_ADDV,
	add UNSPEC_SADDV, UNSPEC_UADDV.
	(SUADDV): New.
	(sur): Add UNSPEC_SADDV, UNSPEC_UADDV.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/arm_neon.h
	(v<max,min><nm><q><v>_<sfu><8, 16, 32, 64>): Rewrite using builtins.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins
	(aarch64_gimple_fold_builtin): Fold reduc_<su><maxmin>_ builtins.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-simd-builtins.def
	(reduc_smax_): New.
	(reduc_smin_): Likewise.
	(reduc_umax_): Likewise.
	(reduc_umin_): Likewise.
	(reduc_smax_nan_): Likewise.
	(reduc_smin_nan_): Likewise.
	(fmax): Remove.
	(fmin): Likewise.
	(smax): Update for V2SF, V4SF and V2DF modes.
	(smin): Likewise.
	(smax_nan): New.
	(smin_nan): Likewise.
	* config/aarch64/aarch64-simd.md (<maxmin><mode>3): Rename to...
	(<su><maxmin><mode>3): ...This, refactor.
	(s<maxmin><mode>3): New.
	(<maxmin_uns><mode>3): Likewise.
	(reduc_<maxmin_uns>_<mode>): Refactor.
	(reduc_<maxmin_uns>_v4sf): Likewise.
	(reduc_<maxmin_uns>_v2si): Likewise.
	(aarch64_<fmaxmin><mode>: Remove.
	* config/aarch64/arm_neon.h (vmax<q>_f<32,64>): Rewrite to use
	new builtin names.
	(vmin<q>_f<32,64>): Likewise.
	* config/iterators.md (unspec): Add UNSPEC_FMAXNMV, UNSPEC_FMINNMV.
	(FMAXMIN): New.
	(su): Add mappings for smax, smin, umax, umin.
	(maxmin): New.
	(FMAXMINV): Add UNSPEC_FMAXNMV, UNSPEC_FMINNMV.
	(FMAXMIN): Rename as...
	(FMAXMIN_UNS): ...This.
	(maxminv): Remove.
	(fmaxminv): Likewise.
	(fmaxmin): Likewise.
	(maxmin_uns): New.
	(maxmin_uns_op): Likewise.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md (*aarch64_fac<optab><mode>): New.
	* config/aarch64/iterators.md (FAC_COMPARISONS): New.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(vcond<mode>_internal): Handle special cases for constant masks.
	(vcond<mode><mode>): Allow nonmemory_operands for outcome vectors.
	(vcondu<mode><mode>): Likewise.
	(vcond<v_cmp_result><mode>): New.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c (BUILTIN_VALLDI): Define.
	(aarch64_fold_builtin): Add folding for cm<eq,ge,gt,tst>.
	* config/aarch64/aarch64-simd-builtins.def
	(cmeq): Update to BUILTIN_VALLDI.
	(cmgt): Likewise.
	(cmge): Likewise.
	(cmle): Likewise.
	(cmlt): Likewise.
	* config/aarch64/arm_neon.h
	(vc<eq, lt, le, gt, ge, tst><z><qsd>_<fpsu><8,16,32,64>): Remap
	to builtins or C as appropriate.

2013-05-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd-builtins.def (cmhs): Rename to...
	(cmgeu): ...This.
	(cmhi): Rename to...
	(cmgtu): ...This.
	* config/aarch64/aarch64-simd.md
	(simd_mode): Add SF.
	(aarch64_vcond_internal): Use new names for unsigned comparison insns.
	(aarch64_cm<optab><mode>): Rewrite to not use UNSPECs.
	* config/aarch64/aarch64.md (*cstore<mode>_neg): Rename to...
	(cstore<mode>_neg): ...This.
	* config/aarch64/iterators.md
	(VALLF): new.
	(unspec): Remove UNSPEC_CM<EQ, LE, LT, GE, GT, HS, HI, TST>.
	(COMPARISONS): New.
	(UCOMPARISONS): Likewise.
	(optab): Add missing comparisons.
	(n_optab): New.
	(cmp_1): Likewise.
	(cmp_2): Likewise.
	(CMP): Likewise.
	(cmp): Remove.
	(VCMP_S): Likewise.
	(VCMP_U): Likewise.
	(V_cmp_result): Add DF, SF modes.
	(v_cmp_result): Likewise.
	(v): Likewise.
	(vmtype): Likewise.
	* config/aarch64/predicates.md (aarch64_reg_or_fp_zero): New.

2013-04-30  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_gimple_fold_builtin): Make Static.
	* config/aarch64/aarch64-builtins.c
	(aarch64_gimple_fold_builtin): Remove.

2013-04-29  Ian Bolton  <ian.bolton@arm.com>

	* common/config/aarch64/aarch64-common.c: Enable REE pass at O2
	or higher by default.

2013-04-29  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (movsi_aarch64): Support LDR/STR
	from/to S register.
	(movdi_aarch64): Support LDR/STR from/to D register.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/arm_neon.h
	(vcvt<sd>_f<32,64>_s<32,64>): Rewrite in C.
	(vcvt<q>_f<32,64>_s<32,64>): Rewrite using builtins.
	(vcvt_<high_>_f<32,64>_f<32,64>): Likewise.
	(vcvt<qsd>_<su><32,64>_f<32,64>): Likewise.
	(vcvta<qsd>_<su><32,64>_f<32,64>): Likewise.
	(vcvtm<qsd>_<su><32,64>_f<32,64>): Likewise.
	(vcvtn<qsd>_<su><32,64>_f<32,64>): Likewise.
	(vcvtp<qsd>_<su><32,64>_f<32,64>): Likewise.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(<optab><VDQF:mode><fcvt_target>2): New, maps to fix, fixuns.
	(<fix_trunc_optab><VDQF:mode><fcvt_target>2): New, maps to
	fix_trunc, fixuns_trunc.
	(ftrunc<VDQF:mode>2): New.
	* config/aarch64/iterators.md

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd-builtins.def (vec_unpacks_hi_): New.
	(float_truncate_hi_): Likewise.
	(float_extend_lo_): Likewise.
	(float_truncate_lo_): Likewise.
	* config/aarch64/aarch64-simd.md (vec_unpacks_lo_v4sf): New.
	(aarch64_float_extend_lo_v2df): Likewise.
	(vec_unpacks_hi_v4sf): Likewise.
	(aarch64_float_truncate_lo_v2sf): Likewise.
	(aarch64_float_truncate_hi_v4sf): Likewise.
	(vec_pack_trunc_v2df): Likewise.
	(vec_pack_trunc_df): Likewise.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/arm_neon.h (vrndq<a,m,n,p>_f<32, 64>): Rename to...
	(vrnd<a,m,n,p>q_f<32, 64>): ...This, implement using builtin.
	(vrnd<a,m,n,p>_f32): Implement using builtins.
	(vrnd<i,x><q>_f<32, 64>): New.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): Vectorize over ifloorf,
	iceilf, lround, iroundf.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_fold_builtin): Fold float conversions.
	* config/aarch64/aarch64-simd-builtins.def
	(floatv2si, floatv4si, floatv2di): New.
	(floatunsv2si, floatunsv4si, floatunsv2di): Likewise.
	* config/aarch64/aarch64-simd.md
	(<optab><fcvt_target><VDQF:mode>2): New, expands to float and floatuns.
	* config/aarch64/iterators.md (FLOATUORS): New.
	(optab): Add float, floatuns.
	(su_optab): Likewise.

2013-04-29  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64-elf.h (NO_IMPLICIT_EXTERN_C): Define.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): Use new names for
	fcvt builtins.
	* config/aarch64/aarch64-simd-builtins.def (fcvtzs): Split as...
	(lbtruncv2sf, lbtruncv4sf, lbtruncv2df): ...This.
	(fcvtzu): Split as...
	(lbtruncuv2sf, lbtruncuv4sf, lbtruncuv2df): ...This.
	(fcvtas): Split as...
	(lroundv2sf, lroundv4sf, lroundv2df, lroundsf, lrounddf): ...This.
	(fcvtau): Split as...
	(lrounduv2sf, lrounduv4sf, lrounduv2df, lroundusf, lroundudf): ...This.
	(fcvtps): Split as...
	(lceilv2sf, lceilv4sf, lceilv2df): ...This.
	(fcvtpu): Split as...
	(lceiluv2sf, lceiluv4sf, lceiluv2df, lceilusf, lceiludf): ...This.
	(fcvtms): Split as...
	(lfloorv2sf, lfloorv4sf, lfloorv2df): ...This.
	(fcvtmu): Split as...
	(lflooruv2sf, lflooruv4sf, lflooruv2df, lfloorusf, lfloorudf): ...This.
	(lfrintnv2sf, lfrintnv4sf, lfrintnv2df, lfrintnsf, lfrintndf): New.
	(lfrintnuv2sf, lfrintnuv4sf, lfrintnuv2df): Likewise.
	(lfrintnusf, lfrintnudf): Likewise.
	* config/aarch64/aarch64-simd.md
	(l<fcvt_pattern><su_optab><fcvt_target><VDQF:mode>2): Convert to
	define_insn.
	(aarch64_fcvt<frint_suffix><su><mode>): Remove.
	* config/aarch64/iterators.md (FCVT): Include UNSPEC_FRINTN.
	(fcvt_pattern): Likewise.

2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): Fold to standard pattern names.
	* config/aarch64/aarch64-simd-builtins.def (frintn): New.
	(frintz): Rename to...
	(btrunc): ...this.
	(frintp): Rename to...
	(ceil): ...this.
	(frintm): Rename to...
	(floor): ...this.
	(frinti): Rename to...
	(nearbyint): ...this.
	(frintx): Rename to...
	(rint): ...this.
	(frinta): Rename to...
	(round): ...this.
	* config/aarch64/aarch64-simd.md
	(aarch64_frint<frint_suffix><mode>): Delete.
	(<frint_pattern><mode>2): Convert to insn.
	* config/aarch64/aarch64.md (unspec): Add UNSPEC_FRINTN.
	* config/aarch64/iterators.md (FRINT): Add UNSPEC_FRINTN.
	(frint_pattern): Likewise.
	(frint_suffix): Likewise.

2013-04-25  James Greenhalgh  <jame.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md (neg<mode>2): Use VDQ iterator.

2013-04-25  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64.c (aarch64_print_operand): Fix asm_fprintf
	format specifier in 'X' case.

2013-04-25  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-simd.md
	(aarch64_simd_bsl<mode>_internal): Rewrite RTL to not use UNSPEC_BSL.
	(aarch64_simd_bsl<mode>): Likewise.
	* config/aarch64/iterators.md (unspec): Remove UNSPEC_BSL.

2013-04-25  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_fold_builtin): New.
	* config/aarch64/aarch64-protos.h (aarch64_fold_builtin): New.
	* config/aarch64/aarch64.c (TARGET_FOLD_BUILTIN): Define.
	* config/aarch64/aarch64-simd-builtins.def (abs): New.
	* config/aarch64/arm_neon.h
	(vabs<q>_<f32, 64>): Implement using __builtin_aarch64_fabs.

2013-04-25  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_gimple_fold_builtin): New.
	* config/aarch64/aarch64-protos.h (aarch64_gimple_fold_builtin): New.
	* config/aarch64/aarch64-simd-builtins.def (addv): New.
	* config/aarch64/aarch64-simd.md (addpv4sf): New.
	(addvv4sf): Update.
	* config/aarch64/aarch64.c (TARGET_GIMPLE_FOLD_BUILTIN): Define.

2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md 
	(*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): New pattern.

2013-04-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*ngc<mode>): New pattern.
	(*ngcsi_uxtw): New pattern.

2013-04-24  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-04-24  James Greenhalgh  <james.greenhalgh@arm.com>

2013-04-23  Sofiane Naci  <sofiane.naci@arm.com>
	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Add simd attribute.

2013-04-22  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/arm_neon.h (vld1<q>_lane*): Fix constraints.
	(vld1<q>_dup_<sufp><8, 16, 32, 64>): Likewise.
	(vld1<q>_<sufp><8, 16, 32, 64>): Likewise.

	* config/aarch64/aarch64-builtins.c
	(CF): Remove.
	(CF0, CF1, CF2, CF3, CF4, CF10): New.
	(VAR<1-12>): Add MAP parameter.
	(BUILTIN_*): Likewise.
	* config/aarch64/aarch64-simd-builtins.def: Set MAP parameter.
	* config/aarch64/aarch64-simd.md (aarch64_sshl_n<mode>): Remove.
	(aarch64_ushl_n<mode>): Likewise.
	(aarch64_sshr_n<mode>): Likewise.
	(aarch64_ushr_n<mode>): Likewise.
	(aarch64_<maxmin><mode>): Likewise.
	(aarch64_sqrt<mode>): Likewise.
	* config/aarch64/arm_neon.h (vshl<q>_n_*): Use new builtin names.
	(vshr<q>_n_*): Likewise.

2013-04-22  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-builtins.c
	(aarch64_simd_builtin_type_mode): Handle SF types.
	(sf_UP): Define.
	(BUILTIN_GPF): Define.
	(aarch64_init_simd_builtins): Handle SF types.
	* config/aarch64/aarch64-simd-builtins.def (frecpe): Add support.
	(frecps): Likewise.
	(frecpx): Likewise.
	* config/aarch64/aarch64-simd.md
	(simd_types): Update simd_frcp<esx> to simd_frecp<esx>.
	(aarch64_frecpe<mode>): New.
	(aarch64_frecps<mode>): Likewise.
	* config/aarch64/aarch64.md (unspec): Add UNSPEC_FRECP<ESX>.
	(v8type): Add frecp<esx>.
	(aarch64_frecp<FRECP:frecp_suffix><mode>): New.
	(aarch64_frecps<mode>): Likewise.
	* config/aarch64/iterators.md (FRECP): New.
	(frecp_suffix): Likewise.
	* config/aarch64/arm_neon.h
	(vrecp<esx><qsd>_<fd><32, 64>): Convert to using builtins.

2013-04-16  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*adds_<optab><mode>_multp2):
	New pattern.
	(*subs_<optab><mode>_multp2): New pattern.
	(*adds_<optab><ALLX:mode>_<GPI:mode>): New pattern.
	(*subs_<optab><ALLX:mode>_<GPI:mode>): New pattern.

2013-04-16  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*adds_mul_imm_<mode>): New pattern.
	(*subs_mul_imm_<mode>): New pattern.

2013-04-12  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.c (aarch64_select_cc_mode): Allow NEG
	code in CC_NZ mode.
	* config/aarch64/aarch64.md (*neg_<shift><mode>3_compare0): New
	pattern.

2013-04-11  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.h (REVERSIBLE_CC_MODE): Define.

2013-04-11  James Greenhalgh  <james.greenhalgh@arm.com>
	* config/aarch64/aarch64-simd.md (aarch64_vcond_internal): Fix
	floating-point vector comparisons against 0.

2012-04-10  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_print_extension): New function.
	(aarch64_start_file): Use the new function.

2013-04-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
	PR target/56809
	* config/aarch64/aarch64.c (is_jump_table): Use next_active_insn
	instead of next_real_insn.

2013-04-02  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Add alternatives for
	scalar move.
	* config/aarch64/aarch64.c
	(aarch64_simd_scalar_immediate_valid_for_move): New.
	* config/aarch64/aarch64-protos.h
	(aarch64_simd_scalar_immediate_valid_for_move): New.
	* config/aarch64/constraints.md (Dh, Dq): New.
	* config/aarch64/iterators.md (hq): New.

2013-04-02  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md (*mov<mode>_aarch64): Add variants for scalar
	load/store operations using B/H registers.
	(*zero_extend<SHORT:mode><GPI:mode>2_aarch64): Likewise.

2013-03-28  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (aarch64_can_eliminate): Keep frame
	record only when desired or required.

2013-03-28  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.md (*and<mode>3_compare0): New pattern.
	(*andsi3_compare0_uxtw): New pattern.
	(*and_<SHIFT:optab><mode>3_compare0): New pattern.
	(*and_<SHIFT:optab>si3_compare0_uxtw): New pattern.

2012-12-26  Sofiane Naci  <sofiane.naci@arm.com>
	* config/aarch64/aarch64.c (aarch64_classify_address): Support
	PC-relative load in SI modes and above only.

2013-03-22  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (aarch64_print_operand): New
	format specifier for printing a constant in hex.
	* config/aarch64/aarch64.md (insv_imm<mode>): Use the X
	format specifier for printing second operand.

2013-03-21   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64-simd.md (simd_fabd): New Attribute.
	(abd<mode>_3): New pattern.
	(aba<mode>_3): New pattern.
	(fabd<mode>_3): New pattern.

2013-03-21   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>
	 
	* config/aarch64/aarch64-elf.h (REGISTER_PREFIX): Remove.
	* config/aarch64/aarch64.c (aarch64_print_operand): Remove all
	occurrence of REGISTER_PREFIX as its empty string.

2013-03-06  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/t-aarch64 (TM_H, OPTIONS_H_EXTRA): Add
	aarch64-cores.def.

2013-03-01  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c:
	Fix typo in `#undef TARGET_FIXED_CONDITION_CODE_REGS'

2013-03-19  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*sub<mode>3_carryin): New pattern.
	(*subsi3_carryin_uxtw): Likewise.

2013-03-19  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*ror<mode>3_insn): New pattern.
	(*rorsi3_insn_uxtw): Likewise.

2013-03-19  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (*extr<mode>5_insn): New pattern.
	(*extrsi5_insn_uxtw): Likewise

2013-03-14  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md: (*and<mode>3nr_compare0): Use CC_NZ.
	(*and_<SHIFT:optab><mode>3nr_compare0): Likewise.

2013-03-14  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return correct
	CC mode for AND.

2013-02-28  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_float_const_representable): Remove unused variable.

2013-02-28  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c (aarch64_mangle_type): Make static.

2013-02-28  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_init_simd_builtins): Make static.

2013-02-28  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_simd_make_constant): Make static.

2013-02-22  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd-builtins.def: Add copyright header.
	* config/aarch64/t-aarch64
	(aarch64-builtins.o): Depend on aarch64-simd-builtins.def.

2013-02-13  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from aarch64-branch.
	2012-09-06  James Greenhalgh  <james.greenhalgh@arm.com>
		    Richard Earnshaw  <rearnsha@arm.com>

	* common/config/aarch64/aarch64-common.c
	(aarch_option_optimization_table): New.
	(TARGET_OPTION_OPTIMIZATION_TABLE): Define.
	* gcc/config/aarch64/aarch64-elf.h (ASM_OUTPUT_DEF): New definition.
	* gcc/config/aarch64/aarch64.c (TARGET_MIN_ANCHOR_OFFSET): Define.
	(TARGET_MAX_ANCHOR_OFFSET): Likewise.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-18  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.md (insv_imm<mode>): Add modes
	for source operands.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_simd_const_bounds): Move declaration of 'lane' above code.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_trampoline_init): Pass 'LCT_NORMAL' rather than '0'
	to emit_library_call.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_legitimize_reload_address): Cast 'type' before
	passing to push_reload.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_add_constant): Move declaration of 'shift' above code.

2013-02-04  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c (generic_tunings): Initialise.

2013-02-01 Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>

	backport from mainline.
	2013-01-04  Andrew Pinski  <apinski@cavium.com>

	* gcc/testsuite/gcc.target/aarch64:
	New test case cmp-1.c added to test the hook  
	TARGET_FIXED_CONDITION_CODE_REGS

2013-02-01 Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>

	Backport from mainline.
	2013-01-04  Andrew Pinski  <apinski@cavium.com>

	* config/aarch64/aarch64.c (aarch64_fixed_condition_code_regs):
	New function.
	(TARGET_FIXED_CONDITION_CODE_REGS): Define

2013-01-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd-builtins.def: Separate sq<r>dmulh_lane
	entries into lane and laneq entries.
	* config/aarch64/aarch64-simd.md (aarch64_sq<r>dmulh_lane<mode>): Remove
	AdvSIMD scalar modes.
	(aarch64_sq<r>dmulh_laneq<mode>): New. 
	(aarch64_sq<r>dmulh_lane<mode>): New RTL pattern for Scalar AdvSIMD
	modes.
	* config/aarch64/arm_neon.h: Fix all the vq<r>dmulh_lane* intrinsics'
	builtin implementations to relfect changes in RTL in aarch64-simd.md.
	* config/aarch64/iterators.md (VCOND): New. 
	(VCONQ): New. 

2013-01-18  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-01-18  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(aarch64_vcond_internal<mode>): Handle unordered cases.
	* config/aarch64/iterators.md (v_cmp_result): New.

2013-01-18  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd.md
	(aarch64_simd_bsl<mode>_internal): Add floating-point modes.
	(aarch64_simd_bsl): Likewise.
	(aarch64_vcond_internal<mode>): Likewise.
	(vcond<mode><mode>): Likewise.
	(aarch64_cm<cmp><mode>): Fix constraints, add new modes.
	* config/aarch64/iterators.md (V_cmp_result): Add V2DF.

2013-01-18  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h: Map scalar types to standard types.

2013-01-16  Ian Bolton  <ian.bolton@arm.com>

	* gcc/config/aarch64/aarch64.md
	(*cstoresi_neg_uxtw): New pattern.
	(*cmovsi_insn_uxtw): New pattern.
	(*<optab>si3_uxtw): New pattern.
	(*<LOGICAL:optab>_<SHIFT:optab>si3_uxtw): New pattern.
	(*<optab>si3_insn_uxtw): New pattern.
	(*bswapsi2_uxtw): New pattern.

2013-01-14  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (*aarch64_simd_ld1r<mode>): New. 
	* config/aarch64/iterators.md (VALLDI): New. 

2013-01-10  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): Handle sqrt, sqrtf.

2013-01-09   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* config/aarch64/aarch64.c (aarch64_print_operand): Replace %r
	in asm_fprintf with reg_names.
	(aarch64_print_operand_address): Likewise.
	(aarch64_return_addr): Likewise.
	* config/aarch64/aarch64.h (ASM_FPRINTF_EXTENSIONS): Remove.

2013-01-08  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (vec_init<mode>): New. 
	* config/aarch64/aarch64-protos.h (aarch64_expand_vector_init): Declare.
	* config/aarch64/aarch64.c (aarch64_simd_dup_constant,
	aarch64_simd_make_constant, aarch64_expand_vector_init): New. 

2013-01-08  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_simd_vec_<su>mult_lo_<mode>,
	aarch64_simd_vec_<su>mult_hi_<mode>): Separate instruction and operand
	with tab instead of space.

2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-01-07  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/arm_neon.h (vld1_dup_*): Make argument const.
	(vld1q_dup_*): Likewise.
	(vld1_*): Likewise.
	(vld1q_*): Likewise.
	(vld1_lane_*): Likewise.
	(vld1q_lane_*): Likewise.

2013-01-08  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2013-01-07  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-protos.h
	(aarch64_const_double_zero_rtx_p): Rename to...
	(aarch64_float_const_zero_rtx_p): ...this.
	(aarch64_float_const_representable_p): New.
	(aarch64_output_simd_mov_immediate): Likewise.
	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>): Refactor
	move immediate case.
	* config/aarch64/aarch64.c
	(aarch64_const_double_zero_rtx_p): Rename to...
	(aarch64_float_const_zero_rtx_p): ...this.
	(aarch64_print_operand): Allow printing of new constants.
	(aarch64_valid_floating_const): New.
	(aarch64_legitimate_constant_p): Check for valid floating-point
	constants.
	(aarch64_simd_valid_immediate): Likewise.
	(aarch64_vect_float_const_representable_p): New.
	(aarch64_float_const_representable_p): Likewise.
	(aarch64_simd_imm_zero_p): Also allow for floating-point 0.0.
	(aarch64_output_simd_mov_immediate): New.
	* config/aarch64/aarch64.md (*movsf_aarch64): Add new alternative.
	(*movdf_aarch64): Likewise.
	* config/aarch64/constraints.md (Ufc): New.
	(Y): call aarch64_float_const_zero_rtx.
	* config/aarch64/predicates.md (aarch64_fp_compare_operand): New.

2013-01-07  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vmovn_high_is16, vmovn_high_s32,
	vmovn_high_s64, vmovn_high_u16, vmovn_high_u32, vmovn_high_u64,
	vqmovn_high_s16, vqmovn_high_s32, vqmovn_high_s64, vqmovn_high_u16,
	vqmovn_high_u32, vqmovn_high_u64, vqmovun_high_s16, vqmovun_high_s32,
	vqmovun_high_s64): Fix source operand number and update copyright.

2013-01-02  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64-cores.def: Add entries for "cortex-a53" and
	"cortex-a57".
	* config/aarch64/aarch64-tune.md: Re-generate.

2013-01-02  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-18  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c (aarch64_simd_attr_length_move):
	Remove unused variables.
	(aarch64_split_compare_and_swap): Likewise.

2012-12-20  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-12-20  Ian Bolton  <ian.bolton@arm.com>

        * gcc/config/aarch64/aarch64.md
        (*addsi3_aarch64_uxtw): New pattern.
        (*addsi3_compare0_uxtw): New pattern.
        (*add_<shift>_si_uxtw): New pattern.
        (*add_<optab><SHORT:mode>_si_uxtw): New pattern.
        (*add_<optab><SHORT:mode>_shft_si_uxtw): New pattern.
        (*add_<optab><SHORT:mode>_mult_si_uxtw): New pattern.
        (*add_<optab>si_multp2_uxtw): New pattern.
        (*addsi3_carryin_uxtw): New pattern.
        (*addsi3_carryin_alt1_uxtw): New pattern.
        (*addsi3_carryin_alt2_uxtw): New pattern.
        (*addsi3_carryin_alt3_uxtw): New pattern.
        (*add_uxtsi_multp2_uxtw): New pattern.
        (*subsi3_uxtw): New pattern.
        (*subsi3_compare0_uxtw): New pattern.
        (*sub_<shift>_si_uxtw): New pattern.
        (*sub_mul_imm_si_uxtw): New pattern.
        (*sub_<optab><SHORT:mode>_si_uxtw): New pattern.
        (*sub_<optab><SHORT:mode>_shft_si_uxtw): New pattern.
        (*sub_<optab>si_multp2_uxtw): New pattern.
        (*sub_uxtsi_multp2_uxtw): New pattern.
        (*negsi2_uxtw): New pattern.
        (*negsi2_compare0_uxtw): New pattern.
        (*neg_<shift>_si2_uxtw): New pattern.
        (*neg_mul_imm_si2_uxtw): New pattern.
        (*mulsi3_uxtw): New pattern.
        (*maddsi_uxtw): New pattern.
        (*msubsi_uxtw): New pattern.
        (*mulsi_neg_uxtw): New pattern.
        (*<su_optab>divsi3_uxtw): New pattern.

2012-12-17  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-17  James Greenhalgh  <james.greenhalgh@arm.com>
		    Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_autovectorize_vector_sizes): New.
	(TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES): Define.

2012-12-06  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-simd-builtins.def: Add new builtins.
	* config/aarch64/aarch64-simd.md (simd_type): Add uzp.
	(aarch64_<PERMUTE:perm_insn><PERMUTE:perm_hilo><mode>): New.
	* config/aarch64/aarch64.c (aarch64_evpc_trn): New.
	(aarch64_evpc_uzp): Likewise.
	(aarch64_evpc_zip): Likewise.
	(aarch64_expand_vec_perm_const_1): Check for trn, zip, uzp patterns.
	* config/aarch64/iterators.md (unspec): Add neccessary unspecs.
	(PERMUTE): New.
	(perm_insn): Likewise.
	(perm_hilo): Likewise.

2012-12-06  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-protos.h
	(aarch64_split_combinev16qi): New.
	(aarch64_expand_vec_perm): Likewise.
	(aarch64_expand_vec_perm_const): Likewise.
	* config/aarch64/aarch64-simd.md (vec_perm_const<mode>): New.
	(vec_perm<mode>): Likewise.
	(aarch64_tbl1<mode>): Likewise.
	(aarch64_tbl2v16qi): Likewise.
	(aarch64_combinev16qi): New.
	* config/aarch64/aarch64.c
	(aarch64_vectorize_vec_perm_const_ok): New.
	(aarch64_split_combinev16qi): Likewise.
	(MAX_VECT_LEN): Define.
	(expand_vec_perm_d): New.
	(aarch64_expand_vec_perm_1): Likewise.
	(aarch64_expand_vec_perm): Likewise.
	(aarch64_evpc_tbl): Likewise.
	(aarch64_expand_vec_perm_const_1): Likewise.
	(aarch64_expand_vec_perm_const): Likewise.
	(aarch64_vectorize_vec_perm_const_ok): Likewise.
	(TARGET_VECTORIZE_VEC_PERM_CONST_OK): Likewise.
	* config/aarch64/iterators.md
	(unspec): Add UNSPEC_TBL, UNSPEC_CONCAT.
	(V_cmp_result): Add mapping for V2DF.

2012-12-06  Yufeng Zhang  <yufeng.zhang@arm.com>

	Backport from mainline
	2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>
	* config/aarch64/aarch64.c (aarch64_simd_mangle_map_entry): New
	typedef.
	(aarch64_simd_mangle_map): New table.
	(aarch64_mangle_type): Locate and return the mangled name for
	a given AdvSIMD vector type.

2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_builtin_vectorized_function): New.
	* config/aarch64/aarch64-protos.h
	(aarch64_builtin_vectorized_function): Declare.
	* config/aarch64/aarch64-simd-builtins.def (frintz, frintp): Add.
	(frintm, frinti, frintx, frinta, fcvtzs, fcvtzu): Likewise.
	(fcvtas, fcvtau, fcvtps, fcvtpu, fcvtms, fcvtmu): Likewise.
	* config/aarch64/aarch64-simd.md
	(aarch64_frint_<frint_suffix><mode>): New.
	(<frint_pattern><mode>2): Likewise.
	(aarch64_fcvt<frint_suffix><su><mode>): Likewise.
	(l<fcvt_pattern><su_optab><fcvt_target><VDQF:mode>2): Likewise.
	* config/aarch64/aarch64.c (TARGET_VECTORIZE_BUILTINS): Define.
	(TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION): Likewise.
	* config/aarch64/aarch64.md
	(btrunc<mode>2, ceil<mode>2, floor<mode>2)
	(round<mode>2, rint<mode>2, nearbyint<mode>2): Consolidate as...
	(<frint_pattern><mode>2): ...this.
	(lceil<su_optab><mode><mode>2, lfloor<su_optab><mode><mode>2)
	(lround<su_optab><mode><mode>2)
	(lrint<su_optab><mode><mode>2): Consolidate as...
	(l<fcvt_pattern><su_optab><GPF:mode><GPI:mode>2): ... this.
	* config/aarch64/iterators.md (fcvt_target): New.
	(FCVT_TARGET): Likewise.
	(FRINT): Likewise.
	(FCVT): Likewise.
	(frint_pattern): Likewise.
	(frint_suffix): Likewise.
	(fcvt_pattern): Likewise.

2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>

	Backport from mainline
	2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_mangle_type): New function.
	(TARGET_MANGLE_TYPE): Define.

2012-12-04  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	Backport from mainline
        2012-12-04  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_build_builtin_va_list): Set
	TYPE_STUB_DECL.

2012-12-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64.c (aarch64_simd_vector_alignment,
	aarch64_simd_vector_alignment_reachable): New.
	(TARGET_VECTOR_ALIGNMENT, TARGET_VECTORIZE_VECTOR_ALIGNMENT_REACHABLE):
	Define.

2012-12-03  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-10-30  James Greenhalgh  <james.greenhalgh@arm.com>
		    Tejas Belagod <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md
	(aarch64_simd_bsl<mode>_internal): New pattern.
	(aarch64_simd_bsl<mode>): Likewise.
	(aarch64_vcond_internal<mode>): Likewise.
	(vcondu<mode><mode>): Likewise.
	(vcond<mode><mode>): Likewise.
	* config/aarch64/iterators.md (UNSPEC_BSL): Add to define_constants.

2012-12-03  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.c (aarch64_build_constant): Update prototype.
	Call emit_move_insn	instead of printing movi/movn/movz instructions.
	Call gen_insv_immdi instead of printing movk instruction.
	(aarch64_add_constant): Update prototype.
	Generate RTL instead of printing add/sub instructions.
	(aarch64_output_mi_thunk): Update calls to aarch64_build_constant
	and aarch64_add_constant.

2012-11-30  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-09-26  Christophe Lyon <christophe.lyon@linaro.org>

	* tree-ssa-math-opts.c (bswap_stats): Add found_16bit field.
	(execute_optimize_bswap): Add support for builtin_bswap16.

2012-11-30  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-04-11  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/52624
	* doc/extend.texi (Other Builtins): Document __builtin_bswap16.
	(PowerPC AltiVec/VSX Built-in Functions): Remove it.
	* doc/md.texi (Standard Names): Add bswap.
	* builtin-types.def (BT_UINT16): New primitive type.
	(BT_FN_UINT16_UINT16): New function type.
	* builtins.def (BUILT_IN_BSWAP16): New.
	* builtins.c (expand_builtin_bswap): Add TARGET_MODE argument.
	(expand_builtin) <BUILT_IN_BSWAP16>: New case.  Pass TARGET_MODE to
	expand_builtin_bswap.
	(fold_builtin_bswap): Add BUILT_IN_BSWAP16 case.
	(fold_builtin_1): Likewise.
	(is_inexpensive_builtin): Likewise.
	* optabs.c (expand_unop): Deal with bswap in HImode specially.  Add
	missing bits for bswap to libcall code.
	* tree.c (build_common_tree_nodes): Build uint16_type_node.
	* tree.h (enum tree_index): Add TI_UINT16_TYPE.
	(uint16_type_node): New define.
	* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_BSWAP_HI): Delete.
	* config/rs6000/rs6000.c (rs6000_expand_builtin): Remove handling of
	above builtin.
	(rs6000_init_builtins): Likewise.
	* config/rs6000/rs6000.md (bswaphi2): Add TARGET_POWERPC predicate.

2012-11-29  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-11-26  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64-builtins.c (aarch64_builtin_decls): New.
	(aarch64_init_simd_builtins): Store declaration after builtin
	initialisation.
	(aarch64_init_builtins): Likewise.
	(aarch64_builtin_decl): New.
	* config/aarch64/aarch64-protos.h (aarch64_builtin_decl): New.
	* config/aarch64/aarch64.c (TARGET_BUILTIN_DECL): Define.

2012-11-29  James Greenhalgh  <james.greenhalgh@arm.com>

	Backport from mainline.
	2012-11-20  James Greenhalgh  <james.greenhalgh@arm.com>
		    Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-builtins.c
	(aarch64_simd_builtin_type_bits): Rename to...
	(aarch64_simd_builtin_type_mode): ...this, make sequential.
	(aarch64_simd_builtin_datum): Refactor members.
	(VAR1, VAR2, ..., VAR12): Update accordingly.
	(aarch64_simd_builtin_data): Include from aarch64-simd-builtins.def.
	(aarch64_builtins): Update accordingly.
	(init_aarch64_simd_builtins): Refactor, rename to...
	(aarch64_init_simd_builtins): ...this.
	(aarch64_simd_builtin_compare): Remove.
	(locate_simd_builtin_icode): Likewise.
	* config/aarch64/aarch64-protos.h (aarch64_init_builtins): New.
	(aarch64_expand_builtin): Likewise.
	(aarch64_load_tp): Likewise.
	* config/aarch64/aarch64-simd-builtins.def: New file.
	* config/aarch64/aarch64.c (aarch64_init_builtins):
	Move to aarch64-builtins.c.
	(aarch64_expand_builtin): Likewise.
	(aarch64_load_tp): Remove static designation.
	* config/aarch64/aarch64.h
	(aarch64_builtins): Move to aarch64-builtins.c.

2012-11-22  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* doc/md.texi (AArch64 family): Remove Utf.

2012-11-22  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-11-22  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (bswaphi2): New pattern.

2012-11-21  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* Makefile.in (gengtype-lex.o): Add dependency on $(BCONFIG_H).

2012-11-21  James Greenhalgh  <james.greenhalgh@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_output_mi_thunk): Use 4.7 API for plus_constant.

2012-11-20  Sofiane Naci  <sofiane.naci@arm.com>

	Backport from mainline
	2012-11-20  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md
	(define_attr "sync_*"): Remove.
	(define_attr "length"): Update.
	Include atomics.md.
	* config/aarch64/aarch64-protos.h
	(aarch64_expand_compare_and_swap): Add function prototype.
	(aarch64_split_compare_and_swap): Likewise.
	(aarch64_split_atomic_op): Likewise.
	(aarch64_expand_sync): Remove function prototype.
	(aarch64_output_sync_insn): Likewise.
	(aarch64_output_sync_lock_release): Likewise.
	(aarch64_sync_loop_insns): Likewise.
	(struct aarch64_sync_generator): Remove.
	(enum aarch64_sync_generator_tag): Likewise.
	* config/aarch64/aarch64.c
	(aarch64_legitimize_sync_memory): Remove function.
	(aarch64_emit): Likewise.
	(aarch64_insn_count): Likewise.
	(aarch64_output_asm_insn): Likewise.
	(aarch64_load_store_suffix): Likewise.
	(aarch64_output_sync_load): Likewise.
	(aarch64_output_sync_store): Likewise.
	(aarch64_output_op2): Likewise.
	(aarch64_output_op3): Likewise.
	(aarch64_output_sync_loop): Likewise.
	(aarch64_get_sync_operand): Likewise.
	(aarch64_process_output_sync_insn): Likewise.
	(aarch64_output_sync_insn): Likewise.
	(aarch64_output_sync_lock_release): Likewise.
	(aarch64_sync_loop_insns): Likewise.
	(aarch64_call_generator): Likewise.
	(aarch64_expand_sync): Likewise.
	(* emit_f): Remove variable.
	(aarch64_insn_count): Likewise.
	(FETCH_SYNC_OPERAND): Likewise.
	(aarch64_emit_load_exclusive): New function.
	(aarch64_emit_store_exclusive): Likewise.
	(aarch64_emit_unlikely_jump): Likewise.
	(aarch64_expand_compare_and_swap): Likewise.
	(aarch64_split_compare_and_swap): Likewise.
	(aarch64_split_atomic_op): Likewise.
	* config/aarch64/iterators.md
	(atomic_sfx): New mode attribute.
	(atomic_optab): New code attribute.
	(atomic_op_operand): Likewise.
	(atomic_op_str): Likewise.
	(syncop): Rename to atomic_op.
	* config/aarch64/sync.md: Delete.
	* config/aarch64/atomics.md: New file.

2012-11-19  Sofiane Naci  <sofiane.naci@arm.com>

	Backport from mainline
	2012-11-19  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_output_mi_thunk): Refactor to generate RTL patterns.

2012-11-13  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-11-12  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (cmov<mode>_insn): Emit CSINC when
	one of the alternatives is constant 1.
	* config/aarch64/constraints.md: New constraint.
	* config/aarch64/predicates.md: Rename predicate
	aarch64_reg_zero_or_m1 to aarch64_reg_zero_or_m1_or_1.

2012-11-13  Ian Bolton  <ian.bolton@arm.com>

	Backport from mainline
	2012-11-12  Ian Bolton  <ian.bolton@arm.com>
 
	* config/aarch64/aarch64.md (*compare_neg<mode>): New pattern.

2012-11-08  Yufeng Zhang  <yufeng.zhang@arm.com>

	Revert:
	2012-11-07  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_expand_prologue): add the missing
	argument 'Pmode' to the 'plus_constant' call.

2012-11-07  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_expand_prologue): add the missing
	argument 'Pmode' to the 'plus_constant' call.

2012-11-07  Yufeng Zhang  <yufeng.zhang@arm.com>

	* config/aarch64/aarch64.c (aarch64_expand_prologue): For the
	load-pair with writeback instruction, replace
	aarch64_set_frame_expr with add_reg_note (REG_CFA_ADJUST_CFA);
	add new local variable 'cfa_reg' and use it.

2012-10-17  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md (<optab><mode>3): Update constraint
	for operand 0.
	Update scheduling attribute for the second alternative.

2012-10-16  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vmla_lane_f32, vmla_lane_s16,
	vmla_lane_s32, vmla_lane_u16, vmla_lane_u32, vmlal_lane_s16, 
	vmlal_lane_s32, vmlal_lane_u16, vmlal_lane_u32,
	vmls_lane_s16, vmls_lane_s32, vmls_lane_u16, vmls_lane_u32,
	vmlsl_lane_s16, vmlsl_lane_s32, vmlsl_lane_u16,
	vmlsl_lane_u32, vmul_lane_f32, vmul_lane_s16, vmul_lane_s32,
	vmul_lane_u16, vmul_lane_u32, vmull_lane_s16, vmull_lane_s32,
	vmull_lane_u16, vmull_lane_u32, vmulq_lane_f32, vmulq_lane_f64,
	vmulq_lane_s16, vmulq_lane_s32, vmulq_lane_u16, vmulq_lane_u32,
	vqdmlal_lane_s16, vqdmlal_lane_s32, vqdmlalh_lane_s16,
	vqdmlsl_lane_s16, vqdmlsl_lane_s32, vqdmulh_lane_s16, vqdmulh_lane_s32,
	vqdmulhq_lane_s16, vqdmulhq_lane_s32, vqdmull_lane_s16,
	vqdmull_lane_s32, vqrdmulh_lane_s16, vqrdmulh_lane_s32,
	vqrdmulhq_lane_s16, vqrdmulhq_lane_s32): Update prototype and 
	implementation.

2012-10-16  Ian Bolton  <ian.bolton@arm.com>

	* gcc/config/aarch64/aarch64.md
	(<optab><ALLX:mode>_shft_<GPI:mode>): Restrict operands.

2012-10-16  Marcus Shawcroft <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_split_doubleword_move):
	Rename to aarch64_split_128bit_move.
	(aarch64_split_128bit_move_p): New.
	* config/aarch64/aarch64.c (aarch64_split_doubleword_move):
	Rename to aarch64_split_128bit_move.
	(aarch64_split_128bit_move_p): New.
	* config/aarch64/aarch64.md: Adjust TImode move split.

2012-10-15  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>

        * config/aarch64/aarch64.h (TARGET_CPU_CPP_BUILTINS): Add predefine for
	AArch64 code models.

2012-10-05  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vqdmlalh_lane_s16, vqdmlalh_s16,
	vqdmlals_lane_s32, vqdmlals_s32, vqdmlslh_lane_s16, vqdmlslh_s16,
	vqdmlsls_lane_s32, vqdmlsls_s32): Remove old temporary inline asm 
	implementations.

2012-10-05  Sofiane Naci  <sofiane.naci@arm.com>

	* config/aarch64/aarch64.md (*fnmadd<mode>4): Add missing
	constraints.

2012-10-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h: Rename vqml<as>l<sh>_* to
	vqdml<as>l<sh>_*.

2012-10-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vfma_n_f32, vfmaq_n_f32, vfmaq_n_f64): New.

2012-10-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vbslq_f64): Fix parameter type.

2012-10-02  Tejas Belagod  <tejas.belagod@arm.com>
	    Ulrich Weigand <Ulrich.Weigand@de.ibm.com> 

	* reload.c (find_reloads_subreg_address): Remove FORCE_REPLACE
	parameter.  Always replace normal subreg with memory reference
	whenever possible.  Return NULL otherwise.
	(find_reloads_toplev): Always call find_reloads_subreg_address
	for subregs of registers equivalent to a memory location.
	Only recurse further if find_reloads_subreg_address fails.
	(find_reloads_address_1): Only call find_reloads_subreg_address
	for subregs of registers equivalent to a memory location.
	Properly handle failure of find_reloads_subreg_address.

2012-10-01  Ian Bolton  <ian.bolton@arm.com>
	    Richard Henderson  <rth@redhat.com>

	* config/aarch64/aarch64.c (aarch64_expand_mov_immediate): Fix a
	functional typo and refactor code in switch statement.
	* config/aarch64/aarch64.md (add_losym): Handle symbol + offset.
	* config/aarch64/predicates.md (aarch64_tls_ie_symref): Match const.
	(aarch64_tls_le_symref): Likewise.

2012-09-26  Marcus Shawcroft <marcus.shawcroft@arm.com>

	* config/aarch64/predicates.md (aarch64_simd_reg_or_zero): Remove
	duplicate.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64.c (aarch64_shift_truncation_mask): Define.
	(TARGET_SHIFT_TRUNCATION_MASK): Define.
	* config/aarch64/aarch64.h (SHIFT_COUNT_TRUNCATED): Conditionalize on
	TARGET_SIMD.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vrshrn_high_n_s16, vrshrn_high_n_s32)
	(vrshrn_high_n_s64, vrshrn_high_n_u16, vrshrn_high_n_u32)
	(vrshrn_high_n_u64, vshrn_high_n_s16, vshrn_high_n_s32)
	(vshrn_high_n_s32, vshrn_high_n_s64, vshrn_high_n_u16, vshrn_high_n_u32)
	(vshrn_high_n_u64): Fix template to reference correct operands.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vmovq_n_f64): Add.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vfmaq_lane_f64): Fix prototype and
	assembler template accordingly.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-protos.h (aarch64_simd_imm_scalar_p): Declare.
	* config/aarch64/aarch64.c (aarch64_simd_imm_scalar_p): New.
	* config/aarch64/aarch64.md (*movdi_aarch64): Add alternative for moving
	valid scalar immediate into a Advanved SIMD D-register.
	* config/aarch64/constraints.md (Dd): New.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_cm<cmp><mode>): Tighten
	predicate for operand 2 of the compare pattern to accept register
	or zero.
	* config/aarch64/predicates.md (aarch64_simd_reg_or_zero): New.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>): Split Q-reg
	vector value move contained in general registers.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64.c (aarch64_simd_expand_builtin): Expand binary
	operations' constant operand only if the predicate allows it.

2012-09-25  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-builtins.c (aarch64_simd_builtin_data):
	Populate intrinsic table with struct loads and store descriptors.
	(init_aarch64_simd_builtins): Remove cruft.
	(aarch64_simd_expand_builtin): Expand the builtins.
	* config/aarch64/aarch64-modes.def: Define new vector modes for register
	lists.
	* config/aarch64/aarch64-protos.h (aarch64_simd_attr_length_move): New.
	(aarch64_simd_mem_operand_p): New.
	(aarch64_simd_imm_zero_p): New.
	(aarch64_output_move_struct): New.
	(aarch64_simd_disambiguate_copy): New.
	* config/aarch64/aarch64-simd.md (simd_mode): Add OI, CI and XI to the
	list.
	(mov<mode>): Tighten predicates for simd operand.
	(movmisalign<mode>): Likewise.
	(*aarch64_simd_mov<mode>): Tighten predicates and constraints for simd
	operands.
	(*aarch64_combinez<mode>): New.
	(vec_load_lanesoi<mode>, vec_store_lanesoi<mode>)
	(vec_load_lanesci<mode>, vec_store_lanesci<mode>)
	(vec_load_lanesxi<mode>)
	(vec_store_lanesxi<mode>, mov<mode>, *aarch64_mov<mode>)
	(aarch64_ld2<mode>_dreg, aarch64_ld3<mode>_dreg)
	(aarch64_ld4<mode>_dreg, aarch64_ld<VSTRUCT:nregs><VDC:mode>)
	(aarch64_ld<VSTRUCT:nregs><VQ:mode>)
	(aarch64_get_dreg<VSTRUCT:mode><VDC:mode>)
	(aarch64_get_qreg<VSTRUCT:mode><VQ:mode>, aarch64_st2<mode>_dreg)
	(aarch64_st3<mode>_dreg, aarch64_st4<mode>_dreg)
	(aarch64_st<VSTRUCT:nregs><VDC:mode>)
	(aarch64_st<VSTRUCT:nregs><VQ:mode>)
	(aarch64_set_qreg<VSTRUCT:mode><VQ:mode>): New expanders and patterns
	for vector struct loads and stores.
	* config/aarch64/aarch64.c (aarch64_vect_struct_mode_p): New.
	(aarch64_vector_mode_p): New.
	(aarch64_array_mode_supported_p): New.
	(aarch64_hard_regno_mode_ok): Check that reglists don't go out of
	range and don't allocate general regs to large int modes.
	(aarch64_classify_address): Restrict addressing modes of large int
	modes to same as SIMD addressing modes.
	(aarch64_print_operand): Print specifiers for register lists.
	(aarch64_legitimize_reload_address): Treat large int modes simliar to
	SIMD modes.
	(aarch64_class_max_nregs): Return the correct max number of register
	for a particular mode.
	(aarch64_legitimate_constant_p): Do not allow large int modes
	immediate values.
	(aarch64_simd_imm_zero_p): New.
	(aarch64_simd_mem_operand_p): Check if mem operand has a valid SIMD
	addressing mode.
	(aarch64_simd_disambiguate_copy): Copy values that span multiple
	register with and without overlapping.
	(aarch64_simd_attr_length_move): Length of instruction sequence
	depending on the mode.
	* config/aarch64/aarch64.h (AARCH64_VALID_SIMD_QREG_MODE): New.
	* config/aarch64/aarch64.md (UNSPEC_VSTRUCTDUMMY, UNSPEC_LD2)
	(UNSPEC_LD3, UNSPEC_LD4, UNSPEC_ST2, UNSPEC_ST3, UNSPEC_ST4): New.
	* config/aarch64/arm_neon.h: Remove assembler implementation of vector
	struct loads and stores and add new C implementations.
	* config/aarch64/constraints.md (Utv): New memory constraint for SIMD
	memory operands.
	(Dz): New.
	* config/aarch64/iterators.md (VDIC, VSTRUCT, DX): New mode iterators.
	(Vendreg, nregs, VRL2, VRL3, VRL4, VSTRUCT_DREG): New mode attributes.
	* config/aarch64/predicates.md (aarch64_simd_struct_operand): New.
	(aarch64_simd_general_operand): New.
	(aarch64_simd_nonimmediate_operand): New.
	(aarch64_simd_reg_or_zero): New.
	(aarch64_simd_imm_zero): New.

2012-09-20  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>

	* config/aarch64/aarch64.md: Make unspec and unspecv constants
	c_enums and split out to iterators.md and sync.md.
	* config/aarch64/iterators.md: Add SIMD unspec c_enums.
	* config/aarch64/sync.md: Add sync unspecv c_enums.

2012-09-18  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.h: Define CTZ_DEFINED_VALUE_AT_ZERO.
	* config/aarch64/aarch64.md (clrsb<mode>2): New pattern.
	* config/aarch64/aarch64.md (rbit<mode>2): New pattern.
	* config/aarch64/aarch64.md (ctz<mode>2): New pattern.

2012-09-18  Marcus Shawcroft <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-linux.h (MULTIARCH_TUPLE): Remove.
	(STANDARD_STARTFILE_PREFIX_1): Likewise.
	(STANDARD_STARTFILE_PREFIX_2): Likewise.

2012-09-17  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (csinc3<mode>): Turn into named
	pattern.
	* config/aarch64/aarch64.md (ffs<mode>2): New pattern.

2012-09-17  Ian Bolton  <ian.bolton@arm.com>

	* config/aarch64/aarch64.md (fmsub<mode>4): Rename fnma<mode>4.
	* config/aarch64/aarch64.md (fnmsub<mode>4): Rename fms<mode>4.
	* config/aarch64/aarch64.md (fnmadd<mode>4): Rename fnms<mode>4.
	* config/aarch64/aarch64.md (*fnmadd<mode>4): New pattern.

2012-09-11  Sofiane Naci  <sofiane.naci@arm.com>

	* config.sub: Update to version 2010-08-18.
	* config.guess: Update to version 2010-08-14.

2012-09-10  James Greenhalgh  <james.greenhalgh@arm.com>
	    Richard Earnshaw  <rearnsha@arm.com>

	* common/config/aarch64/aarch64-common.c
	(aarch_option_optimization_table): New.
	(TARGET_OPTION_OPTIMIZATION_TABLE): Define.
	* gcc/config.gcc ([aarch64] target_has_targetm_common): Set to yes.
	* gcc/config/aarch64/aarch64-elf.h (ASM_OUTPUT_DEF): New definition.
	* gcc/config/aarch64/aarch64.c (TARGET_MIN_ANCHOR_OFFSET): Define.
	(TARGET_MAX_ANCHOR_OFFSET): Likewise.

2012-09-10  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_classify_address):
	Allow 16 byte modes in constant pool.

2012-07-23  Ian Bolton  <ian.bolton@arm.com>

	* gcc/config/aarch64/aarch64.c (aarch64_print_operand): Use
	aarch64_classify_symbolic_expression for classifying operands.

	* gcc/config/aarch64/aarch64.c
	(aarch64_classify_symbolic_expression): New function.

	* gcc/config/aarch64/aarch64.c (aarch64_symbolic_constant_p):
	New function.

	* gcc/config/aarch64/predicates.md (aarch64_valid_symref):
	Symbol with constant offset is a valid symbol reference.


2012-07-17  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c
	(aarch64_regno_ok_for_index_p): Handle NULL reg_renumber.
	(aarch64_regno_ok_for_base_p): Likewise.
	(offset_7bit_signed_scaled_p): New.
	(offset_9bit_signed_unscaled_p): New.
	(offset_12bit_unsigned_scaled_p): New.
	(aarch64_classify_address): Replace pair_p with allow_reg_index_p.
	Conservative test for valid TImode and TFmode addresses.  Use
	offset_7bit_signed_scaled_p offset_9bit_signed_unscaled_p and
	offset_12bit_unsigned_scaled_p.  Remove explicit TImode and TFmode
	tests.
	* config/aarch64/aarch64.md (movti_aarch64): Replace 'm' with 'Ump'.
	(movtf_aarch64): Replace 'm' with 'Ump', replace 'Utf' with 'm'.
	* config/aarch64/constraints.md (Utf): Remove.
	(Ump)

2012-07-17  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64.c (aarch64_rtx_costs):
	Move misplaced parenthesis.

2012-07-17  Marcus Shawcroft  <marcus.shawcroft@arm.com>

	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>):
	Do not emit lsl for a shift of 0.
	(*aarch64_simd_mov<mode>): Likwise.

2012-07-04  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-linux.h (LINUX_TARGET_LINK_SPEC): Rename 
	LINUX_DYNAMIC_LINKER to GLIBC_DYNAMIC_LINKER.

2012-06-29  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64.h (aarch64_cmodel): Fix enum name.

2012-06-22  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/aarch64-simd.md (aarch64_sq<r>dmulh_lane<mode>,
	aarch64_sqdml<SBINQOPS:as>l_lane<mode>_internal,
	aarch64_sqdmlal_lane<mode>, aarch64_sqdmlal_laneq<mode>,
	aarch64_sqdmlsl_lane<mode>, aarch64_sqdmlsl_laneq<mode>,
	aarch64_sqdml<SBINQOPS:as>l2_lane<mode>_internal,
	aarch64_sqdmlal2_lane<mode>, aarch64_sqdmlal2_laneq<mode>,
	aarch64_sqdmlsl2_lane<mode>, aarch64_sqdmlsl2_laneq<mode>,
	aarch64_sqdmull_lane<mode>_internal, aarch64_sqdmull_lane<mode>,
	aarch64_sqdmull_laneq<mode>, aarch64_sqdmull2_lane<mode>_internal,
	aarch64_sqdmull2_lane<mode>, aarch64_sqdmull2_laneq<mode>): Change the
	constraint of the indexed operand to use <vwl> instead of w.
	* config/aarch64/aarch64.c (aarch64_hard_regno_nregs): Add case for
	FP_LO_REGS class.
	(aarch64_regno_regclass): Return FP_LO_REGS if register in V0 - V15.
	(aarch64_secondary_reload): Change condition to check for both FP reg
	classes.
	(aarch64_class_max_nregs): Add case for FP_LO_REGS.
	* config/aarch64/aarch64.h (reg_class): New register class FP_LO_REGS.
	(REG_CLASS_NAMES): Likewise.
	(REG_CLASS_CONTENTS): Likewise.
	(FP_LO_REGNUM_P): New.
	* config/aarch64/aarch64.md (V15_REGNUM): New.
	* config/aarch64/constraints.md (x): New register constraint.
	* config/aarch64/iterators.md (vwx): New.

2012-06-22  Tejas Belagod  <tejas.belagod@arm.com>

	* config/aarch64/arm_neon.h (vpadd_f64): Remove.

2012-06-22  Sofiane Naci <sofiane.naci@arm.com>

	[AArch64] Update LINK_SPEC.

	* config/aarch64/aarch64-linux.h (LINUX_TARGET_LINK_SPEC): Remove
	%{version:-v}, %{b} and %{!dynamic-linker}.

2012-06-22  Sofiane Naci <sofiane.naci@arm.com>

	[AArch64] Replace sprintf with snprintf.

	* config/aarch64/aarch64.c
	(aarch64_elf_asm_constructor): Replace sprintf with snprintf.
	(aarch64_elf_asm_destructor): Likewise.
	(aarch64_output_casesi): Likewise.
	(aarch64_output_asm_insn): Likewise.
	* config/aarch64/aarch64-builtins.c (init_aarch64_simd_builtins):
	Likewise.
	* config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>): Replace
	sprintf with snprintf, and fix code layout.

2012-06-22  Sofiane Naci <sofiane.naci@arm.com>

	[AArch64] Fix documentation layout.

	* doc/invoke.texi: Fix white spaces after dots.
	Change aarch64*be-*-* to aarch64_be-*-*.
	Add documentation for -mcmodel=tiny.
	(-march): Fix formatting.
	(-mcpu): Likewise.
	(-mtune): Rephrase.
	(-march and -mcpu feature modifiers): New subsection.

2012-06-22  Sofiane Naci <sofiane.naci@arm.com>

	[AArch64] Use Enums for code models option selection.

	* config/aarch64/aarch64-elf-raw.h (AARCH64_DEFAULT_MEM_MODEL): Delete.
	* config/aarch64/aarch64-linux.h (AARCH64_DEFAULT_MEM_MODEL): Delete.
	* config/aarch64/aarch64-opts.h (enum aarch64_code_model): New.
	* config/aarch64/aarch64-protos.h: Update comments.
	* config/aarch64/aarch64.c: Update comments.
	(aarch64_default_mem_model): Rename to aarch64_code_model.
	(aarch64_expand_mov_immediate): Remove error message.
	(aarch64_select_rtx_section): Remove assertion and update comment.
	(aarch64_override_options): Move memory model initialization from here.
	(struct aarch64_mem_model): Delete.
	(aarch64_memory_models[]): Delete.
	(initialize_aarch64_memory_model): Rename to
	initialize_aarch64_code_model and update.
	(aarch64_classify_symbol): Handle AARCH64_CMODEL_TINY and
	AARCH64_CMODEL_TINY_PIC
	* config/aarch64/aarch64.h
	(enum aarch64_memory_model): Delete.
	(aarch64_default_mem_model): Rename to aarch64_cmodel.
	(HAS_LONG_COND_BRANCH): Update.
	(HAS_LONG_UNCOND_BRANCH): Update.
	* config/aarch64/aarch64.opt
	(cmodel): New.
	(mcmodel): Update.

2012-06-22  Sofiane Naci <sofiane.naci@arm.com>

	[AArch64] Use Enums for TLS option selection.

	* config/aarch64/aarch64-opts.h (enum aarch64_tls_type): New.
	* config/aarch64/aarch64.c
	(aarch64_tls_dialect): Remove.
	(tls_symbolic_operand_type): Update comment.
	(aarch64_override_options): Remove TLS option setup code.
	* config/aarch64/aarch64.h
	(TARGET_TLS_TRADITIONAL): Remove.
	(TARGET_TLS_DESC): Update definition.
	(enum tls_dialect): Remove.
	(enum tls_dialect aarch64_tls_dialect) Remove.
	* config/aarch64/aarch64.opt
	(tls_type): New.
	(mtls-dialect): Update.

2012-05-25  Ian Bolton  <ian.bolton@arm.com>
	    Jim MacArthur  <jim.macarthur@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@arm.com>
	    Nigel Stephens  <nigel.stephens@arm.com>
	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
	    Richard Earnshaw  <rearnsha@arm.com>
	    Sofiane Naci  <sofiane.naci@arm.com>
	    Stephen Thomas  <stephen,thomas@arm.com>
	    Tejas Belagod  <tejas.belagod@arm.com>
	    Yufeng Zhang  <yufeng.zhang@arm.com>

	* common/config/aarch64/aarch64-common.c: New file.
	* config/aarch64/aarch64-arches.def: New file.
	* config/aarch64/aarch64-builtins.c: New file.
	* config/aarch64/aarch64-cores.def: New file.
	* config/aarch64/aarch64-elf-raw.h: New file.
	* config/aarch64/aarch64-elf.h: New file.
	* config/aarch64/aarch64-generic.md: New file.
	* config/aarch64/aarch64-linux.h: New file.
	* config/aarch64/aarch64-modes.def: New file.
	* config/aarch64/aarch64-option-extensions.def: New file.
	* config/aarch64/aarch64-opts.h: New file.
	* config/aarch64/aarch64-protos.h: New file.
	* config/aarch64/aarch64-simd.md: New file.
	* config/aarch64/aarch64-tune.md: New file.
	* config/aarch64/aarch64.c: New file.
	* config/aarch64/aarch64.h: New file.
	* config/aarch64/aarch64.md: New file.
	* config/aarch64/aarch64.opt: New file.
	* config/aarch64/arm_neon.h: New file.
	* config/aarch64/constraints.md: New file.
	* config/aarch64/gentune.sh: New file.
	* config/aarch64/iterators.md: New file.
	* config/aarch64/large.md: New file.
	* config/aarch64/predicates.md: New file.
	* config/aarch64/small.md: New file.
	* config/aarch64/sync.md: New file.
	* config/aarch64/t-aarch64-linux: New file.
	* config/aarch64/t-aarch64: New file.
	* config.gcc: Add AArch64.
	* configure.ac: Add AArch64 TLS support detection.
	* configure: Regenerate.
	* doc/extend.texi (Complex Numbers): Add AArch64.
	* doc/invoke.texi (AArch64 Options): New.
	* doc/md.texi (Machine Constraints): Add AArch64.

















